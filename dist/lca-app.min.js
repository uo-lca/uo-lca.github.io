/*! lca-app - v0.0.4 - 2015-09-07
 * http://uo-lca.github.io/
 * Copyright (c) (2015) California Department of Resources Recycling and Recovery (CalRecycle). All rights reserved.
 */
"use strict";angular.module("lcaApp",["lcaApp.config","lcaApp.info.directive","LocalStorageModule","ui.router","lcaApp.html","lcaApp.home","lcaApp.format","lcaApp.compositionProfiles","lcaApp.fragment.sankey","lcaApp.LCIA.comparison","lcaApp.process.instance","lcaApp.process.LCIA","lcaApp.process.flowParam","lcaApp.fragment.LCIA","lcaApp.lciaMethod.detail","lcaApp.scenario.detail","lcaApp.scenario.edit"]).config(["$stateProvider","$urlRouterProvider","localStorageServiceProvider",function($stateProvider,$urlRouterProvider,localStorageServiceProvider){$urlRouterProvider.otherwise(function($injector,$location){var homeURL="/home",searchObject=$location.search();return searchObject&&(searchObject.hasOwnProperty("auth")&&(homeURL="/home?auth="+searchObject.auth),searchObject.hasOwnProperty("di")&&(homeURL=homeURL+"&di="+searchObject.di)),homeURL}),$stateProvider.state("home",{url:"/home?auth&di",templateUrl:"home/home.html",controller:"HomeCtrl"}).state("home.composition-profiles",{url:"/composition-profiles?scenarioID&flowID",views:{"@":{templateUrl:"composition-profiles/composition-profiles.html",controller:"CompositionProfilesController"}}}).state("home.fragment-sankey",{url:"/fragment-sankey?scenarioID&fragmentID",views:{"@":{templateUrl:"fragment-sankey/fragment-sankey.html",controller:"FragmentSankeyController"}}}).state("home.fragment-sankey.process-instance",{url:"/process-instance/{fragmentFlowID}?activity",views:{"@":{templateUrl:"process-instance/process-instance.html",controller:"ProcessInstanceController"}}}).state("home.fragment-sankey.process-instance.flow-param",{url:"/flow-param/{processID}/{lciaMethodID}",views:{"@":{templateUrl:"process-flow-param/process-flow-param.html",controller:"ProcessFlowParamController"}}}).state("home.fragment-sankey.fragment-lcia",{url:"/fragment-lcia",views:{"@":{templateUrl:"fragment-lcia/fragment-lcia.html",controller:"FragmentLciaController"}}}).state("home.lcia-comparison",{url:"/lcia-comparison",views:{"@":{templateUrl:"lcia-comparison/lcia-comparison.html",controller:"LciaComparisonController"}}}).state("home.process-lcia",{url:"/process-lcia?scenarioID&processID&activity",views:{"@":{templateUrl:"process-lcia/process-lcia.html",controller:"ProcessLciaController"}}}).state("home.process-lcia.flow-param",{url:"/flow-param/{scenarioID}/{processID}/{lciaMethodID}",views:{"@":{templateUrl:"process-flow-param/process-flow-param.html",controller:"ProcessFlowParamController"}}}).state("home.fragment-lcia",{url:"/fragment-lcia?scenarioID&fragmentID",views:{"@":{templateUrl:"fragment-lcia/fragment-lcia.html",controller:"FragmentLciaController"}}}).state("home.lcia-method",{url:"/lcia-method/{lciaMethodID}",views:{"@":{templateUrl:"lcia-method/lcia-method-detail.html",controller:"LciaMethodDetailController"}}}).state("home.new-scenario",{url:"/scenario/new",views:{"@":{templateUrl:"scenario/scenario-edit.html",controller:"ScenarioEditController"}}}).state("home.scenario",{url:"/scenario/{scenarioID}",views:{"@":{templateUrl:"scenario/scenario-detail.html",controller:"ScenarioDetailController"}}}).state("home.scenario.edit",{url:"/edit",views:{"@":{templateUrl:"scenario/scenario-edit.html",controller:"ScenarioEditController"}}}),localStorageServiceProvider.setPrefix("UsedOilLCA")}]).controller("LcaAppController",["$rootScope","HELP_ROOT","INFO_MSG","$location","localStorageService",function($rootScope,HELP_ROOT,INFO_MSG,$location,localStorageService){var urlParam=$location.search(),diStorageKey="displayInfo",displayInfo=!0;$rootScope.helpPage=HELP_ROOT,$rootScope.infoMsg=INFO_MSG,urlParam.hasOwnProperty("di")?"n"==urlParam.di.toLowerCase()[0]&&(displayInfo=!1):displayInfo="false"!==localStorageService.get(diStorageKey),$rootScope.displayInfo=displayInfo,$rootScope.toggleDisplayInfo=function(){$rootScope.displayInfo=!$rootScope.displayInfo,localStorageService.set(diStorageKey,$rootScope.displayInfo)},$rootScope.$on("$stateChangeStart",function(event,toState){var lastPos=toState.name.lastIndexOf("."),helpPage=HELP_ROOT;if(lastPos>=0){var context=toState.name.slice(lastPos+1);switch(context){case"fragment-sankey":helpPage+="/Fragment";break;case"fragment-lcia":helpPage+="/LCIA#fragment-lcia";break;case"lcia-method":helpPage+="/LCIA#lcia-method";break;case"process-instance":case"process-lcia":helpPage+="/Process";break;case"flow-param":helpPage+="/LCIA#lcia-flow-details";break;case"scenario":helpPage+="/Scenario"}}$rootScope.helpPage=helpPage})}]),angular.module("lcaApp.changeButtons.directive",[]).directive("changeButtons",function(){return{restrict:"E",scope:{canApply:"&",applyChanges:"&",canRevert:"&",revertChanges:"&"},template:'<div class="pull-right">  <button type="button" class="btn btn-success btn-sm" ng-disabled="!canApply()" ng-click="applyChanges()">Apply Changes</button>  <button type="button" class="btn btn-danger btn-sm" ng-click="revertChanges()" ng-disabled="!canRevert()">Revert Changes</button></div>'}}),angular.module("lcaApp.colorCode.service",[]).constant("IMPACT_CATEGORY_COLORS",{1:colorbrewer.Purples,2:colorbrewer.YlGn,3:colorbrewer.GnBu,4:colorbrewer.Greens,5:colorbrewer.YlOrBr,6:colorbrewer.Reds,7:colorbrewer.YlOrRd,8:colorbrewer.Blues,9:colorbrewer.YlOrBr,10:colorbrewer.BuGn,11:colorbrewer.PuBuGn,12:colorbrewer.YlGnBu,13:colorbrewer.Greys,14:colorbrewer.Greens}).constant("FRAGMENT_NODE_TYPE_COLORS",{Fragment:colorbrewer.Set2[3][0],InputOutput:colorbrewer.Set2[3][1],Process:colorbrewer.Set2[3][2]}).constant("FRAGMENT_FLOW_COLORS",{positive:colorbrewer.Set2[8][6],negative:colorbrewer.Set2[8][7]}).factory("ColorCodeService",["IMPACT_CATEGORY_COLORS",function(IMPACT_CATEGORY_COLORS){var svc={};return svc.getImpactCategoryColors=function(impactCategoryID){return impactCategoryID in IMPACT_CATEGORY_COLORS?IMPACT_CATEGORY_COLORS[impactCategoryID]:void 0},svc}]),angular.module("d3.tip",[]).factory("TipService",[function(){return d3.tip().attr("class","d3-tip")}]),angular.module("d3",[]).factory("d3Service",[function(){function textWrap(text,width){text.each(function(){for(var word,text=d3.select(this),words=text.text().split(/\s+/).reverse(),line=[],lineNumber=0,lineHeight=1.1,x=text.attr("x"),y=text.attr("y"),dy=parseFloat(text.attr("dy")),tspan=text.text(null).append("tspan").attr("x",x).attr("y",y).attr("dy",0);word=words.pop();)line.push(word),tspan.text(line.join(" ")),tspan.node().getComputedTextLength()>width&&(line.pop(),tspan.text(line.join(" ")),line=[word],tspan=text.append("tspan").attr("x",x).attr("y",y).text(word),++lineNumber);lineNumber>0&&text.selectAll("tspan").attr("dy",function(d,i){return i*lineHeight-dy+"em"})})}return d3.hasOwnProperty("textWrap")||(d3.textWrap=textWrap),d3}]),angular.module("lcaApp.format",["d3"]).factory("FormatService",["d3Service",function(d3Service){var svc={};return svc.format=function(spec){var formatSpec=spec||".4g";return d3Service.format(formatSpec)},svc}]).filter("numFormat",["FormatService",function(FormatService){return function(input,spec){var formatter=FormatService.format(spec);return input?formatter(input):input}}]),angular.module("lcaApp.fragmentNavigation.service",[]).factory("FragmentNavigationService",[function(){var svc={},stack=[],context={fragmentID:0,scenarioID:0};return svc.setContext=function(scenarioID,fragmentID){var sID=+scenarioID,fID=+fragmentID;return(context.fragmentID&&fID!==context.fragmentID||context.scenarioID&&sID!==context.scenarioID)&&(stack=[]),context.fragmentID=fID,context.scenarioID=sID,svc},svc.getContext=function(){return context},svc.add=function(state){stack.push(state)},svc.getLast=function(){return stack.length>0?stack[stack.length-1]:null},svc.setLast=function(index){return stack.splice(index+1),svc},svc.getAll=function(){return stack},svc}]),angular.module("lcaApp.idmap.service",[]).factory("IdMapService",function(){var idMap={};return{add:function(routeKey,idName,objectArray){return idMap.hasOwnProperty(routeKey)||(idMap[routeKey]={}),objectArray.forEach(function(d){if(d.hasOwnProperty(idName)){var idVal=d[idName];idMap[routeKey][idVal]=d}}),idMap[routeKey]},clear:function(routeKey){return idMap[routeKey]={},idMap[routeKey]},get:function(routeKey,idValue){return idMap.hasOwnProperty(routeKey)&&idMap[routeKey].hasOwnProperty(idValue)?idMap[routeKey][idValue]:null}}}),angular.module("lcaApp.info.directive",[]).constant("INFO_MSG",{sort:"Click on the column headers to sort by column.",home:{msg:"This is the home page of Used Oil LCA, an online tool for assessing the potential environmental impacts of recycling motor oil.  Use the navigation bar (above) to explore the model, view impact assessment results, and see other model information.",msg1:"The model is built from a network of 'proceses' linked by 'flows.'  The network can be broken down into 'fragments' that each describe different parts of the model, such as used oil collection or improper disposal.  Each fragment looks like a tree and can be visualized as a flow diagram.  Fragments can be nested inside other fragments, in which case they are called 'sub-fragments.'",msg2:"Every process has input and output flows, such as oil, concrete, or transportation services.  Some processes also have environmental emissions, such as cobalt released into fresh water or carbon dioxide released to air.  These emissions, also called 'elementary flows,' are the source of all environmental impacts.",msg3:"The purpose of life cycle assessment is to analyze a process-flow network, compute the environmental emissions that result from the included processes, and then estimate the potential environmental impacts of the resulting emissions. Environmental impacts are estimated using life cycle impact assessment methods, or LCIA methods.  The LCIA methods implemented by this tool are shown in a table at the bottom of this page.",help:"Most of the features in this app are documented with information messages. Information messages have a blue icon and grey background.  You can toggle the display of these messages using the 'i' button at the end of the navigation panel on the top of the page.",scenarios:{msg:"A scenario is a view of a particular 'top-level' fragment at a specific activity level.  The 'model base case' scenario describes the reference version of the models.  Other scenarios can include modifications of the default settings known as 'parameters.'  The following scenarios are available to be viewed. If you have authorized access, you can create a new scenario ('New' button on title bar) or clone an existing scenario ('copy' button on the right).",msg2:"Click on a scenario name to view details about the scenario, or on the top-level fragment to view the process-flow network.",detail:"This panel shows information about the scenario, including the scenario description, top-level fragment, activity level, and any parameters used to define the scenario. You can also edit the scenario if you are authorized to do so.",params:"Scenarios are defined in terms of their deviations from the base case model, called paramters. Each parameter that has been modified from the base case is shown below.  If you are authorized to edit the scenario, you may update parameter names and values here.",paramTypes:"There are five different parameter types:",ffParam:"Dependency parameters modify fragment flows. A dependency parameter affects the degree that one process depends on another node in a fragment.",fpParam:"Flow Property parameters affect physical characteristics of certain flows. Typically these are used to modify flow composition measurements. ",peParam:"Process Emission parameters modify the quantity of a specific emission that results from a unit activity of a certain process.",pdParam:"Process Dissipation parameters modify the degree that a specific composition flow property is dissipated into an environmental emission by a particular process.  They function similarly to process emission parameters.",lcParam:"LCIA Factor parameters modify the characterization factor for a certain emission with respect to a certain LCIA method."},lciaMethods:{msg:"Potential environmental impacts are assessed using the LCIA Methods below.  Methods marked as 'active' will show up in LCIA result screens, while other methods will be hidden.",msg1:"Click on a method name to view details and characterization factors.",detail:"These are the details of the selected LCIA method. Click on the ILCD reference link to view the ILCD data file.",factors:"The flows listed below are the potential environmental stressors for this LCIA method.  Characterization factors are the impact scores that the LCIA method assigns to each stressor.  These can be modified on a scenario-specific basis for scenarios you are authorized to edit."}},fragmentSankey:{msg:"This view allows you to explore and navigate the inventory model.  Click on a process node (blue) to view details about the process. Click on a sub-fragment (green) to descend into the sub-fragment.  ",msg1:"Fragments are parts of an inventory model built as a tree. Nodes in the tree are processes or sub-fragments. Fragment flows are links between nodes.  Flows that don't connect to nodes at one end or the other become inputs or outputs that cross the fragment's system boundary.  Here the flows are shown as a sankey diagram.  You can view detailed environmental impacts for the fragment by clicking 'Show fragment LCIA.'",msg2:"The scenario selector can be used to navigate through any scenario model, starting at its top-level fragment.  Hover the mouse over a node to view the magnitudes of the flows entering and leaving that node.  As you navigate through the model, click on the fragment name in the header block to return to a parent fragment.  You can view flows in different units of measure by using the Flow Property selector.",msg3:"",fragmentFlows:{msg:"Table of flows shown in the above diagram.  Flow magnitudes are reported in the units selected by the Flow Property selector."}},processInstance:{msg:"Detailed information on the flows coming in and out of this process.  Flows that link to other nodes in the fragment are shown in the first table. Below that are detailed life cycle impact assessment results.  Click on a fragment name to return to the flow diagram. Click on the ILCD reference link to view the ILCD data file that describes the process, which may provide more information.",flows:"This table shows the set of fragment flows that form inputs and outputs of this process.  ",flows1:"Each flow listed here corresponds to a flow on the sankey diagram (though 'cutoff' flows are not displayed on the sankey diagram).  The process 'activity level' is determined by the magnitude of the reference flow.  Other flow magnitudes equal the activity level times the flow 'quantity.'  If you are authorized to edit the scenario, you can modify the quantity values.  ",balance:"If the process is a conservation process, then the inflows to the process will equal the outflows.  The flow marked 'balance' is computed from the other flows to enforce the balance. The balance flow's reference unit is the property that's conserved.",dissipation:"This process includes some emissions derived from the dissipation of flow constituents.",diss1:"Dissipation flows are calculated based on the composition of an inflow.  The composition model referenced by the process is linked in the title above. Here you can view and edit dissipation factors for the process.  ",diss2:"The emission quantity equals the composition content (flow property value), times the dissipation factor, times the scale. 'Scale' is the stoichiometric ratio between the flow property and the emission: e.g. during combustion, carbon (molecular weight 12) becomes carbon dioxide (molecular weight  44; scale = 44/12 = 3.667).",lcia:"Here the environmental impacts that result directly from this process are visualized.  Each active LCIA method is used to estimate the impacts from the process's emissions and the results are shown on a panel below. If the process is not private, the contributions of individual emissions will be shown in a colored horizontal bar.  Clicking on 'Flow Details' will show details of the computation."},processFlowParam:{msg:"This view reports the details of environmental impacts resulting from the process instance.  Emissions reported here include the process's direct emissions, as well as emissions from any upstream processes that were 'rolled up' into this one. Only emissions that are characterized with respect to the selected LCIA method are shown.",emission:"This panel reports the impacts of emissions modeled as direct emission factors.  The LCIA result equals the emission factor, times the process activity level, times the LCIA factor.  If you are authorized to edit the current scenario, you may modify emission factors here.",dissipation:"This panel reports the impacts of emissions modeled as dissipation flows.  The LCIA result equals the content, times the dissipation factor, times the process activity level, times the LCIA factor.  If you are authorized to edit the current scenario, you may modify dissipation factors here."},compositionProfile:{msg:"This page reports the composition profiles used to calculate the dissipation of flow constituents from combustion and dumping.  Select a flow from the dropdown list and view the flow's properties in the table below.",content:"This table shows the flow's non-reference properties in terms of quantity per unit of the reference property.  These values can be modified on a scenario-specific basis  for scenarios you are authorized to edit. ",ncv:"Note: Because of the way the current model is designed, flow property parameters that modify heating values will (regrettably) not have the desired effect."},fragmentLcia:{msgScenario:"This view allows you to compare the LCIA results for different scenarios.  Only scenarios with the same top-level fragment may be compared.  Select a top-level fragment from the drop-down list, and then select one or more scenarios to be compared.",msgFragment:"This view shows the detailed impacts, grouped by life cycle stage, from the currently selected fragment for the current scenario.  You can navigate to a sub-fragment by selecting it from the drop-down list, or to the parent fragment by clicking on the fragment name.  If the currently selected scenario is not the model base case, then the base case is shown at the same activity level for comparison. ",waterfall:"Results are shown as a waterfall chart.  Processes are grouped together by life cycle stage. The chart begins at 0 at the top, and each life cycle stage is added in turn down the waterfall, with one stage beginning where the previous stage left off. Stages with net positive impacts add bars moving to the right, and stages with net negative impacts have bars moving to the left.  The net total is indicated by the red triangle at the bottom of the chart.",xport:"The numerical results reported in the waterfall chart can be exported to a CSV file for external use.",lcia:"You can dismiss individual LCIA method panels using the X at the top right corner. "},processLcia:{msg:"This view provides detailed access to the environmental impacts of individual unit processes used in the model, outside of the context of the process-flow network.  Select an individual process to view, and a set of scenario parameters to apply, and view the results below for each active LCIA method.",flows:"This table shows the inputs and outputs to the process -- flows that are exchanged with other processes, rather than emissions to the environment. When an instance of this process appears in a fragment, these form the fragment flows."}}).directive("info",["$compile",function(){return{restrict:"E",template:'<div class="well well-sm" ng-show="displayInfo"><span class="glyphicon glyphicon-info-sign glyphicon-info-color" aria-hidden="true"></span><span class="sr-only">Information:</span><span ng-transclude></span></div>',transclude:!0,link:function(scope){scope.close=function(){scope.msg=null}}}}]),angular.module("lcaApp.lciaBar.directive",["lcaApp.format","lcaApp.name"]).directive("lciaBarChart",["FormatService","NameService",function(FormatService,NameService){function link(scope,element){function prepareSvg(){svg=d3.select(parentElement).append("svg").attr("width",width+margin.left+margin.right).attr("height",svgHeight+margin.top+margin.bottom),svg.append("g").attr("class","chart-group").attr("transform","translate("+margin.left+","+margin.top+")").append("text").attr("id","chart-header").style("font-weight","bold").text("LCIA Details (positive scores)"),svg.append("g").attr("class","x axis").attr("transform","translate("+margin.left+","+(chartHeight+margin.top-margin.bottom)+")"),svg.append("g").attr("class","legend-group").attr("transform","translate("+margin.left+","+(chartHeight+margin.top)+")")}function rollUpResults(){var details=[],rolledImpact={flowID:0,result:0};return scope.lcia.positiveResults.forEach(function(d){d.result>=threshold?details.push(d):(rolledImpact.result+=d.result,rolledImpact.hasParam=rolledImpact.hasParam||d.hasParam)}),rolledImpact.result>0&&details.push(rolledImpact),details}function compareLciaResults(a,b){return d3.descending(a.result,b.result)}function drawBar(displayResults){var flowList,rectSelection,reverseColors,runningTotal=0,colorClassSize=9;displayResults.sort(compareLciaResults),flowList=displayResults.map(function(d){return d.flowID}),colorScale.domain(flowList),3>flowList.length?colorClassSize=3:9>flowList.length&&(colorClassSize=flowList.length),reverseColors=scope.lcia.colors()[colorClassSize].slice(),reverseColors.reverse(),colorScale.range(reverseColors),displayResults.forEach(function(d){d.x0=runningTotal,runningTotal+=d.result,d.x1=runningTotal}),svg.select(".x.axis").call(xAxis),rectSelection=svg.select(".chart-group").selectAll("rect").data(displayResults),rectSelection.enter().append("rect"),rectSelection.exit().remove(),rectSelection.attr("width",function(d){return xScale(d.x1)-xScale(d.x0)}).attr("x",function(d){return xScale(d.x0)}).attr("y",barY).attr("height",barHeight).style("fill",function(d){return colorScale(d.flowID)})}function makeLegendHeader(catX,flowX,resultX,headerY){var legendGroup=svg.select(".legend-group");legendGroup.append("text").attr({"class":"legend-header",x:catX,y:headerY}).text("Flow Category"),legendGroup.append("text").attr({"class":"legend-header",x:flowX,y:headerY}).text("Name"),legendGroup.append("text").attr({"class":"legend-header",x:resultX,y:headerY}).text("LCIA Result")}function makeLegend(flowData){var legend,newRows,rowHeight=legendRowHeight,boxSize=18,colPadding=textPadding,textY=9,colXs=[0,boxSize+colPadding,width-350,width-95];makeLegendHeader(colXs[1],colXs[2],colXs[3],textY),legend=svg.select(".legend-group").selectAll(".legend").data(flowData),newRows=legend.enter().append("g").attr("class","legend"),newRows.filter(function(d){return d.result>0&&xScale(d.x1)-xScale(d.x0)>1}).append("rect").attr("x",colXs[0]).attr("width",boxSize).attr("height",boxSize),newRows.append("text").attr("x",colXs[1]).attr("y",textY).attr("dy",".35em").attr("class","category"),newRows.append("text").attr("x",colXs[2]).attr("y",textY).attr("dy",".35em").attr("class","flow-name"),newRows.append("text").attr("x",colXs[3]).attr("y",textY).attr("dy",".35em").attr("class","lcia-result"),legend.attr("transform",function(d,i){var rowY=(i+1)*rowHeight;return"translate(0,"+rowY+")"}),legend.selectAll("rect").style("fill",function(d){return colorScale(d.flowID)}),legend.selectAll(".category").text(function(d){if(0===d.flowID)return"Aggregate";if(d.flowID in scope.flows){var catName=scope.flows[d.flowID].category;return NameService.shorten(catName,30)}}),legend.selectAll(".flow-name").text(function(d){return 0===d.flowID?"flows having score < "+threshold:d.flowID in scope.flows?scope.flows[d.flowID].name:void 0}),legend.selectAll(".lcia-result").style("font-weight",function(d){return d.hasParam?"bold":"normal"}).text(function(d){return legendFormat(d.result)})}var margin={top:30,right:30,bottom:30,left:30},parentElement=element[0],width=parentElement.clientWidth-margin.left-margin.right,svgHeight=parentElement.clientHeight-margin.top-margin.bottom,chartHeight=90,barY=10,barHeight=30,textPadding=6,legendRowHeight=20,colorScale=d3.scale.ordinal(),xScale=d3.scale.linear().rangeRound([0,width]),labelFormat=FormatService.format("^.2g"),legendFormat=FormatService.format(),xAxis=d3.svg.axis().scale(xScale).orient("bottom").ticks(4).tickFormat(labelFormat),svg=null,threshold=0;scope.$watch("lcia",function(newVal){if(svg&&(svg.remove(),svg=null),newVal!==void 0&&newVal&&"positiveResults"in scope.lcia&&scope.lcia.positiveResults.length>0){xScale.domain([0,+scope.lcia.positiveSum]),threshold=(+scope.lcia.positiveSum/width).toPrecision(4);var displayResults=rollUpResults();displayResults.length>0&&(svgHeight=chartHeight+legendRowHeight*(displayResults.length+1),prepareSvg(),drawBar(displayResults),"flows"in scope&&makeLegend(displayResults))}})}return{restrict:"E",scope:{lcia:"=",flows:"="},link:link}}]),angular.module("lcaApp.lciaDetail.service",["lcaApp.models.param"]).factory("LciaDetailService",["ParamModelService",function(ParamModelService){function Instance(){function flowHasParam(flowID){var fpParams=ParamModelService.getFlowPropertyParams(scenarioID,flowID);return fpParams&&fpParams.length||model.processFlowParams&&flowID in model.processFlowParams||model.methodFlowParams&&flowID in model.methodFlowParams}function getFlowParams(){model.processFlowParams=ParamModelService.getProcessFlowParams(scenarioID,processID),model.methodFlowParams=ParamModelService.getLciaMethodFlowParams(scenarioID,lciaMethodID)}var model={},activityLevel=1,colors=[],scenarioID=0,processID=0,lciaMethodID=0,resultDetails=[];return model.activityLevel=function(_){return arguments.length?(activityLevel=_,model):activityLevel},model.colors=function(_){return arguments.length?(colors=_,model):colors},model.scenarioID=function(_){return arguments.length?(scenarioID=_,model):scenarioID},model.processID=function(_){return arguments.length?(processID=_,model):processID},model.lciaMethodID=function(_){return arguments.length?(lciaMethodID=_,model):lciaMethodID},model.resultDetails=function(_){return arguments.length?(resultDetails=_,model):resultDetails},model.prepareBarChartData=function(){var positiveResults=[],positiveSum=0;return resultDetails.length>0&&(getFlowParams(),positiveResults=resultDetails.filter(function(el){return el.result>0}),positiveResults.forEach(function(p){p.result=p.result*activityLevel,positiveSum+=p.result,p.hasParam=flowHasParam(p.flowID)})),model.positiveResults=positiveResults,model.positiveSum=positiveSum,model},model}return{createInstance:function(){return new Instance}}}]),angular.module("lcaApp.modal.confirm",["ui.bootstrap"]).controller("ModalConfirmController",function($scope,$modalInstance,parameters){var result=null;$scope.title="Confirmation Dialog",$scope.question="Are you sure?",$scope.ok=function(){$modalInstance.close(result)},$scope.cancel=function(){$modalInstance.dismiss("cancel")},parameters.hasOwnProperty("title")&&($scope.title=parameters.title),parameters.hasOwnProperty("question")&&($scope.question=parameters.question),parameters.hasOwnProperty("result")&&(result=parameters.result)}),angular.module("lcaApp.models.lcia",["lcaApp.resources.service","lcaApp.status.service"]).factory("LciaModelService",["LciaTotalForProcessService","LciaTotalForFragmentService","$q",function(LciaTotalForProcessService,LciaTotalForFragmentService,$q){function getNestedResults(parent,filter,type){return parent.hasOwnProperty(type)&&parent[type].hasOwnProperty(filter)?parent[type][filter]:null}function setNestedResults(parent,filter,type,results){var p=nest(parent,type);p[filter]=results}function nest(parent,property){return property in parent||(parent[property]={}),parent[property]}function updateModel(filter,response){if(filter&&filter.hasOwnProperty("scenarioID")){var m=nest(scenarios,filter.scenarioID);filter.hasOwnProperty("processID")?setNestedResults(m,filter.processID,"processes",response):filter.hasOwnProperty("fragmentID")&&setNestedResults(m,filter.fragmentID,"fragments",response)}}var svc={},scenarios={};return svc.load=function(filter){var deferred=$q.defer(),resourceSvc=null;if(filter.hasOwnProperty("processID")?resourceSvc=LciaTotalForProcessService:filter.hasOwnProperty("fragmentID")?resourceSvc=LciaTotalForFragmentService:deferred.reject("Invalid filter : "+filter),resourceSvc){var loaded=svc.get(filter);loaded?deferred.resolve(loaded):resourceSvc.reload(filter).then(function(response){updateModel(filter,response),deferred.resolve(response)},function(err){deferred.reject("LCIA Model load failed. "+err)})}return deferred.promise},svc.get=function(filter){var results=null;if(filter&&filter.hasOwnProperty("scenarioID")&&scenarios.hasOwnProperty(filter.scenarioID)){var sr=scenarios[filter.scenarioID];filter.hasOwnProperty("processID")?results=getNestedResults(sr,filter.processID,"processes"):filter.hasOwnProperty("fragmentID")&&(results=getNestedResults(sr,filter.fragmentID,"fragments"))}return results},svc.clearCache=function(scenarioID){scenarios.hasOwnProperty(scenarioID)&&(scenarios[scenarioID]={})},svc}]),angular.module("lcaApp.models.param",["lcaApp.resources.service","lcaApp.status.service","lcaApp.models.scenario","lcaApp.models.lcia"]).constant("PARAM_VALUE_STATUS",{unchanged:1,changed:2,invalid:3}).constant("PARAM_TYPE_NAME",{1:"Dependency",2:"Conservation",3:"Distribution",4:"Flow Property",5:"Composition",6:"Process Dissipation",8:"Process Emission",10:"LCIA Factor"}).factory("ParamModelService",["ParamService","PARAM_VALUE_STATUS","$q","ScenarioModelService","LciaModelService",function(ParamService,PARAM_VALUE_STATUS,$q,ScenarioModelService,LciaModelService){function nest(parent,property){return property in parent||(parent[property]={}),parent[property]}function associateByFlow(parent,param){"flowID"in param&&(nest(parent,"flows"),10===param.paramTypeID?parent.flows[param.flowID]=param:(nest(nest(parent.flows,param.flowID),"paramTypes"),parent.flows[param.flowID].paramTypes[param.paramTypeID]=param))}function updateModel(scenarioID,params){if(params&&params.length>0){var m={};params.forEach(function(p){p.hasOwnProperty("processID")?(nest(nest(m,"processes"),p.processID),associateByFlow(m.processes[p.processID],p)):p.hasOwnProperty("lciaMethodID")?(nest(nest(m,"lciaMethods"),p.lciaMethodID),associateByFlow(m.lciaMethods[p.lciaMethodID],p)):p.hasOwnProperty("fragmentFlowID")?(nest(m,"fragmentFlows"),m.fragmentFlows[p.fragmentFlowID]=p):p.hasOwnProperty("flowPropertyID")&&p.hasOwnProperty("flowID")&&(nest(nest(nest(nest(m,"flows"),p.flowID),"flowProperties"),p.flowPropertyID),m.flows[p.flowID].flowProperties[p.flowPropertyID]=p)}),model.scenarios[scenarioID]=m}else model.scenarios[scenarioID]=null;origResources.scenarios[scenarioID]=params}function hasChangedParam(o){return o.paramWrapper.editStatus===PARAM_VALUE_STATUS.changed}function copyValue(baseValue,paramWrapper,copy){svc.valueInput(paramWrapper)||(paramWrapper.value=""+baseValue,paramWrapper.copy=copy)}var svc={},model={scenarios:{}},origResources={scenarios:{}};return svc.valueInput=function(paramWrapper){return paramWrapper.enableEdit&&""!==paramWrapper.value},svc.changeFragmentFlowParam=function(f,scenarioID){var paramResource=svc.changeExistingParam(f.paramWrapper);return paramResource||(paramResource={scenarioID:scenarioID,fragmentFlowID:f.fragmentFlowID,value:+f.paramWrapper.value,paramTypeID:1}),paramResource},svc.changeExistingParam=function(paramWrapper){var paramResource=paramWrapper.paramResource;return paramResource&&(paramResource.value=svc.valueInput(paramWrapper)?+paramWrapper.value:null),paramResource},svc.createModel=function(scenarioID,params){return updateModel(scenarioID,params),model.scenarios[scenarioID]},svc.getModel=function(scenarioID){return scenarioID in model.scenarios?model.scenarios[scenarioID]:null
},svc.load=function(scenarioID){var deferred=$q.defer();return ParamService.load({scenarioID:scenarioID}).then(function(response){deferred.resolve(svc.createModel(scenarioID,response))},function(err){deferred.reject("Param Model load failed. "+err)}),deferred.promise},svc.getProcessFlowParams=function(scenarioID,processID){var sModel=svc.getModel(scenarioID);return sModel&&sModel.hasOwnProperty("processes")&&sModel.processes.hasOwnProperty(processID)&&sModel.processes[processID].hasOwnProperty("flows")?sModel.processes[processID].flows:null},svc.getFlowPropertyParams=function(scenarioID,flowID){var sModel=svc.getModel(scenarioID);return sModel&&sModel.hasOwnProperty("flows")&&sModel.flows.hasOwnProperty(flowID)&&sModel.flows[flowID].hasOwnProperty("flowProperties")?sModel.flows[flowID].flowProperties:null},svc.getLciaMethodFlowParams=function(scenarioID,lciaMethodID){var sModel=svc.getModel(scenarioID);return sModel&&sModel.hasOwnProperty("lciaMethods")&&sModel.lciaMethods.hasOwnProperty(lciaMethodID)&&sModel.lciaMethods[lciaMethodID].hasOwnProperty("flows")?sModel.lciaMethods[lciaMethodID].flows:null},svc.getLciaMethodFlowParam=function(scenarioID,lciaMethodID,flowID){var params=svc.getLciaMethodFlowParams(scenarioID,lciaMethodID);return params&&params.hasOwnProperty(flowID)?params[flowID]:null},svc.getProcessFlowParam=function(scenarioID,processID,flowID,paramTypeID){var params=svc.getProcessFlowParams(scenarioID,processID);return params&&params.hasOwnProperty(flowID)&&params[flowID].hasOwnProperty("paramTypes")&&params[flowID].paramTypes.hasOwnProperty(paramTypeID)?params[flowID].paramTypes[paramTypeID]:null},svc.getFragmentFlowParam=function(scenarioID,fragmentFlowID){var sModel=svc.getModel(scenarioID),param=null;if(sModel&&sModel.hasOwnProperty("fragmentFlows")){var params=sModel.fragmentFlows;params.hasOwnProperty(fragmentFlowID)&&(param=params[fragmentFlowID])}return param},svc.setParamWrapperStatus=function(baseValue,paramWrapper){var msg=null;return svc.valueInput(paramWrapper)?isNaN(paramWrapper.value)?(msg="Parameter value, "+paramWrapper.value+", is not numeric.",paramWrapper.editStatus=PARAM_VALUE_STATUS.invalid):paramWrapper.paramResource?paramWrapper.editStatus=paramWrapper.paramResource.value===+paramWrapper.value?PARAM_VALUE_STATUS.unchanged:PARAM_VALUE_STATUS.changed:+paramWrapper.value!==baseValue||paramWrapper.copy?paramWrapper.editStatus=PARAM_VALUE_STATUS.changed:(paramWrapper.value="",paramWrapper.editStatus=PARAM_VALUE_STATUS.unchanged):paramWrapper.editStatus=paramWrapper.paramResource?PARAM_VALUE_STATUS.changed:PARAM_VALUE_STATUS.unchanged,msg},svc.initParamWrapperValue=copyValue,svc.wrapParam=function(paramResource){return{paramResource:paramResource,value:paramResource?paramResource.value:"",enableEdit:!0,copy:!1,editStatus:PARAM_VALUE_STATUS.unchanged}},svc.naParam=function(value){var naVal=arguments.length?value:"N/A";return{paramResource:null,value:naVal,enableEdit:!1,editStatus:PARAM_VALUE_STATUS.unchanged}},svc.canRevertChanges=function(data){return data.some(function(d){return d.paramWrapper.editStatus!==PARAM_VALUE_STATUS.unchanged})},svc.canAbandonChanges=function(data){return!data.some(function(d){return d.paramWrapper.editStatus===PARAM_VALUE_STATUS.changed})},svc.canApplyChanges=function(data){return data.some(function(d){return d.paramWrapper.editStatus===PARAM_VALUE_STATUS.changed})&&!data.some(function(d){return d.paramWrapper.editStatus===PARAM_VALUE_STATUS.invalid})},svc.canApply=function(scenario,data){return scenario&&ScenarioModelService.canUpdate(scenario)&&svc.canApplyChanges(data)},svc.canRevert=function(scenario,data){return scenario&&ScenarioModelService.canUpdate(scenario)&&svc.canRevertChanges(data)},svc.getResources=function(scenarioID){var deferred=$q.defer();return ParamService.load({scenarioID:scenarioID}).then(function(params){origResources.scenarios[scenarioID]=params,deferred.resolve(params)},function(err){deferred.reject("Param Model load failed. "+err)}),deferred.promise},svc.updateResources=function(scenarioID,changes,successCB,errorCB){if(origResources&&origResources.scenarios&&origResources.scenarios.hasOwnProperty(scenarioID)){var params=origResources.scenarios[scenarioID].slice(0);return changes.forEach(function(changedParam){if(changedParam.hasOwnProperty("paramID")){var origParam=params.find(function(p){return p.paramID===changedParam.paramID});null===changedParam.value?params.splice(params.indexOf(origParam),1):(origParam.value=changedParam.value,changedParam.hasOwnProperty("name")&&(origParam.name=changedParam.name))}else params.push(changedParam)}),LciaModelService.clearCache(scenarioID),ParamService.replace({scenarioID:scenarioID},params,successCB,errorCB)}errorCB("Unable to find original parameters for scenarioID "+scenarioID)},svc.getChangedData=function(data){return data.filter(hasChangedParam)},svc.applyFragmentFlowParamChanges=function(scenarioID,data,successCB,errorCB){var changedParams=data.filter(hasChangedParam);svc.updateResources(scenarioID,changedParams.map(svc.changeFragmentFlowParam),successCB,errorCB)},svc.revertChanges=function(data){data.forEach(function(e){e.paramWrapper.enableEdit&&(e.paramWrapper=svc.wrapParam(e.paramWrapper.paramResource))})},svc}]),angular.module("lcaApp.models.scenario",["lcaApp.resources.service","LocalStorageModule","lcaApp.selection.service"]).factory("ScenarioModelService",["ScenarioService","MODEL_BASE_CASE_SCENARIO_ID","localStorageService","SelectionService","SELECTION_KEYS",function(ScenarioService,MODEL_BASE_CASE_SCENARIO_ID,localStorageService,SelectionService,SELECTION_KEYS){var svc=ScenarioService,storageKey="activeScenarioID";return svc.getActiveID=function(){var id=localStorageService.get(storageKey);return id?+id:null},svc.setActiveID=function(scenarioID){return localStorageService.set(storageKey,scenarioID)},svc.removeActiveID=function(){return localStorageService.remove(storageKey)},svc.getBaseCaseID=function(){return MODEL_BASE_CASE_SCENARIO_ID},svc.getBaseCase=function(){return ScenarioService.get(MODEL_BASE_CASE_SCENARIO_ID)},svc.isBaseCase=function(scenario){return scenario.scenarioID===MODEL_BASE_CASE_SCENARIO_ID},svc.getActiveScenario=function(){var scenarioID=svc.getActiveID(),scenario=null;return scenarioID&&(scenario=svc.get(scenarioID)),scenario||(scenarioID=svc.getBaseCaseID(),scenario=svc.get(scenarioID),scenario&&svc.setActiveID(scenarioID)),scenario},svc.selectFragmentScenarioIDs=function(topLevelFragmentID,scenarios){var scenarioIDs=scenarios.filter(function(s){return s.topLevelFragmentID===topLevelFragmentID}).map(function(s){return s.scenarioID});return SelectionService.set(SELECTION_KEYS.topLevelFragmentID,topLevelFragmentID),SelectionService.set(SELECTION_KEYS.fragmentScenarios,scenarioIDs),svc},svc.getSelectedTopLevelFragmentID=function(){return SelectionService.get(SELECTION_KEYS.topLevelFragmentID)},svc.getSelectedScenarioIDs=function(){var fs=SelectionService.get(SELECTION_KEYS.fragmentScenarios);return fs?fs:[]},svc.canCreateScenario=function(scenarioGroups){return svc.authenticated&&scenarioGroups.length>1},svc}]),angular.module("lcaApp.name",["d3"]).factory("NameService",["d3Service",function(d3Service){var svc={},shortNameBreakChars=d3Service.set();return svc.shorten=function(name,maxLen){if(name&&name.length>maxLen){for(var endIndex=-1,i=maxLen-1;i>0&&-1===endIndex;--i)shortNameBreakChars.has(name.charAt(i))&&(endIndex=i);return-1===endIndex&&(endIndex=name.lastIndexOf(" ",maxLen-1)),-1===endIndex&&(endIndex=maxLen),name.slice(0,endIndex)}return name},[",","(",".",";"].forEach(function(c){shortNameBreakChars.add(c)}),svc}]),angular.module("lcaApp.paramGrid.directive",["ngGrid","lcaApp.models.param","lcaApp.format"]).constant("DIRECTION_CELL_TEMPLATE",'<div class="cellIcon"><span ng-class="directionClass(row)"></span></div>').constant("PARAM_HINT_CELL_TEMPLATE",'<div class="ngCellText" ng-class="col.colIndex()"><span ng-cell-text ng-style="paramHintStyle(row)">{{row.getProperty(col.field) | numFormat}}</span></div>').directive("paramGrid",["$compile","PARAM_VALUE_STATUS","ParamModelService","$window",function($compile,PARAM_VALUE_STATUS,ParamModelService,$window){function paramGridController($scope){function getValidationStatusClass(row){var iconClass="";switch(row.entity.paramWrapper.editStatus){case PARAM_VALUE_STATUS.changed:iconClass=" has-success";break;case PARAM_VALUE_STATUS.invalid:iconClass=" has-error"}return iconClass}function duplicateOrDeleteParam(entity){ParamModelService.valueInput(entity.paramWrapper)?(entity.paramWrapper.value="",entity.paramWrapper.copy=!1):copyDefaultValue(entity,!0),updateStatus(entity)}function getDirectionClass(row){var iconClass="";switch(row.entity.direction){case"Input":iconClass="glyphicon glyphicon-arrow-left";break;case"Output":iconClass="glyphicon glyphicon-arrow-right"}return iconClass}function getParamHintStyle(row){return row.entity.paramWrapper&&row.entity.paramWrapper.paramResource?{"font-weight":"bold"}:{}}function copyDefaultValue(entity,saveCopy){var targetField=getTargetField();targetField&&ParamModelService.initParamWrapperValue(entity[targetField],entity.paramWrapper,saveCopy)}function updateStatus(entity){var errMsg="",targetField=getTargetField();targetField&&(errMsg=ParamModelService.setParamWrapperStatus(entity[targetField],entity.paramWrapper),entity.paramWrapper.editStatus===PARAM_VALUE_STATUS.invalid&&$window.alert(errMsg))}function handleEndCellEdit(evt){$scope.$apply(updateStatus(evt.targetScope.row.entity))}function setColWidths(){$scope.columns.forEach(function(col){col.hasOwnProperty("width")||(col.width="*")})}function compare(a,b){return b>a?-1:a>b?1:0}function sortParam(a,b){return typeof a==typeof b?compare(a,b):"number"==typeof a?-1:1}function addParamCols(){var paramCol=[{field:"paramWrapper.value",displayName:"Modified Value",cellTemplate:paramTemplate,enableCellEdit:!1,cellEditableCondition:"row.getProperty('paramWrapper.enableEdit')",sortFn:sortParam},{field:"paramWrapper.editStatus",displayName:"",enableCellEdit:!1,width:35}],cols=$scope.columns;$scope.params?(paramCol[0].visible=!0,$scope.params.canUpdate?(paramCol[0].enableCellEdit=!0,paramCol[1].cellTemplate=buttonTemplate,paramCol[1].visible=!0):paramCol[1].visible=!1,cols&&cols.length>0?((!$scope.params.targetIndex||$scope.params.targetIndex>=cols.length)&&($scope.params.targetIndex=cols.length-1),cols.splice($scope.params.targetIndex+1,0,paramCol[0],paramCol[1]),$scope.columnDefs=cols):$scope.columnDefs=paramCol):(paramCol[0].visible=!1,paramCol[1].visible=!1,$scope.columnDefs=cols.concat(paramCol))}function updateParamCols(){if($scope.columnDefs&&$scope.params.targetIndex&&$scope.params.targetIndex+1<$scope.columnDefs.length){var paramIndex=$scope.params.targetIndex+1,statusIndex=paramIndex+1,cols=$scope.columnDefs;cols[paramIndex].visible=!0,$scope.params.canUpdate?(cols[paramIndex].enableCellEdit=!0,cols[statusIndex].cellTemplate=buttonTemplate,cols[statusIndex].visible=!0):cols[statusIndex].visible=!1}}function getTargetField(){if($scope.params.targetIndex&&$scope.params.targetIndex<$scope.columns.length){var colDef=$scope.columns[$scope.params.targetIndex];return colDef.field}return null}function init(){var options=$scope.options,fixedOptions={columnDefs:"columns",data:"data"},defaultOptions={enableRowSelection:!1,enableCellEditOnFocus:!0,enableHighlighting:!0,enableColumnResize:!0,plugins:[new ngGridFlexibleHeightPlugin]};angular.extend($scope.gridOptions,defaultOptions),angular.extend($scope.gridOptions,options),angular.extend($scope.gridOptions,fixedOptions)}var buttonTemplate='<button ng-show=row.entity.paramWrapper.enableEdit type="button" class="ngCell btn btn-default btn-sm" ng-click="ddParam(row.entity)" aria-label="duplicate or delete" title="{{ddTitle(row)}}"><span ng-class="ddClass(row)"></span></button>',paramTemplate='<div class="ngCellText" ng-class="col.colIndex() + editClass(row)"><span ng-cell-text>{{COL_FIELD}}</span></div>';$scope.gridOptions={},$scope.editClass=getValidationStatusClass,$scope.ddClass=function(row){return ParamModelService.valueInput(row.entity.paramWrapper)?"glyphicon glyphicon-trash":"glyphicon glyphicon-duplicate"},$scope.ddTitle=function(row){return ParamModelService.valueInput(row.entity.paramWrapper)?"Delete modified value":"Copy default value"},$scope.ddParam=duplicateOrDeleteParam,$scope.directionClass=getDirectionClass,$scope.paramHintStyle=getParamHintStyle,$scope.$on("ngGridEventEndCellEdit",handleEndCellEdit),$scope.$watch("columns",function(newVal){newVal&&newVal.length>0&&(setColWidths(),addParamCols())}),$scope.$watch("params.canUpdate",function(newVal){newVal&&updateParamCols()}),init()}return{restrict:"E",template:'<span><div class="gridStyle" ng-grid="gridOptions"></div></span>',scope:{options:"=",data:"=",columns:"=",params:"="},replace:!0,transclude:!1,controller:paramGridController}}]),angular.module("lcaApp.plot",["lcaApp.plot.directive","lcaApp.plot.service"]),angular.module("lcaApp.plot.directive",["lcaApp.plot.service","d3","lcaApp.format"]).directive("plot",["d3Service","FormatService",function(d3Service,FormatService){function link(scope,element){function createChart(config){var margin=config.margin(),xDim=config.x(),yDim=config.y(),leftOffset=0,topOffset=0;if(!xDim)throw Error("x dimension must be defined.");if(!yDim)throw Error("y dimension must be defined.");xAxis=xDim.axis(),yAxis=yDim.axis(),xAxis&&(topOffset=xAxis.getOffset("top")),yAxis&&(leftOffset=yAxis.getOffset("left")),chart=plot.select(".chart-group"),chart.empty()&&(chart=plot.append("g").attr("class","chart-group")),chart.attr("transform","translate("+(margin.left+leftOffset)+","+(margin.top+topOffset)+")")}function updateSize(config){var margin=config.margin(),svgStyle=svgElement.getBoundingClientRect();yAxis&&(offset.width=yAxis.offset()),xAxis&&(offset.height=xAxis.offset()),width=svgStyle.width-margin.left-margin.right-offset.width,height=svgStyle.height-margin.top-margin.bottom-offset.height}function resizeSvg(config,data){if(config.resizeSvg&&data.length){var svgSize,content=config.content(),margin=config.margin();content.width()&&(width=content.width()*data.length,svgSize=width+margin.left+margin.right+offset.width,svg.attr("width",svgSize)),content.height()&&(height=content.height()*data.length,svgSize=height+margin.top+margin.bottom+offset.height,svg.attr("height",svgSize))}}function drawAxes(config){drawAxisY(config.y().axis()),drawAxisX(config.x().axis())}function prepareAxisTicks(axis,dim,formatter){if(formatter&&axis.tickFormat(formatter),dim.hasOrdinalScale())axis.tickSize(0);else{var scale=axis.scale(),range=scale.range(),tickCount=Math.floor((range[1]-range[0])/(numWidth+labelPadding));axis.ticks(tickCount)}}function drawAxisX(axisConfig){var dim=scope.config.x();if(axisConfig&&scope.data.length){var g=chart.select(".x.axis"),orientation=axisConfig.orientation(),axis=d3Service.svg.axis().scale(xScale).orient(orientation),unit=dim.unit();if(g.empty()&&(g=chart.append("g").attr("class","x axis")),"bottom"===orientation&&g.attr("transform","translate(0,"+height+")"),prepareAxisTicks(axis,dim,axisConfig.tickFormat()),g.call(axis),dim.hasOrdinalScale());else if(axisConfig.addLine){var x0=xScale(0);chart.select(".x.starting-line").remove(),chart.append("line").attr("class","x starting-line").attr("x1",x0).attr("y1",0).attr("x2",x0).attr("y2",height)}if(unit){var unitLabel=g.select(".x.unit");unitLabel.empty()&&(unitLabel=g.append("text").attr("class","x unit")),unitLabel.attr("text-anchor","middle").attr("transform","translate("+width/2+","+axisConfig.offset()+")").text(unit)}}else chart.select(".x.axis").remove(),chart.select(".x.starting-line").remove()}function drawAxisY(axisConfig){var dim=scope.config.y();if(axisConfig&&scope.data.length){var g=chart.select(".y.axis"),orientation=axisConfig.orientation(),axis=d3Service.svg.axis().scale(yScale).orient(orientation);if(g.empty()&&(g=chart.append("g").attr("class","y axis")),"right"===orientation&&g.attr("transform","translate("+width+", 0)"),prepareAxisTicks(axis,dim,axisConfig.tickFormat()),g.call(axis),dim.hasOrdinalScale());else if(axisConfig.addLine){var line=chart.select(".y.starting-line"),y0=yScale(0);line.empty()&&(line=chart.append("line").attr("class","y starting-line")),line.attr("x1",0).attr("y1",y0).attr("x2",width).attr("y2",y0)}}else chart.select(".y.axis").remove(),chart.select(".y.starting-line").remove()}function createHBarData(d){var dim=scope.config.x(),xVal=dim.valueFn(),formatter=dim.labelFn()?dim.labelFn():numFormat,shape={x:xScale(Math.min(0,xVal(d))),width:Math.abs(xScale(xVal(d))-xScale(0))},label={x:0,y:0,anchor:0};return numWidth>shape.width?numWidth>width-shape.width-shape.x?(label.x=shape.x-labelPadding,label.anchor="end"):(label.x=shape.x+shape.width+labelPadding,label.anchor="start"):(label.x=shape.x+shape.width/2,label.anchor="middle"),label.text=formatter(xVal(d)),{d:d,s:shape,l:label}}function drawHorizontalBars(content,data){var barData,barGroups,newGroups,shape=content.shape(),barHeight=content.height(),barPadding=content.padding();barData=data.map(createHBarData),barGroups=chart.selectAll(".bar.g").data(barData),newGroups=barGroups.enter().append("g").attr("class","bar g"),barGroups.exit().remove(),barGroups.attr("transform",function(d,i){return"translate(0,"+i*barHeight+")"}),newGroups.append(shape),barGroups.select(shape).style("fill",content.color()).attr("x",function(d){return d.s.x}).attr("y",0).attr("width",function(d){return d.s.width}).attr("height",barHeight-barPadding),newGroups.append("text"),barGroups.select("text").attr("x",function(d){return d.l.x}).attr("y",barHeight/2).attr("dy",".35em").style("text-anchor",function(d){return d.l.anchor}).text(function(d){return d.l.text})}function drawContents(config,data){var content=config.content();if(!content)throw Error("Plot content must be defined.");"horizontal"===content.orientation()&&drawHorizontalBars(content,data)}function createScale(dim,plotData,range){if(!dim.valueFn())throw Error("Plot dimension must provide valueFn");if(!dim.scale())throw Error("Plot dimension must provide scale type");var scale,domain=dim.domain(),valueFn=dim.valueFn();if(domain||(domain=plotData.map(valueFn),"linear"===dim.scale()&&domain.length&&(1===domain.length&&domain[0]?domain=domain[0]>0?[0,domain[0]]:[domain[0],0]:(domain=d3Service.extent(domain),domain[0]>0?domain[0]=0:0>domain[1]&&(domain[1]=0)))),"linear"===dim.scale())scale=d3Service.scale.linear(),scale.domain(domain).range(range).nice();else{if("ordinal"!==dim.scale())throw Error("Plot does not support scale type : "+dim.scale());scale=d3Service.scale.ordinal(),scale.domain(domain).rangeRoundBands(range,.1)}return scale}function prepareScales(config,data){xScale=createScale(config.x(),data,[0,width]),yScale=createScale(config.y(),data,[0,height])}var chart,xScale,yScale,parentElement=element[0],svgElement=parentElement.parentNode,svg=d3Service.select(svgElement),plot=svg.select("g.lcia-bar-container"),xAxis=null,yAxis=null,width=0,height=0,offset={width:0,height:0},numFormat=FormatService.format("^.2g"),numWidth=55,labelPadding=5;scope.$watch("data",function(newVal){if(svg&&scope.config&&newVal){var config=scope.config;createChart(config),chart&&(updateSize(config),resizeSvg(config,newVal),prepareScales(config,newVal),drawContents(config,newVal),drawAxes(config))}},!0)}return{restrict:"E",scope:{config:"=",data:"=",transform:"@"},link:link,templateNamespace:"svg",replace:!0,template:"<g class='lcia-bar-container' ng-attr-transform='{{transform}}'></g>"}}]),angular.module("lcaApp.plot.service",[]).factory("PlotService",function(){function Config(){var obj={},content=null,x=null,y=null,margin=null,resizeSvg=!0;return obj.content=function(_){return arguments.length?(content=_,obj):content},obj.x=function(_){return arguments.length?(x=_,obj):x},obj.y=function(_){return arguments.length?(y=_,obj):y},obj.margin=function(_){return arguments.length?(margin=_,obj):margin},obj.resizeSvg=function(_){return arguments.length?(resizeSvg=_,obj):resizeSvg},obj}function Axis(){var axis={},orientation="left",addLine=!0,offset=30,tickFormat=null;return axis.orientation=function(_){return arguments.length?(orientation=_,axis):orientation},axis.addLine=function(_){return arguments.length?(addLine=_,axis):addLine},axis.offset=function(_){return arguments.length?(offset=_,axis):offset},axis.tickFormat=function(_){return arguments.length?(tickFormat=_,axis):tickFormat},axis.getOffset=function(o){return o==orientation?offset:0},axis}function Dimension(){var dimension={},scale=null,axis=null,domain=null,unit=null,labelFn=null,valueFn=null;return dimension.scale=function(_){return arguments.length?(scale=_,dimension):scale},dimension.axis=function(_){return arguments.length?(axis=_,dimension):axis},dimension.domain=function(_){return arguments.length?(domain=_,dimension):domain},dimension.unit=function(_){return arguments.length?(unit=_,dimension):unit},dimension.labelFn=function(_){return arguments.length?(labelFn=_,dimension):labelFn},dimension.valueFn=function(_){return arguments.length?(valueFn=_,dimension):valueFn},dimension.hasOrdinalScale=function(){return"ordinal"===scale},dimension}function Bar(){var elt={},shape="rect",color="green",orientation="horizontal",height=19,padding=1,width=null;return elt.color=function(_){return arguments.length?(color=_,elt):color},elt.shape=function(){return shape},elt.orientation=function(_){return arguments.length?(orientation=_,elt):orientation},elt.height=function(_){return arguments.length?(height=_,elt):height},elt.padding=function(_){return arguments.length?(padding=_,elt):padding},elt.width=function(_){return arguments.length?(width=_,elt):width},elt}function Margin(){return{top:0,right:0,bottom:0,left:0}}return{createAxis:function(){return new Axis},createBar:function(){return new Bar},createDimension:function(){return new Dimension},createMargin:function(top,right,bottom,left){var margin=new Margin;return arguments.length&&(margin.top=top,arguments.length>1?(margin.right=right,arguments.length>2?(margin.bottom=bottom,margin.left=arguments.length>3?left:right):(margin.bottom=top,margin.left=right)):margin.right=margin.bottom=margin.left=top),margin},createConfig:function(){return new Config}}}),angular.module("lcaApp.referenceLink.directive",[]).directive("referenceLink",function(){function referenceLinkController($scope){function setRefXML(){if($scope.resource&&$scope.resource.hasOwnProperty("links")){var xmlLink=$scope.resource.links.find(function(l){return"reference"===l.rel});$scope.refXML=xmlLink?xmlLink.href:null}else $scope.refXML=null}$scope.refXML=null,$scope.noRefLink=function(){return null===$scope.refXML},$scope.$watch("resource",setRefXML),setRefXML()}return{restrict:"E",template:'<a ng-hide={{noRefLink}} ng-href="{{refXML}}" target="_blank" ng-transclude></a>',scope:{resource:"="},replace:!0,transclude:!0,controller:referenceLinkController}}),angular.module("lcaApp.resources.flowPropertyMagnitude",[]).factory("FlowPropertyMagnitudeExtension",[function(){function Instance(obj){return obj&&obj.flowProperty?{flowPropertyID:obj.flowProperty.flowPropertyID}:null}return{createInstance:function(obj){return new Instance(obj)}}}]),angular.module("lcaApp.resources.lciaMethod",["lcaApp.colorCode.service","LocalStorageModule"]).factory("LciaMethodExtension",["ColorCodeService","localStorageService",function(ColorCodeService,localStorageService){function getStorageKey(id,propertyName){return"lciaMethod_"+id+"_"+propertyName}function Instance(){var shortName=null,extension={};return extension.getDefaultColor=function(){var scales=ColorCodeService.getImpactCategoryColors(this.impactCategoryID);return scales&&3 in scales&&0 in scales[3]?scales[3][0]:"#ffffff"},extension.getColorScales=function(){return ColorCodeService.getImpactCategoryColors(this.impactCategoryID)},extension.getReferenceLink=function(){var refLink=null;if(this.hasOwnProperty("links")){var xmlLink=this.links.find(function(l){return"reference"===l.rel});xmlLink&&(refLink=xmlLink.href)}return refLink},extension.getReferenceUnit=function(){var refUnit=null;return this.hasOwnProperty("referenceFlowProperty")&&this.referenceFlowProperty.hasOwnProperty("referenceUnit")&&(refUnit=this.referenceFlowProperty.referenceUnit),refUnit},extension.getShortName=function(){if(!shortName){var parts=this.name.split("; ");shortName=parts.length>1?parts[1]:this.name}return shortName},extension.getIsActive=function(){if(!("isActive"in this)){var storageKey=getStorageKey(this.lciaMethodID,"isActive"),storageVal=localStorageService.get(storageKey);null==storageVal?(this.isActive=!0,localStorageService.set(storageKey,this.isActive)):this.isActive="true"===storageVal}return this.isActive},extension.storeIsActive=function(){if("isActive"in this){var storageKey=getStorageKey(this.lciaMethodID,"isActive");localStorageService.set(storageKey,this.isActive)}},extension}return{createInstance:function(){return new Instance}}}]),angular.module("lcaApp.resources.process",[]).factory("ProcessExtension",[function(){function Instance(){var longName=null,extension={};return extension.getLongName=function(){return longName||(longName=this.name,this.geography&&(longName=longName+" ["+this.geography+"]"),"00.00.000"!=this.version&&(longName=longName+" ("+this.version+")")),longName},extension}return{createInstance:function(){return new Instance}}}]),angular.module("lcaApp.resources.service",["ngResource","lcaApp.idmap.service","lcaApp.config","lcaApp.resources.lciaMethod","lcaApp.resources.flowPropertyMagnitude","lcaApp.resources.process"]).constant("MODEL_BASE_CASE_SCENARIO_ID",1).constant("BASE_SCENARIO_GROUP_ID",1).factory("ResourceService",["$resource","API_ROOT","IdMapService","$q","$location",function($resource,API_ROOT,IdMapService,$q,$location){var resourceService={},services={},authParamObject=null,actions={update:{method:"PUT"},replace:{method:"PUT",isArray:!0}};return resourceService.ROUTES={compositionFlow:API_ROOT+"compositionflows",flow:API_ROOT+"flows/:flowID",flowForFragment:API_ROOT+"fragments/:fragmentID/flows",flowForLciaMethod:API_ROOT+"lciamethods/:lciaMethodID/flows",fragment:API_ROOT+"fragments/:fragmentID",fragmentFlow:API_ROOT+"scenarios/:scenarioID/fragments/:fragmentID/fragmentflows",fragmentStage:API_ROOT+"fragments/:fragmentID/fragmentstages",flowPropertyForFragment:API_ROOT+"fragments/:fragmentID/flowproperties",flowPropertyForProcess:API_ROOT+"processes/:processID/flowproperties",flowPropertyMagnitude:API_ROOT+"flows/:flowID/flowpropertymagnitudes",impactCategory:API_ROOT+"impactcategories",lciaFactor:API_ROOT+"lciamethods/:lciaMethodID/lciafactors",lciaMethod:API_ROOT+"lciamethods",lciaMethodForImpactCategory:API_ROOT+"impactcategories/:impactCategoryID/lciamethods",lciaResultForFragment:API_ROOT+"scenarios/:scenarioID/fragments/:fragmentID/lciamethods/:lciaMethodID/lciaresults",lciaResultForProcess:API_ROOT+"scenarios/:scenarioID/processes/:processID/lciamethods/:lciaMethodID/lciaresults",lciaTotalForFragment:API_ROOT+"scenarios/:scenarioID/fragments/:fragmentID/lciaresults",lciaTotalForProcess:API_ROOT+"scenarios/:scenarioID/processes/:processID/lciaresults",param:API_ROOT+"scenarios/:scenarioID/params/:paramID",process:API_ROOT+"processes",processComment:API_ROOT+"processes/:processID/comment",processDissipation:API_ROOT+"processes/:processID/dissipation",processForFlowType:API_ROOT+"flowtypes/:flowTypeID/processes",processFlow:API_ROOT+"processes/:processID/processflows",scenario:API_ROOT+"scenarios/:scenarioID",scenarioGroup:API_ROOT+"scenariogroups/:scenarioGroupID"},resourceService.getResource=function(routeKey){return resourceService.ROUTES.hasOwnProperty(routeKey)?$resource(resourceService.ROUTES[routeKey],{},actions):void 0},resourceService.getAuthParam=function(){return null===authParamObject&&(authParamObject=$location.search()),authParamObject.hasOwnProperty("auth")?authParamObject.auth:null},resourceService.addAuthParam=function(filter){var paramFilter=filter||{},authParam=resourceService.getAuthParam();return authParam&&(paramFilter.auth=authParam),paramFilter},resourceService.createService=function(routeKey,idName){var svc={loadFilter:null,resource:resourceService.getResource(routeKey),objects:null,extensionFactory:null,authenticated:!1};return svc.authenticated=null!=resourceService.getAuthParam(),svc.handleNewObjects=function(objects){svc.extensionFactory&&objects.forEach(function(o){angular.extend(o,svc.extensionFactory.createInstance(o))}),svc.idName&&(IdMapService.clear(routeKey),IdMapService.add(routeKey,svc.idName,objects))},svc.load=function(filter){var d=$q.defer(),authFilter=resourceService.addAuthParam(filter);return angular.equals(authFilter,svc.loadFilter)&&svc.objects?d.resolve(svc.objects):(svc.loadFilter=authFilter,svc.objects=svc.resource.query(authFilter,function(objects){svc.handleNewObjects(objects),d.resolve(objects)},function(err){d.reject("Web API query failed. URL: "+err.config.url)})),d.promise},svc.reload=function(filter){return svc.objects=null,svc.load(filter)},svc.compareByName=function(a,b){return a.name>b.name?1:a.name<b.name?-1:0},svc.getAll=function(){return svc.objects},idName&&(svc.idName=idName,svc.get=function(id){return IdMapService.get(routeKey,id)}),svc.setExtensionFactory=function(obj){return svc.extensionFactory=obj,svc},svc},resourceService.addChangeMethods=function(svc){svc.create=function(urlParameters,obj,successCB,errorCB){var p=resourceService.addAuthParam(urlParameters);return svc.objects=null,svc.resource.save(p,obj,successCB,errorCB)},svc.remove=function(urlParameters,obj,successCB,errorCB){var p=resourceService.addAuthParam(urlParameters);return p[svc.idName]=obj[svc.idName],svc.objects=null,svc.resource.delete(p,obj,successCB,errorCB)},svc.update=function(urlParameters,obj,successCB,errorCB){var p=resourceService.addAuthParam(urlParameters);return p[svc.idName]=obj[svc.idName],svc.resource.update(p,obj,successCB,errorCB)},svc.replace=function(urlParameters,objArray,successCB,errorCB){var p=resourceService.addAuthParam(urlParameters);return svc.objects=svc.resource.replace(p,objArray,function(objects){svc.handleNewObjects(objects),successCB.call(objects)},errorCB),svc.objects}},resourceService.getService=function(serviceName,routeKey,idName){if(!(serviceName in services)){var svc=resourceService.createService(routeKey,idName);("scenario"===routeKey||"param"===routeKey)&&resourceService.addChangeMethods(svc),services[serviceName]=svc}return services[serviceName]},resourceService.createSimpleGetService=function(serviceName){var resource=resourceService.getResource(serviceName),svc={};return svc.get=function(filter,callback){return resource.get(resourceService.addAuthParam(filter),callback)},svc},resourceService}]),angular.module("lcaApp.resources.service").factory("ScenarioService",["ResourceService","BASE_SCENARIO_GROUP_ID",function(ResourceService,BASE_SCENARIO_GROUP_ID){var svc=ResourceService.getService("ScenarioService","scenario","scenarioID");return svc.canDelete=function(scenario){return scenario.scenarioGroupID!==BASE_SCENARIO_GROUP_ID},svc.canUpdate=function(scenario){return scenario.scenarioGroupID!==BASE_SCENARIO_GROUP_ID},svc.canCreate=function(){return null!==ResourceService.getAuthParam()},svc}]).factory("ScenarioGroupService",["ResourceService",function(ResourceService){return ResourceService.getService("ScenarioGroupService","scenarioGroup","scenarioGroupID")}]).factory("FragmentService",["ResourceService",function(ResourceService){return ResourceService.getService("FragmentService","fragment","fragmentID")}]).factory("ProcessService",["ResourceService","ProcessExtension",function(ResourceService,ProcessExtension){return ResourceService.getService("ProcessService","process","processID").setExtensionFactory(ProcessExtension)}]).factory("ProcessForFlowTypeService",["ResourceService","ProcessExtension",function(ResourceService,ProcessExtension){return ResourceService.getService("ProcessForFlowTypeService","processForFlowType","processID").setExtensionFactory(ProcessExtension)
}]).factory("CompositionFlowService",["ResourceService",function(ResourceService){return ResourceService.getService("CompositionFlowService","compositionFlow","flowID")}]).factory("FlowService",["ResourceService",function(ResourceService){return ResourceService.getService("FlowService","flow","flowID")}]).factory("FlowPropertyForFragmentService",["ResourceService",function(ResourceService){return ResourceService.getService("FlowPropertyForFragmentService","flowPropertyForFragment","flowPropertyID")}]).factory("FlowPropertyForProcessService",["ResourceService",function(ResourceService){return ResourceService.getService("FlowPropertyForProcessService","flowPropertyForProcess","flowPropertyID")}]).factory("FlowPropertyMagnitudeService",["ResourceService","FlowPropertyMagnitudeExtension",function(ResourceService,FlowPropertyMagnitudeExtension){return ResourceService.getService("FlowPropertyMagnitudeService","flowPropertyMagnitude","flowPropertyID").setExtensionFactory(FlowPropertyMagnitudeExtension)}]).factory("FragmentFlowService",["ResourceService",function(ResourceService){return ResourceService.getService("FragmentFlowService","fragmentFlow","fragmentFlowID")}]).factory("FragmentStageService",["ResourceService",function(ResourceService){return ResourceService.getService("FragmentStageService","fragmentStage","fragmentStageID")}]).factory("FlowForLciaMethodService",["ResourceService",function(ResourceService){return ResourceService.getService("FlowForLciaMethodService","flowForLciaMethod","flowID")}]).factory("FlowForFragmentService",["ResourceService",function(ResourceService){return ResourceService.getService("FlowForFragmentService","flowForFragment","flowID")}]).factory("ImpactCategoryService",["ResourceService",function(ResourceService){return ResourceService.getService("ImpactCategoryService","impactCategory","impactCategoryID")}]).factory("LciaFactorService",["ResourceService",function(ResourceService){return ResourceService.getService("LciaFactorService","lciaFactor",null)}]).factory("LciaMethodService",["ResourceService","LciaMethodExtension",function(ResourceService,LciaMethodExtension){return ResourceService.getService("LciaMethodService","lciaMethod","lciaMethodID").setExtensionFactory(LciaMethodExtension)}]).factory("LciaMethodForImpactCategoryService",["ResourceService",function(ResourceService){return ResourceService.getService("LciaMethodForImpactCategoryService","lciaMethodForImpactCategory","lciaMethodID")}]).factory("LciaTotalForFragmentService",["ResourceService",function(ResourceService){return ResourceService.getService("LciaTotalForFragmentService","lciaTotalForFragment",null)}]).factory("LciaTotalForProcessService",["ResourceService",function(ResourceService){return ResourceService.getService("LciaTotalForProcessService","lciaTotalForProcess",null)}]).factory("ParamService",["ResourceService",function(ResourceService){return ResourceService.getService("ParamService","param","paramID")}]).factory("ProcessCommentService",["ResourceService",function(ResourceService){return ResourceService.createSimpleGetService("processComment")}]).factory("ProcessDissipationService",["ResourceService",function(ResourceService){return ResourceService.getService("ProcessDissipationService","processDissipation",null)}]).factory("ProcessFlowService",["ResourceService",function(ResourceService){return ResourceService.getService("ProcessFlowService","processFlow",null)}]),angular.module("lcaApp.resources.service").factory("LciaResultForProcessService",["ResourceService",function(ResourceService){return ResourceService.createSimpleGetService("lciaResultForProcess")}]).factory("LciaResultForFragmentService",["ResourceService",function(ResourceService){return ResourceService.createSimpleGetService("lciaResultForFragment")}]),angular.module("lcaApp.sankey",["d3.sankey.service","lcaApp.sankey.directive","lcaApp.sankey.service"]),angular.module("lcaApp.sankey.directive",["d3","d3.sankey.service","d3.tip"]).directive("sankeyDiagram",["d3Service","SankeyService","SankeyColorService","TipService",function(d3Service,SankeyService,SankeyColorService,TipService){function link(scope,element){function prepareSvg(){svg=d3Service.select(parentElement).append("svg").attr("width",width+margin.left+margin.right).attr("height",height+margin.top+margin.bottom).on("mouseleave",restoreView).append("g").attr("transform","translate("+margin.left+","+margin.top+")")}function getNodeLabel(n){return n.nodeName}function onGraphChanged(newVal){TipService.hide(),newVal&&(graph=scope.graph,drawSankey(graph.isNew))}function restoreView(){svg.selectAll(".node").transition().style("opacity",opacity.node).select(".node-label").style("visibility","visible"),svg.selectAll(".link").transition().select("path").style("stroke-opacity",opacity.link),svg.selectAll(".link-label").style("visibility","hidden"),TipService.hide(),scope.$apply(function(){scope.mouseOverNode=null})}function onNodeClick(node){d3Service.event.stopPropagation(),TipService.hide(),scope.$apply(function(){scope.selectedNode=node})}function onMouseOverNode(node,index){var nodeSelection,linkSelection,linkLabels;d3Service.event.stopPropagation(),nodeSelection=svg.selectAll(".node").transition().style("opacity",function(d,i){return i===index?.9:.2}),linkSelection=svg.selectAll(".link"),linkSelection.transition().select("path").style("stroke-opacity",function(l){return l.source.nodeID===node.nodeID||l.target.nodeID===node.nodeID?opacity.link:.2}),TipService.show(node,index),nodeSelection.selectAll(".node-label").style("visibility","hidden"),linkLabels=linkSelection.select(".link-label").style("visibility","hidden").filter(function(l){return l.hasOwnProperty("source")&&l.hasOwnProperty("target")&&l.source&&l.target}),linkLabels.filter(function(l){return l.source.nodeID===node.nodeID}).attr("x",function(l){return l.target.x-6}).attr("text-anchor","end").attr("y",function(l){return l.target.y+l.ty+l.dy/2}).style("visibility","visible"),linkLabels.filter(function(l){return l.target.nodeID===node.nodeID}).attr("x",function(l){return l.source.x+6+sankey.nodeWidth()}).attr("text-anchor","start").attr("y",function(l){return l.source.y+l.sy+l.dy/2}).style("visibility","visible"),scope.$apply(function(){scope.mouseOverNode=node})}function drawSankey(rebuild){var link,node,path=sankey.link(),transitionTime=250;if(rebuild){if(svg.selectAll("g").remove(),0==graph.links.length)return;svg.append("g").attr("id","linkGroup"),transitionTime=0}sankey.nodes(graph.nodes).links(graph.links).layout(20),link=svg.select("#linkGroup").selectAll(".link").data(graph.links),rebuild&&(link.enter().append("g").attr("class","link"),link.append("path").append("title")),link.select("path").transition().duration(transitionTime).attr("d",path).style("stroke-width",function(d){return Math.max(minNodeHeight,d.dy)}).style("stroke-dasharray",function(d){return d.value===baseValue?"5,5":null}).style("stroke",function(d){return SankeyColorService.link.getColor(d)}).style("stroke-opacity",opacity.link).sort(function(a,b){return b.dy-a.dy}),link.select("path").select("title").text(function(d){return d.toolTip}),rebuild&&svg.append("g").attr("id","nodeGroup"),node=svg.select("#nodeGroup").selectAll(".node").data(graph.nodes),rebuild&&(node.enter().append("g").attr("class","node"),node.append("rect"),node.append("text").attr("class","node-label"),link.append("text").attr("class","link-label")),node.transition().duration(transitionTime).attr("transform",function(d){return"translate("+d.x+","+d.y+")"}).style("opacity",opacity.node),node.selectAll("rect").transition().duration(transitionTime).attr("height",function(n){return Math.max(minNodeHeight,n.dy)}).attr({width:sankey.nodeWidth()}).style("fill",function(n){return n.color=SankeyColorService.node.getColor(n),n.color}),node.on("mouseover",onMouseOverNode),node.selectAll(".node-label").transition().duration(transitionTime).attr("y",function(d){return Math.max(minNodeHeight,d.dy)/2}).attr("dy",".35em").attr("transform",null).text(function(d){return getNodeLabel(d)}).attr("x",6+sankey.nodeWidth()).attr("text-anchor","start"),link.select(".link-label").style("visibility","hidden").attr("dy",".35em").attr("transform",null).text(function(d){return d.toolTip}),node.selectAll("rect").filter(function(d){return d.selectable}).on("click",onNodeClick).style("stroke",function(n){return d3Service.rgb(n.color).darker(1)})}function prepareToolTip(){TipService.offset([-10,0]).direction("n").html(function(d){return"toolTip"in d?d.toolTip:void 0}),svg.call(TipService),TipService.hide()}function addNodeSymbol(colorSpec,rowHeight,nodeLegend){var x=rowHeight/4-1,y=0,width=rowHeight/2,height=rowHeight-2;nodeLegend.append("rect").attr("x",x).attr("y",y).attr("height",height).attr("width",width).style("fill",colorSpec.colorScale).style("opacity",opacity.node)}function addLinkSymbol(colorSpec,rowHeight,linkLegend){var y=rowHeight/2,width=rowHeight-2,pathD="M 0 "+y+" H "+width;linkLegend.append("path").attr("d",pathD).attr("stroke-width",y-2).style("stroke",colorSpec.colorScale).style("stroke-opacity",opacity.link)}function appendLegend(cssClass,startY,colorSpec,rowHeight,addSymbol){var aLegend=legend.append("g").attr("class",cssClass).attr("transform","translate(0,"+startY+")");aLegend=aLegend.selectAll("g").data(colorSpec.colorScale.domain()).enter().append("g").attr("class","legend-row").attr("transform",function(d,i){return"translate(0,"+i*rowHeight+")"}),addSymbol(colorSpec,rowHeight,aLegend),aLegend.append("text").attr("x",rowHeight+4).attr("y",9).attr("dy",".35em").text(function(d){return colorSpec.getLabel(d)})}function drawLegend(){if(legend=d3.select(scope.legendSelector)){var rowHeight=20,startY=0;appendLegend("legend node",startY,SankeyColorService.node,rowHeight,addNodeSymbol),startY=SankeyColorService.node.colorScale.domain().length*rowHeight,appendLegend("legend link",startY,SankeyColorService.link,rowHeight,addLinkSymbol)}}function onColorChanged(val){val&&scope.legendSelector&&!legend&&drawLegend()}function onLegendChanged(val){val&&scope.color&&!legend&&drawLegend()}var svg,margin={top:10,right:10,bottom:10,left:10},parentElement=element[0],width=parentElement.clientWidth-margin.left-margin.right,height=parentElement.clientHeight-margin.top-margin.bottom,sankeyWidth=width-150,sankey=SankeyService.nodeWidth(20).nodePadding(20).size([sankeyWidth,height]),graph={},baseValue=1e-14,minNodeHeight=3,opacity={node:1,link:.5},legend=null;prepareSvg(),prepareToolTip(),scope.$watch("color",onColorChanged),scope.$watch("graph.links",onGraphChanged),scope.$watch("legendSelector",onLegendChanged)}return{restrict:"E",scope:{graph:"=",color:"=",selectedNode:"=selectedNode",mouseOverNode:"=mouseOverNode",legendSelector:"="},link:link}}]),angular.module("d3.sankey.service",["d3"]).factory("SankeyService",["d3Service",function(d3Service){return d3Service.sankey()}]),angular.module("lcaApp.sankey.service",["d3"]).factory("SankeyColorService",["d3Service",function(d3Service){var sankeyColors={node:null,link:null};return sankeyColors.createColorSpec=function(p,c,a,l){var thisSpec={colorScale:d3Service.scale.ordinal()};return thisSpec.colorScale.domain(d3Service.keys(c)),thisSpec.colorScale.range(d3Service.values(c)),thisSpec.getDomainVal=function(d){return a?a.call(thisSpec,d):d},thisSpec.getColor=function(d){return thisSpec.colorScale(thisSpec.getDomainVal(d))},thisSpec.getLabel=function(d){return l&&l.hasOwnProperty(d)?l[d]:d},sankeyColors[p]=thisSpec,sankeyColors},sankeyColors}]),angular.module("lcaApp.selection.service",[]).constant("SELECTION_KEYS",{topLevelFragmentID:"TLF",fragmentScenarios:"FS"}).factory("SelectionService",function(){var selections={};return{contains:function(key){return selections.hasOwnProperty(key)},set:function(key,value){return selections[key]=value,selections[key]},get:function(key){return selections.hasOwnProperty(key)?selections[key]:null},remove:function(key){selections.hasOwnProperty(key)&&delete selections[key]}}}),angular.module("lcaApp.status.service",["angularSpinner","ui.bootstrap.alert"]).constant("SPINNER_KEY","spinner-lca").factory("StatusService",["usSpinnerService","SPINNER_KEY","$rootScope","$log",function(usSpinnerService,SPINNER_KEY,$rootScope,$log){var svc={};return svc.startWaiting=function(){$rootScope.alert=null,usSpinnerService.spin(SPINNER_KEY)},svc.stopWaiting=function(){usSpinnerService.stop(SPINNER_KEY)},svc.handleFailure=function(err){var errMsg="";if(svc.stopWaiting(),"string"==typeof err)errMsg=err;else if(err.hasOwnProperty("status")){switch(+err.status){case 401:errMsg="Web API authorization failed.\n";break;case 409:errMsg="Web API request conflicts with another request that is in progress.\n"}if(err.hasOwnProperty("data"))if("string"==typeof err.data)errMsg+=err.data;else{var errData=err.data;errData.hasOwnProperty("exceptionMessage")&&(errMsg="Web API Exception : "+errData.exceptionMessage,$log.error(JSON.stringify(err)))}}else err.hasOwnProperty("message")&&(errMsg=err.message);$rootScope.alert={type:"danger",msg:errMsg}},svc.handleSuccess=function(infoMsg){svc.stopWaiting(),$rootScope.alert=null,infoMsg&&($rootScope.alert={type:"success",msg:infoMsg})},svc.displayInfo=function(infoMsg){$rootScope.alert={type:"info",msg:infoMsg}},svc}]),angular.module("lcaApp.version.interpolate-filter",[]).filter("interpolate",["version",function(version){return function(text){return(text+"").replace(/\%VERSION\%/gm,version)}}]),angular.module("lcaApp.version.version-directive",[]).directive("appVersion",["version",function(version){return function(scope,elm){elm.text(version)}}]),angular.module("lcaApp.version",["lcaApp.version.interpolate-filter","lcaApp.version.version-directive"]).value("version","0.1"),angular.module("lcaApp.waterfall.directive",["d3","lcaApp.waterfall","lcaApp.format"]).directive("waterfallChart",["d3Service","WaterfallService","FormatService",function(d3Service,WaterfallService,FormatService){function link(scope,element){function createSvg(){svg=d3Service.select(parentElement).append("svg")}function prepareSvg(){svg.attr("width",waterfall.width()+yAxisWidth+margin.left+margin.right),svg.attr("height",waterfall.chartHeight+titleHeight+margin.top+margin.bottom+unitHeight+xAxisHeight),svg.select(".chart-group").remove(),svg.append("g").attr("class","chart-group").attr("transform","translate("+(margin.left+yAxisWidth)+","+(titleHeight+margin.top+xAxisHeight)+")")}function defineEndMarker(){svg.append("defs").append("marker").attr("id","arrowhead").attr("viewBox","0 0 10 10").attr("refX",10).attr("refY",5).attr("markerWidth",6).attr("markerHeight",6).attr("orient","auto").append("path").attr("d","M 0 0 L 10 5 L 0 10 z").style("fill","#FF0000")}function addTitle(){if(svg.select(".chart-title").remove(),scope.chartTitle){var width=waterfall.width();svg.append("g").attr("class","chart-title").attr("transform","translate("+(margin.left+yAxisWidth)+","+(titleHeight+margin.top)+")").append("text").attr("x",width/2).attr("y",0).attr("dy","-1em").style("text-anchor","middle").text(scope.chartTitle)}}function addTick(val,tickValues){tickValues.every(function(tv){return Math.abs(waterfall.xScale(tv)-waterfall.xScale(val))>50})&&tickValues.push(val)}function drawStartingLine(){if(svg.select(".top.axis").remove(),svg.select(".starting-line").remove(),waterfall.chartHeight>0){var xAxis=d3Service.svg.axis().scale(waterfall.xScale).orient("top").tickValues([0]).tickFormat(d3Service.format("d")),x0=waterfall.xScale(0),chartGroup=svg.select(".chart-group");chartGroup.append("g").attr("class","top axis").call(xAxis),chartGroup.append("line").attr("class","starting-line").attr("x1",x0).attr("y1",0).attr("x2",x0).attr("y2",waterfall.chartHeight)}}function drawXAxis(){var maxTickVal,tickValues=[];if(svg.select(".x.axis").remove(),waterfall.chartHeight>0&&segments&&segments.length>0){var xAxis=d3Service.svg.axis().scale(waterfall.xScale).orient("bottom"),minVal=d3Service.min(segments,function(d){return d.endVal}),maxVal=d3Service.max(segments,function(d){return d.endVal}),lastVal=segments[segments.length-1].endVal;minVal>0?minVal=0:0>maxVal&&(maxVal=0),tickValues=[lastVal],0!==lastVal&&addTick(0,tickValues),0!==maxVal&&addTick(maxVal,tickValues),0!==minVal&&addTick(minVal,tickValues),maxTickVal=d3Service.max(tickValues),xAxis.tickValues(tickValues).tickFormat(function(d){var formatted;switch(d){case maxTickVal:formatted=labelFormat(d)+" "+scope.unit;break;case 0:formatted="0";break;default:formatted=labelFormat(d)}return formatted}),svg.select(".chart-group").append("g").attr("class","x axis").attr("transform","translate(0,"+waterfall.chartHeight+")").call(xAxis)}}function drawYAxis(){if(svg.select(".y.axis").remove(),waterfall.chartHeight>0){var yAxis=d3Service.svg.axis().scale(waterfall.yScale).orient("left").tickSize(0);svg.select(".chart-group").append("g").attr("class","y axis").call(yAxis).selectAll(".tick text").call(d3Service.textWrap,yAxisWidth-10)}}function drawWaterfall(){var chartGroup,barGroup,lineColor=d3Service.rgb(scope.color).darker(2);chartGroup=svg.select(".chart-group"),segments&&segments.length>0&&(barGroup=chartGroup.selectAll(".bar.g").data(segments),barGroup.enter().append("g").attr("class","bar g"),barGroup.exit().remove(),barGroup.append("rect").attr("class","bar rect").attr("height",waterfall.segmentHeight()).attr("x",function(d){return d.x}).attr("y",function(d){return d.y}).attr("width",function(d){return d.width>0?d.width:.1}).style("fill",scope.color).style("stroke",lineColor),barGroup.append("text").attr("class","bar text").attr("x",function(d){return d.labelX}).style("text-anchor",function(d){return d.labelAnchor}).attr("y",function(d){return d.y+waterfall.segmentHeight()/2}).attr("dy",".5em").text(function(d){return labelFormat(d.value)}),barGroup.append("line").attr("class","bar line").attr("x1",function(d){return d.endX}).attr("y1",function(d){return d.y+waterfall.segmentHeight()}).attr("x2",function(d){return d.endX}).attr("y2",function(d){return d.y+waterfall.segmentHeight()+waterfall.segmentPadding()}).style("stroke",lineColor))}function drawEndMarker(){var connectors=svg.selectAll(".bar.line");if(connectors.size()>0){var lastIndex=connectors.size()-1;connectors.filter(function(d,i){return i===lastIndex}).attr("marker-end","url(#arrowhead)")}}var segments,margin={top:5,right:50,bottom:20,left:10},parentElement=element[0],xAxisHeight=21,yAxisWidth=110,labelFormat=FormatService.format("^.2g"),svg=null,waterfall=null,titleHeight=0,unitHeight=0;createSvg(),scope.$watch("yAxisWidth",function(newVal){newVal&&(yAxisWidth=+newVal)}),scope.$watch("chartTitle",function(newVal){newVal&&(titleHeight=20)}),scope.$watch("unit",function(newVal){newVal&&(unitHeight=20)}),scope.$watch("service",function(newVal){newVal?(waterfall=newVal,segments=waterfall.segments[scope.index],prepareSvg(),defineEndMarker(),addTitle(),drawStartingLine(),yAxisWidth>0&&drawYAxis(),drawWaterfall(),drawXAxis(),drawEndMarker()):(svg&&svg.remove(),createSvg())})}return{restrict:"E",scope:{service:"=",index:"=",color:"=",yAxisWidth:"=",chartTitle:"=",unit:"="},link:link}}]),angular.module("lcaApp.waterfall.service",["d3"]).factory("WaterfallService",["d3Service",function(d3Service){function Instance(){function hasResult(stage){return waterfall.segments.some(function(scenario){return scenario.some(function(s){return s.stage===stage})})}function setGraphicAttributes(seg,index){var paddedWidth=labelWidth+5;seg.x=xScale(Math.min(seg.startVal,seg.endVal)),seg.y=(segmentPadding+segmentHeight)*index,seg.width=Math.abs(xScale(seg.value)-xScale(0)),seg.endX=xScale(seg.endVal),paddedWidth>seg.width?paddedWidth>width-seg.width-seg.x?(seg.labelX=seg.x-5,seg.labelAnchor="end"):(seg.labelX=seg.x+seg.width+5,seg.labelAnchor="start"):(seg.labelX=seg.x+seg.width/2,seg.labelAnchor="middle")}var waterfall={},width=500,segmentHeight=24,segmentPadding=8,labelWidth=50,scenarios=[],stages=[],values=[],colors=[],show0Result=!0,segments=[],xScale=d3Service.scale.linear(),yScale=d3Service.scale.ordinal();return waterfall.show0Result=function(_){return arguments.length?(show0Result=_,waterfall):show0Result},waterfall.colors=function(_){return arguments.length?(colors=_,waterfall):colors},waterfall.width=function(_){return arguments.length?(width=_,waterfall):width},waterfall.segmentHeight=function(_){return arguments.length?(segmentHeight=_,waterfall):segmentHeight},waterfall.segmentPadding=function(_){return arguments.length?(segmentPadding=_,waterfall):segmentPadding},waterfall.labelWidth=function(_){return arguments.length?(labelWidth=_,waterfall):labelWidth},waterfall.scenarios=function(_){return arguments.length?(scenarios=_,waterfall):scenarios},waterfall.stages=function(_){return arguments.length?(stages=_,waterfall):stages},waterfall.values=function(_){return arguments.length?(values=_,waterfall):values},waterfall.layout=function(){var i,j=0,minVal=0,maxVal=0;for(xScale.range([0,width]).nice(),yScale.domain(stages),segments=[],i=0;scenarios.length>i;i++){var endVal=0,scenarioStages=[];for(j=0;stages.length>j;j++)if(show0Result||null!==values[i][j]&&0!==values[i][j]){var segment={};segment.scenario=scenarios[i],segment.stage=stages[j],segment.startVal=endVal,segment.value=values[i][j],segment.endVal=segment.startVal+segment.value,endVal=segment.endVal,scenarioStages.push(segment),minVal>endVal?minVal=endVal:endVal>maxVal&&(maxVal=endVal)}segments.push(scenarioStages)}for(xScale.domain([minVal,maxVal]),i=0;scenarios.length>i;i++)segments[i].forEach(setGraphicAttributes);return waterfall.segments=segments,waterfall.resultStages=function(){return waterfall.stages().filter(hasResult)},show0Result&&(waterfall.chartHeight=stages.length*(waterfall.segmentHeight()+waterfall.segmentPadding()),yScale.rangeRoundBands([0,waterfall.chartHeight],.1),waterfall.yScale=yScale),waterfall.xScale=xScale,waterfall},waterfall}return{createInstance:function(){return new Instance}}}]),angular.module("lcaApp.waterfall",["lcaApp.waterfall.service","lcaApp.waterfall.directive"]),angular.module("lcaApp.compositionProfiles",["ui.router","lcaApp.resources.service","lcaApp.paramGrid.directive","lcaApp.status.service","lcaApp.format","lcaApp.models.param","lcaApp.models.scenario"]).controller("CompositionProfilesController",["$scope","$stateParams","$q","$log","$window","ScenarioModelService","ParamModelService","StatusService","CompositionFlowService","FlowPropertyMagnitudeService",function($scope,$stateParams,$q,$log,$window,ScenarioModelService,ParamModelService,StatusService,CompositionFlowService,FlowPropertyMagnitudeService){function getData(){StatusService.startWaiting(),$q.all([ScenarioModelService.load(),CompositionFlowService.load()]).then(displayData,StatusService.handleFailure)}function displayData(){StatusService.stopWaiting(),$scope.scenarios=ScenarioModelService.getAll(),$scope.flows=CompositionFlowService.getAll(),$scope.flows.length&&$scope.scenarios.length&&(selectScenario(),selectFlow(),$scope.paramGrid=createParamGrid(),getFilteredData())}function getFilteredData(){StatusService.startWaiting(),$q.all([FlowPropertyMagnitudeService.load({flowID:$scope.flow.flowID}),ParamModelService.load($scope.scenario.scenarioID)]).then(displayFlowProperties,StatusService.handleFailure)}function selectFlow(){$stateParams.flowID&&($scope.flow=CompositionFlowService.get(+$stateParams.flowID)),$scope.flow||($scope.flow=$scope.flows[0])}function selectScenario(){$stateParams.scenarioID&&($scope.scenario=ScenarioModelService.get(+$stateParams.scenarioID)),$scope.scenario||($scope.scenario=ScenarioModelService.getActiveScenario())}function getDataFilteredByFlow(){$scope.flow?(StatusService.startWaiting(),FlowPropertyMagnitudeService.load({flowID:$scope.flow.flowID}).then(displayFlowProperties,StatusService.handleFailure)):$scope.referenceFlowProperty=null}function getDataFilteredByScenario(){$scope.scenario&&(StatusService.startWaiting(),ParamModelService.load($scope.scenario.scenarioID).then(displayParams,StatusService.handleFailure))}function displayFlowProperties(){StatusService.stopWaiting();var resources=FlowPropertyMagnitudeService.getAll();resources.length&&($scope.referenceFlowProperty=resources[0].flowProperty,$scope.flowMagnitudes=resources.slice(1)),$scope.paramGrid.extractData()}function displayParams(){StatusService.stopWaiting(),$scope.paramGrid.extractParams()}function createParamGrid(){function handleAppliedChanges(){ParamModelService.load($scope.scenario.scenarioID).then(displayParams,StatusService.handleFailure)}function extractParams(gridData){var params=ParamModelService.getFlowPropertyParams($scope.scenario.scenarioID,$scope.flow.flowID);gridData.forEach(function(row){var param=params&&params.hasOwnProperty(row.flowPropertyID)?params[row.flowPropertyID]:null;row.paramWrapper=ParamModelService.wrapParam(param)}),grid.data=gridData,grid.params.canUpdate=ScenarioModelService.canUpdate($scope.scenario)}function changeParam(row){var paramResource=ParamModelService.changeExistingParam(row.paramWrapper);return paramResource||(paramResource={scenarioID:$scope.scenario.scenarioID,flowPropertyID:row.flowPropertyID,flowID:$scope.flow.flowID,value:+row.paramWrapper.value,paramTypeID:4}),paramResource}var grid={data:[],columns:[{field:"flowPropertyName",displayName:"Flow Property",enableCellEdit:!1},{field:"referenceUnit",displayName:"Reference Unit",enableCellEdit:!1},{field:"magnitude",displayName:"Magnitude",cellFilter:"numFormat",enableCellEdit:!1}],params:{targetIndex:2,canUpdate:!1}};return grid.canApply=function(){return ParamModelService.canApply($scope.scenario,grid.data)},grid.canRevert=function(){return ParamModelService.canRevert($scope.scenario,grid.data)},grid.applyChanges=function(){var changedParams=ParamModelService.getChangedData(grid.data);return StatusService.startWaiting(),ParamModelService.updateResources($scope.scenario.scenarioID,changedParams.map(changeParam),handleAppliedChanges,StatusService.handleFailure)},grid.revertChanges=function(){return ParamModelService.revertChanges(grid.data)},grid.canChangeScenario=function(){return ParamModelService.canAbandonChanges(grid.data)},grid.extractData=function(){var magnitudes=$scope.flowMagnitudes,gridData=[];magnitudes.forEach(function(fpm){var row={flowPropertyID:fpm.flowProperty.flowPropertyID,flowPropertyName:fpm.flowProperty.name,magnitude:fpm.magnitude,referenceUnit:fpm.flowProperty.referenceUnit};gridData.push(row)}),extractParams(gridData)},grid.extractParams=function(){var gridData=grid.data;extractParams(gridData)},grid}$scope.flows=[],$scope.scenarios=[],$scope.flow=null,$scope.paramGrid=null,$scope.onFlowChange=getDataFilteredByFlow,$scope.onScenarioChange=getDataFilteredByScenario,$scope.referenceFlowProperty=null,getData()}]),angular.module("lcaApp.fragment.LCIA",["ui.router","lcaApp.resources.service","lcaApp.status.service","lcaApp.models.lcia","lcaApp.waterfall","isteven-multi-select","lcaApp.selection.service","lcaApp.fragmentNavigation.service","lcaApp.models.scenario","ngSanitize","ngCsv"]).controller("FragmentLciaController",["$scope","$stateParams","$state","StatusService","$q","ScenarioModelService","FragmentService","FragmentStageService","FragmentFlowService","LciaMethodService","LciaModelService","WaterfallService","FragmentNavigationService",function($scope,$stateParams,$state,StatusService,$q,ScenarioModelService,FragmentService,FragmentStageService,FragmentFlowService,LciaMethodService,LciaModelService,WaterfallService,FragmentNavigationService){function getSelectionResults(){$scope.scenarios.length>0&&(getResults(),ScenarioModelService.selectFragmentScenarioIDs($scope.fragment.fragmentID,$scope.scenarios))}function scenarioSelectionChanged(newModel,oldModel){return newModel.length!==oldModel.length||newModel.some(function(element,index){return element.scenarioID!==oldModel[index].scenarioID})}function navigateSubFragment(fragmentFlow){var subFragment=FragmentService.get(fragmentFlow.subFragmentID);subFragment?(subFragment.activityLevel=$scope.fragment.activityLevel*fragmentFlow.nodeWeight,$scope.fragment=subFragment,FragmentNavigationService.add($scope.fragment),clearWaterfalls(),loadSubFragments()):StatusService.handleFailure("Invalid sub-fragment ID : "+fragmentFlow.subFragmentID)}function extractResult(lciaResults){lciaResults&&lciaResults.forEach(function(lciaResult){if(lciaResult&&lciaResult.scenarioID){var scenario=ScenarioModelService.get(lciaResult.scenarioID),result={},activityLevel=scenario.activityLevel;$scope.navigationService&&$scope.fragment.hasOwnProperty("activityLevel")&&(activityLevel=$scope.fragment.activityLevel),lciaResult.lciaScore.forEach(function(score){result[score.fragmentStageID]=score.cumulativeResult*activityLevel}),lciaResult.lciaMethodID in results||(results[lciaResult.lciaMethodID]={}),results[lciaResult.lciaMethodID][lciaResult.scenarioID]=result}})}function getName(o){return o.name}function clearWaterfalls(){$scope.waterfalls={}}function buildWaterfalls(){var stageNames;$scope.hasOwnProperty("scenarioSelection")&&($scope.scenarioSelection.options=fragmentScenarios),stages=FragmentStageService.getAll(),stageNames=stages.map(getName),StatusService.stopWaiting(),$scope.scenarios.forEach(function(scenario){extractResult(LciaModelService.get({scenarioID:scenario.scenarioID,fragmentID:$scope.fragment.fragmentID}))}),$scope.methods.forEach(function(m){var wf;if(m.lciaMethodID in results){var values=[],methodResults=results[m.lciaMethodID];$scope.scenarios.forEach(function(scenario){var stageValues=[];stages.forEach(function(stage){var stageID=stage.fragmentStageID;scenario.scenarioID in methodResults&&stageID in methodResults[scenario.scenarioID]?stageValues.push(methodResults[scenario.scenarioID][stageID]):stageValues.push(null)}),values.push(stageValues.slice(0))}),wf=WaterfallService.createInstance(),wf.scenarios($scope.scenarios).stages(stageNames).values(values.slice(0)).width(300),wf.layout(),$scope.waterfalls[m.lciaMethodID]=wf}else $scope.waterfalls[m.lciaMethodID]=null})}function exportMethodResults(m,rows){var refLink=m.getReferenceLink(),refUnit=m.getReferenceUnit(),wf=$scope.waterfalls[m.lciaMethodID];if(wf){var i,j,stages=wf.stages(),values=wf.values();for(j=0;stages.length>j;j++){var row=[m.name];for(row.push(stages[j]),i=0;$scope.scenarios.length>i;i++)row.push(values[i][j]);row.push([refUnit,refLink]),rows.push(row)}}}function exportWaterfalls(){var rows=[],scenarioNames=$scope.scenarios.map(getName);$scope.fragment&&($scope.methods.forEach(function(m){exportMethodResults(m,rows)}),$scope.csvFileName="Fragment_LCIA_"+$scope.fragment.name.split(" ").join("_")+".csv",$scope.csvHeader=["LCIA Method","Fragment Stage"].concat(scenarioNames,"Unit","ILCD Reference")),$scope.csvData=rows}function getResults(){$scope.fragment&&(StatusService.startWaiting(),FragmentStageService.load({fragmentID:$scope.fragment.fragmentID}).then(getLciaResults,StatusService.handleFailure))}function getLciaResults(){var promises=[];$scope.scenarios.forEach(function(scenario){promises.push(LciaModelService.load({scenarioID:scenario.scenarioID,fragmentID:$scope.fragment.fragmentID}))}),$q.all(promises).then(buildWaterfalls,StatusService.handleFailure)}function getFragmentScenarios(){var scenarios=ScenarioModelService.getAll();if(fragmentScenarios=scenarios.filter(function(s){return s.topLevelFragmentID===$scope.fragment.fragmentID}),fragmentScenarios.length>0){var defaultSelection=fragmentScenarios[0];defaultSelection.selected=!0,$scope.scenarios=[defaultSelection]}}function getTopLevelFragments(scenarios){var fragments=FragmentService.getAll();return fragments.filter(function(f){return scenarios.some(function(s){return s.topLevelFragmentID===f.fragmentID})})}function getSubFragments(fragmentFlows){$scope.navigationSelection.options=fragmentFlows.filter(function(ff){return"Fragment"===ff.nodeType}),getResults()}function loadSubFragments(){$scope.fragment&&FragmentFlowService.load({scenarioID:$scope.navigationScenario.scenarioID,fragmentID:$scope.fragment.fragmentID}).then(getSubFragments,StatusService.handleFailure)
}function getBaseCase(){var baseScenario=ScenarioModelService.getBaseCase();baseScenario&&$scope.scenarios.push(baseScenario)}function displayFragmentNavigation(){var scenarioID=+$stateParams.scenarioID,scenario=ScenarioModelService.get(scenarioID),done=!1;if(scenario){var fragState;FragmentNavigationService.setContext(scenario.scenarioID,scenario.topLevelFragmentID),fragState=FragmentNavigationService.getLast(),$scope.navigationScenario=scenario,ScenarioModelService.isBaseCase(scenario)||$scope.scenarios.push(scenario),fragState?($scope.fragment=fragState,done=!0):($scope.fragment=FragmentService.get(scenario.topLevelFragmentID),$scope.fragment?($scope.fragment.activityLevel=scenario.activityLevel,FragmentNavigationService.add($scope.fragment),done=!0):StatusService.handleFailure("Scenario, "+scenario.name+", has invalid fragment ID : "+scenario.topLevelFragmentID))}else StatusService.handleFailure("Invalid scenario ID : "+scenarioID);return done}function applySelections(topLevelFragments,scenarios,selectFragmentID,selectScenarioIDs){topLevelFragments.forEach(function(fs){fs.fragmentID===selectFragmentID?(fs.selected=!0,$scope.fragment=fs):fs.selected=!1}),topLevelFragments.sort(FragmentService.compareByName),$scope.fragmentSelection.options=topLevelFragments,$scope.fragment&&(fragmentScenarios=scenarios.filter(function(s){return s.topLevelFragmentID===$scope.fragment.fragmentID}),selectScenarioIDs.length>0&&fragmentScenarios.forEach(function(fs){selectScenarioIDs.some(function(s){return fs.scenarioID===s})?(fs.selected=!0,$scope.scenarios.push(fs)):fs.selected=!1}))}function displayTopLevelFragmentScenarios(){var scenarios=ScenarioModelService.getAll(),topLevelFragments=getTopLevelFragments(scenarios),selectFragmentID=0,selectScenarioIDs=[];if($scope.fragment=null,$scope.scenarios=[],scenarios.length>0&&topLevelFragments.length>0){var activeID=ScenarioModelService.getActiveID();if(activeID){var activeScenario=ScenarioModelService.get(activeID);activeScenario&&(selectFragmentID=activeScenario.topLevelFragmentID,selectScenarioIDs.push(activeID),selectFragmentID===ScenarioModelService.getSelectedTopLevelFragmentID()&&ScenarioModelService.getSelectedScenarioIDs().forEach(function(s){s!==activeID&&selectScenarioIDs.push(s)}))}0===selectFragmentID&&(selectFragmentID=ScenarioModelService.getSelectedTopLevelFragmentID(),selectScenarioIDs=ScenarioModelService.getSelectedScenarioIDs()),applySelections(topLevelFragments,scenarios,selectFragmentID,selectScenarioIDs)}}function displayLoadedData(){var methods=LciaMethodService.getAll();StatusService.stopWaiting(),$scope.methods=methods.filter(function(m){return m.getIsActive()}),$scope.navigationService?(getBaseCase(),displayFragmentNavigation()&&loadSubFragments()):(displayTopLevelFragmentScenarios(),$scope.scenarios.length>0&&getResults())}function navigationMode(){return $stateParams.hasOwnProperty("scenarioID")&&void 0!==$stateParams.scenarioID&&$stateParams.hasOwnProperty("fragmentID")&&void 0!==$stateParams.fragmentID}function init(){navigationMode()?($scope.navigationService=FragmentNavigationService,$scope.navigationSelection={options:[],model:[]}):($scope.scenarioSelection={options:[],model:[]},$scope.fragmentSelection={options:[],model:[]})}function getData(){$q.all([FragmentService.load(),ScenarioModelService.load(),LciaMethodService.load()]).then(displayLoadedData,StatusService.handleFailure)}var fragmentScenarios,stages=[],results={};$scope.onFragmentChange=function(){var selectedFragment=$scope.fragmentSelection.model[0];$scope.fragment&&selectedFragment.fragmentID===$scope.fragment.fragmentID||(clearWaterfalls(),$scope.fragment=selectedFragment,getFragmentScenarios(),getSelectionResults())},$scope.onFragmentNavigation=function(){var fragmentFlow=$scope.navigationSelection.model[0];fragmentFlow&&(clearWaterfalls(),navigateSubFragment(fragmentFlow))},$scope.removeMethod=function(m){var index=$scope.methods.indexOf(m);index>-1&&$scope.methods.splice(index,1)},$scope.scenarios=[],$scope.methods=[],$scope.waterfalls={},$scope.navigationService=null,$scope.parentStateIsSankey=$state.includes("home.fragment-sankey"),$scope.onParentFragmentSelected=function(fragment,index){$scope.fragment=fragment,FragmentNavigationService.setLast(index),clearWaterfalls(),loadSubFragments()},$scope.$watch("scenarioSelection.model",function(newVal,oldVal){newVal!==void 0&&newVal!==void 0&&scenarioSelectionChanged(newVal,oldVal)&&(clearWaterfalls(),$scope.scenarios=[],newVal&&($scope.scenarios=newVal,getSelectionResults()))}),$scope.getCsvData=function(){return $scope.disableExport()?null:(exportWaterfalls(),$scope.csvData)},$scope.disableExport=function(){return!$scope.fragment||!$scope.scenarios.length||!$scope.methods.length},$scope.csvData=null,$scope.csvHeader=null,$scope.csvFileName=null,init(),StatusService.startWaiting(),getData()}]),angular.module("lcaApp.fragment.sankey",["ui.router","lcaApp.sankey","lcaApp.resources.service","lcaApp.status.service","lcaApp.format","lcaApp.fragmentNavigation.service","lcaApp.models.param","lcaApp.models.scenario","lcaApp.selection.service","lcaApp.paramGrid.directive","lcaApp.name","lcaApp.colorCode.service"]).controller("FragmentSankeyController",["$scope","$stateParams","$state","StatusService","$q","$log","ScenarioModelService","FragmentService","FragmentFlowService","FlowForFragmentService","ProcessService","FlowPropertyForFragmentService","FormatService","FragmentNavigationService","ParamModelService","PARAM_HINT_CELL_TEMPLATE","NameService","SankeyColorService","FRAGMENT_NODE_TYPE_COLORS","FRAGMENT_FLOW_COLORS",function($scope,$stateParams,$state,StatusService,$q,$log,ScenarioModelService,FragmentService,FragmentFlowService,FlowForFragmentService,ProcessService,FlowPropertyForFragmentService,FormatService,FragmentNavigationService,ParamModelService,PARAM_HINT_CELL_TEMPLATE,NameService,SankeyColorService,FRAGMENT_NODE_TYPE_COLORS,FRAGMENT_FLOW_COLORS){function showFlowProperty(fpID){var fp=FlowPropertyForFragmentService.get(fpID);return fp||StatusService.handleFailure("Unable to get data for flow property with ID: "+fpID),fp&&!("kgP"===fp.referenceUnit||"kg-Av"===fp.referenceUnit||"MJ-Av"===fp.referenceUnit)}function getFirstFlowProperty(ff){var fpID=ff.flowPropertyMagnitudes[0].flowPropertyID;return FlowPropertyForFragmentService.get(fpID)}function filterFragmentFlow(ff){return"Cutoff"!==ff.nodeType&&ff.flowPropertyMagnitudes&&showFlowProperty(getFirstFlowProperty(ff).flowPropertyID)}function buildGraph(makeNew){try{var ff=FragmentFlowService.getAll(),fragmentFlows=ff.filter(filterFragmentFlow);graph.isNew=makeNew,makeNew&&(reverseIndex={},graph.nodes=[],graph.nodes.push(createRootNode()),fragmentFlows.forEach(addGraphNode)),graph.links=[],fragmentFlows.forEach(addGraphLink),$scope.graph=graph}catch(err){StatusService.handleFailure(err)}}function getMagnitude(link,flowPropertyID){var magnitude=null,flowPropertyMagnitudes=[];return"flowPropertyMagnitudes"in link&&(flowPropertyMagnitudes=link.flowPropertyMagnitudes.filter(function(lm){return+lm.flowPropertyID===flowPropertyID})),flowPropertyMagnitudes&&flowPropertyMagnitudes.length>0&&(magnitude=flowPropertyMagnitudes[0].magnitude*$scope.fragment.activityLevel),magnitude}function createRootNode(){var node={nodeType:"InputOutput",nodeID:0,nodeName:"Reference Flow"};return node.toolTip="<strong>"+SankeyColorService.node.getLabel(node.nodeType)+"</strong>",node}function addGraphNode(element){var refObj,selectTip,node={isBackground:element.isBackground,nodeType:element.nodeType,nodeID:element.fragmentFlowID,nodeName:"",toolTip:""},fragFlow=FragmentFlowService.get(element.fragmentFlowID);fragFlow&&(node.nodeName=fragFlow.shortName),node.isBackground&&(node.toolTip="<p>Background</p>"),node.nodeType&&(node.toolTip+="<strong>"+SankeyColorService.node.getLabel(node.nodeType)+"</strong>"),"processID"in element?(refObj=ProcessService.get(element.processID),node.selectable=!0,selectTip="Click to view process instance"):"subFragmentID"in element&&(refObj=FragmentService.get(element.subFragmentID),node.selectable=!0,selectTip="Click to descend"),refObj&&(node.toolTip=node.toolTip+"<p>"+refObj.name+"</p>"),selectTip&&(node.toolTip=node.toolTip+"<i><small>"+selectTip+"</small></i>"),reverseIndex[element.fragmentFlowID]=graph.nodes.push(node)-1}function addGraphLink(element){var link,parentIndex,nodeIndex=reverseIndex[element.fragmentFlowID],magnitude=getMagnitude(element,$scope.selectedFlowProperty.flowPropertyID),value=magnitude?baseValue+Math.abs(magnitude):baseValue,flow=element.hasOwnProperty("flowID")?FlowForFragmentService.get(element.flowID):null,unit=$scope.selectedFlowProperty.referenceUnit;if(!flow)throw Error("Flow with ID, "+flowID+", was not found.");if("parentFragmentFlowID"in element){if(!(element.parentFragmentFlowID in reverseIndex))return;parentIndex=reverseIndex[element.parentFragmentFlowID]}else{var rootNode=graph.nodes[0];rootNode.nodeName=NameService.shorten(flow.name,30),parentIndex=0}link={nodeID:element.fragmentFlowID,flowID:element.flowID,value:value},null===magnitude?(link.unit="N/A",link.toolTip=flow.name):(link.magnitude=magnitude,link.unit=unit,link.toolTip=flow.name+" : "+magFormat(magnitude)+" "+unit),"Input"===element.direction?(link.source=nodeIndex,link.target=parentIndex):(link.source=parentIndex,link.target=nodeIndex),graph.links.push(link)}function visualizeFragment(){StatusService.stopWaiting(),setFlowProperties(),buildGraph(!0),loadGrid(!0)}function initScopeFragment(){var fragState=FragmentNavigationService.getLast();return fragState?$scope.fragment=fragState:($scope.fragment=FragmentService.get($scope.scenario.topLevelFragmentID),$scope.fragment?($scope.fragment.activityLevel=$scope.scenario.activityLevel,FragmentNavigationService.add($scope.fragment)):StatusService.handleFailure("Scenario, "+$scope.scenario.name+", has invalid fragment ID : "+$scope.scenario.topLevelFragmentID)),$scope.fragment}function navigateSubFragment(fragmentFlow){var subFragment=FragmentService.get(fragmentFlow.subFragmentID);subFragment?(subFragment.activityLevel=$scope.fragment.activityLevel*fragmentFlow.nodeWeight,$scope.fragment=subFragment,FragmentNavigationService.add($scope.fragment),getDataForFragment()):StatusService.handleFailure("Invalid sub-fragment ID : "+fragmentFlow.subFragmentID)}function initScopeScenario(){var scenario;if($scope.scenarios=ScenarioModelService.getAll(),scenario=ScenarioModelService.get(defaultScenarioID),scenario||$scope.scenarios.length>0&&(scenario=$scope.scenarios[0]),scenario){if(defaultFragmentID&&scenario.topLevelFragmentID!==defaultFragmentID){var selectedScenarios=ScenarioModelService.getSelectedScenarioIDs();if(selectedScenarios.length>0){var newScenario=ScenarioModelService.get(selectedScenarios[0]);newScenario&&(scenario=newScenario)}}$scope.scenario=scenario}}function activateScenario(){$scope.scenario&&(ScenarioModelService.setActiveID($scope.scenario.scenarioID),$scope.navigationService=FragmentNavigationService.setContext($scope.scenario.scenarioID,$scope.scenario.topLevelFragmentID),initScopeFragment(),getDataForFragment())}function displayLoadedData(){$scope.scenario||initScopeScenario(),activateScenario()}function setFlowProperties(){var selectedFlowProperty=$scope.selectedFlowProperty,flowProperties=FlowPropertyForFragmentService.getAll();flowProperties.sort(FlowPropertyForFragmentService.compareByName),flowProperties?(selectedFlowProperty&&(selectedFlowProperty=flowProperties.find(function(element){return element.flowPropertyID===selectedFlowProperty.flowPropertyID})),selectedFlowProperty||(selectedFlowProperty=flowProperties.find(function(element){return"Mass"===element.name}),selectedFlowProperty||(selectedFlowProperty=flowProperties[0]))):selectedFlowProperty=null,$scope.flowProperties=flowProperties,$scope.selectedFlowProperty=selectedFlowProperty}function getData(){StatusService.startWaiting(),$q.all([ScenarioModelService.load(),FragmentService.load(),ProcessService.load()]).then(displayLoadedData,StatusService.handleFailure)}function getDataForFragment(){var fragmentID=$scope.fragment.fragmentID;StatusService.startWaiting(),$q.all([FlowPropertyForFragmentService.load({fragmentID:fragmentID}),FragmentFlowService.load({scenarioID:$scope.scenario.scenarioID,fragmentID:fragmentID}),FlowForFragmentService.load({fragmentID:fragmentID}),ParamModelService.load($scope.scenario.scenarioID)]).then(visualizeFragment,StatusService.handleFailure)}function onNodeSelectionChange(newVal){if(newVal){var fragmentFlow=FragmentFlowService.get(newVal.nodeID);switch(newVal.nodeType){case"Process":$state.go(".process-instance",{scenarioID:$scope.scenario.scenarioID,fragmentID:$scope.fragment.fragmentID,fragmentFlowID:fragmentFlow.fragmentFlowID,activity:$scope.fragment.activityLevel*fragmentFlow.nodeWeight});break;case"Fragment":navigateSubFragment(fragmentFlow)}}}function getSelectedFragmentID(){var selectedTopLevelFragmentID=ScenarioModelService.getSelectedTopLevelFragmentID();selectedTopLevelFragmentID&&(defaultFragmentID=selectedTopLevelFragmentID)}function getActiveScenarioID(){var activeID=ScenarioModelService.getActiveID();activeID&&(defaultScenarioID=activeID)}function getStateParams(){$stateParams.hasOwnProperty("scenarioID")&&void 0!==$stateParams.scenarioID&&(defaultScenarioID=+$stateParams.scenarioID),$stateParams.hasOwnProperty("fragmentID")&&void 0!==$stateParams.fragmentID&&(defaultFragmentID=+$stateParams.fragmentID)}function defineGridColumns(){$scope.columns=[{field:"sourceName",displayName:"Source Node",enableCellEdit:!1},{field:"targetName",displayName:"Target Node",enableCellEdit:!1},{field:"link.magnitude",displayName:"Magnitude",enableCellEdit:!1,cellTemplate:PARAM_HINT_CELL_TEMPLATE},{field:"link.unit",displayName:"Unit",enableCellEdit:!1,width:70}]}function defineGrids(){defineGridColumns()}function defineGraphColors(){SankeyColorService.createColorSpec("node",FRAGMENT_NODE_TYPE_COLORS,function(node){return node.nodeType},{Fragment:"Sub-fragment",InputOutput:"Input/Output",Process:"Process"}),SankeyColorService.createColorSpec("link",FRAGMENT_FLOW_COLORS,function(link){return link.hasOwnProperty("magnitude")&&link.magnitude>0?"positive":"negative"},{positive:"Flow",negative:"Negative magnitude flow"}),$scope.color=SankeyColorService}function loadGrid(){var gridFlows=[];graph.links.forEach(function(l){var gridFlow,paramResource=ParamModelService.getFragmentFlowParam($scope.scenario.scenarioID,l.nodeID);gridFlow={sourceName:graph.nodes[l.source].nodeName,targetName:graph.nodes[l.target].nodeName,link:l,paramWrapper:ParamModelService.wrapParam(paramResource)},gridFlows.push(gridFlow)}),$scope.gridFlows=gridFlows}var defaultScenarioID=ScenarioModelService.getBaseCaseID(),defaultFragmentID=0,graph={},reverseIndex={},baseValue=1e-14,magFormat=FormatService.format();$scope.selectedFlowProperty=null,$scope.selectedNode=null,$scope.mouseOverNode=null,$scope.fragment=null,$scope.scenario=null,$scope.$watch("selectedNode",onNodeSelectionChange),$scope.onScenarioChange=activateScenario,$scope.gridFlows=[],$scope.legendSelector="#sankeyLegend",$scope.onFlowPropertyChange=function(){buildGraph(!1),loadGrid(!1)},$scope.onParentFragmentSelected=function(fragment,index){$scope.fragment=fragment,FragmentNavigationService.setLast(index),getDataForFragment()},getSelectedFragmentID(),getActiveScenarioID(),getStateParams(),defineGrids(),defineGraphColors(),getData()}]),angular.module("lcaApp.home",["lcaApp.resources.service","lcaApp.models.scenario","lcaApp.status.service","ui.bootstrap","ui.router","lcaApp.scenario.clone","lcaApp.modal.confirm"]).controller("HomeCtrl",["$scope","$window","StatusService","$state","ScenarioModelService","ScenarioGroupService","FragmentService","LciaMethodService","$q","$modal",function($scope,$window,StatusService,$state,ScenarioModelService,ScenarioGroupService,FragmentService,LciaMethodService,$q,$modal){function requestClone(scenario){var urlParam={cloneScenario:scenario.scenarioID};StatusService.startWaiting(),ScenarioModelService.create(urlParam,scenario,reloadScenarios,StatusService.handleFailure)}function requestDelete(scenario){StatusService.startWaiting(),ScenarioModelService.getActiveID()===scenario.scenarioID&&ScenarioModelService.removeActiveID(),ScenarioModelService.remove(null,scenario,reloadScenarios,StatusService.handleFailure)}function reloadScenarios(){ScenarioModelService.load().then(function(){StatusService.handleSuccess(),displayScenarios()},StatusService.handleFailure)}function displayScenarios(){var scenarios=ScenarioModelService.getAll();scenarios.forEach(function(scenario){$scope.fragments[scenario.topLevelFragmentID]=FragmentService.get(scenario.topLevelFragmentID)}),$scope.scenarios=scenarios}function displayLciaMethods(){var lciaMethods=LciaMethodService.getAll();lciaMethods.forEach(function(method){method.getIsActive()}),$scope.lciaMethods=lciaMethods}$scope.fragments={},$scope.canCreate=!1,$scope.createScenario=function(){$state.go(".new-scenario")},$scope.deleteScenario=function(scenario){var question="Are you sure you want to permanently delete scenario, "+scenario.name+"?",modalParameters={title:"Confirm Delete",question:question,result:scenario},modalInstance=$modal.open({templateUrl:"components/modal/modal-confirm.html",controller:"ModalConfirmController",size:"sm",resolve:{parameters:function(){return modalParameters}}});modalInstance.result.then(requestDelete)},$scope.cloneScenario=function(scenario){var copiedScenario=angular.copy(scenario),modalInstance=$modal.open({templateUrl:"scenario/scenario-clone.html",controller:"ScenarioCloneController",size:"sm",resolve:{scenario:function(){return copiedScenario}}});modalInstance.result.then(requestClone)},$scope.canDelete=ScenarioModelService.canDelete,StatusService.startWaiting(),$q.all([ScenarioModelService.load(),ScenarioGroupService.load(),FragmentService.load(),LciaMethodService.load()]).then(function(){StatusService.handleSuccess(),$scope.canCreate=ScenarioModelService.canCreateScenario(ScenarioGroupService.getAll()),displayScenarios(),displayLciaMethods()},StatusService.handleFailure)}]),angular.module("lcaApp.LCIA.comparison",["ui.router","lcaApp.resources.service","lcaApp.status.service","ngGrid","lcaApp.plot","lcaApp.format","lcaApp.models.lcia","lcaApp.models.scenario","lcaApp.selection.service","ngCsv"]).controller("LciaComparisonController",["$scope","$stateParams","$state","StatusService","$q","PlotService","FormatService","FragmentService","LciaMethodService","ProcessForFlowTypeService","ScenarioModelService","LciaModelService","SelectionService",function($scope,$stateParams,$state,StatusService,$q,PlotService,FormatService,FragmentService,LciaMethodService,ProcessForFlowTypeService,ScenarioModelService,LciaModelService,SelectionService){function getData(){StatusService.startWaiting(),$q.all([ScenarioModelService.load(),FragmentService.load(),ProcessForFlowTypeService.load({flowTypeID:2}),LciaMethodService.load()]).then(displayData,StatusService.handleFailure)}function displayData(){StatusService.stopWaiting(),$scope.selection.displayData(),$scope.lciaMethods=LciaMethodService.getAll().filter(function(m){return m.getIsActive()}),$scope.plot.addConfig(),addGridData()}function addGridData(){$scope.selection.restorePrevious(),$scope.gridData.length?$scope.gridData.forEach($scope.plot.getResult):addGridRow()}function addGridRow(){var row={componentType:$scope.selection.type,index:$scope.gridData.length,scenario:$scope.selection.scenario,activityLevel:$scope.selection.activityLevel,chartLabel:$scope.selection.chartLabel};row.scenarioRef="home.scenario({scenarioID: "+row.scenario.scenarioID+"})",$scope.selection.isFragment()?(row.fragmentID=$scope.selection.fragment.fragmentID,row.componentName=$scope.selection.fragment.name,row.componentRef="home.fragment-lcia({fragmentID: "+row.fragmentID+", scenarioID: "+row.scenario.scenarioID+"})"):(row.processID=$scope.selection.process.processID,row.componentName=$scope.selection.process.getLongName(),row.componentRef="home.process-lcia({processID: "+row.processID+", scenarioID: "+row.scenario.scenarioID+", activity: "+row.activityLevel+" })"),$scope.gridData.push(row),$scope.plot.getResult(row),resetInput()}function resetInput(){$scope.selection.chartLabel=null}function createSelectionComponent(){function displayData(){selection.fragmentOptions=FragmentService.getAll(),selection.processOptions=ProcessForFlowTypeService.getAll(),selection.scenarioOptions=ScenarioModelService.getAll(),selection.scenarioOptions.length&&(selection.scenario=ScenarioModelService.getActiveScenario(),selection.fragmentOptions.length&&(selection.fragment=FragmentService.get(selection.scenario.topLevelFragmentID)),selection.processOptions.length&&(selection.processOptions.sort(ProcessForFlowTypeService.compareByName),selection.process=selection.processOptions[0]))}function isFragment(){return"Fragment"===selection.type}function restorePrevious(){SelectionService.contains(selection.key)&&($scope.gridData=SelectionService.get(selection.key))}function savePrevious(){SelectionService.set(selection.key,$scope.gridData)}var selection={type:"Fragment",fragment:null,fragmentOptions:[],process:null,processOptions:[],scenario:null,scenarioOptions:[],add:addGridRow,displayData:displayData,isFragment:isFragment,restorePrevious:restorePrevious,savePrevious:savePrevious,activityLevel:1,chartLabel:null,key:"LciaComparisonGrid"};return selection}function createGrid(){var removeTemplate='<button type="button" class="ngCell btn btn-default btn-sm" ng-click="removeGridRow(row.entity)" aria-label="Remove"><span class="glyphicon glyphicon-remove"></span></button>',numTemplate='<input type="number" step="any" ng-input="COL_FIELD" ng-model="COL_FIELD" />',labelTemplate='<input type="text" maxlength={{maxLabelLen}} ng-input="COL_FIELD" ng-model="COL_FIELD" />',compTemplate='<div class="ngCellText" ng-class="col.colIndex()"><a title="Navigate to LCIA detail view" ui-sref={{row.entity.componentRef}}>{{COL_FIELD}}</a></div>',scenarioTemplate='<div class="ngCellText" ng-class="col.colIndex()"><a title="Navigate to scenario detail view" ui-sref={{row.entity.scenarioRef}}>{{COL_FIELD}}</a></div>',columnDefs=[{field:"componentType",displayName:"Type",width:100,enableCellEdit:!1},{field:"componentName",cellTemplate:compTemplate,displayName:"Name",enableCellEdit:!1},{field:"scenario.name",cellTemplate:scenarioTemplate,displayName:"Scenario",enableCellEdit:!1},{field:"activityLevel",cellTemplate:numTemplate,displayName:"Activity Level",enableCellEdit:!0},{field:"chartLabel",cellTemplate:labelTemplate,displayName:"Chart Label",enableCellEdit:!0},{field:"",cellTemplate:removeTemplate,width:35,enableCellEdit:!1}];return{columnDefs:columnDefs,data:"gridData",enableRowSelection:!1,enableCellEditOnFocus:!0,enableHighlighting:!0,enableColumnResize:!0,plugins:[resizeGridPlugin]}}function createPlot(){function addConfig(){var config={};$scope.lciaMethods.forEach(function(m){var mc=createCommonConfig(),barColorScales=m.getColorScales(),barColor=barColorScales.hasOwnProperty("9")?barColorScales[9][2]:m.getDefaultColor();mc.content().color(barColor),mc.x().unit(m.getReferenceUnit()),config[m.lciaMethodID]=mc}),plot.config=config}function getX(d){return d.value*+d.row.activityLevel}function getY(d){return d.row.index}function getLabel(index){var label=$scope.gridData[index].chartLabel;return label||(label=""+(index+1)),label}function createCommonConfig(){var xAxis=PlotService.createAxis(),xDim=PlotService.createDimension().scale("linear").valueFn(getX).labelFn(FormatService.format("^.2g")).axis(xAxis.orientation("bottom").offset(30).tickFormat(FormatService.format("^.1g"))),yAxis=PlotService.createAxis(),yDim=PlotService.createDimension().scale("ordinal").valueFn(getY).axis(yAxis.offset(7.5*$scope.maxLabelLen).tickFormat(getLabel)),margin=PlotService.createMargin(0,15,5),bar=PlotService.createBar();return PlotService.createConfig().content(bar.padding(2)).margin(margin).x(xDim).y(yDim)}function getLciaResults(gridRow){return gridRow.hasOwnProperty("fragmentID")?LciaModelService.load({scenarioID:gridRow.scenario.scenarioID,fragmentID:gridRow.fragmentID}):LciaModelService.load({scenarioID:gridRow.scenario.scenarioID,processID:gridRow.processID})}function newArray(length){for(var a=[];length-->0;)a.push(null);return a}function plotRow(gridRow,results){StatusService.stopWaiting();var index=gridRow.index;if(results.length){var data=plot.data;results.forEach(function(result){var plotRow={row:gridRow,value:result.total};data.hasOwnProperty(""+result.lciaMethodID)||(data[result.lciaMethodID]=newArray($scope.gridData.length)),data[result.lciaMethodID][index]=plotRow})}else StatusService.displayInfo("The fragment is outside the scope of this scenario."),$scope.removeGridRow(gridRow)}var plot={data:{},config:null};return plot.addConfig=addConfig,plot.getResult=function(gridRow){StatusService.startWaiting(),getLciaResults(gridRow).then(function(results){plotRow(gridRow,results)},StatusService.handleFailure)},plot.removeRow=function(index){var data=plot.data;$scope.lciaMethods.forEach(function(m){data.hasOwnProperty(m.lciaMethodID)&&data[m.lciaMethodID].splice(index,1)})},plot}function createCsvComponent(){function getHeader(){return["LCIA Method","Type","Name","Scenario","Unit Score","Activity Level","Total","Reference Unit","ILCD Reference"]}function getData(){return allData=[],$scope.lciaMethods.forEach(getMethodData),allData}function getMethodData(m){var data=$scope.plot.data[m.lciaMethodID];data.forEach(function(d){var gridRow=d.row,score=d.value;allData.push([m.name,gridRow.componentType,gridRow.componentName,gridRow.scenario.name,score,gridRow.activityLevel,score*+gridRow.activityLevel,m.getReferenceUnit(),m.getReferenceLink()])})}var allData=[];return{header:getHeader(),fileName:"LCIA_Comparison.csv",getData:getData}}var resizeGridPlugin=new ngGridFlexibleHeightPlugin;$scope.selection=createSelectionComponent(),$scope.gridData=[],$scope.gridOpts=createGrid(),$scope.lciaMethods=[],$scope.maxLabelLen=7,$scope.plot=createPlot(),$scope.$on("$destroy",$scope.selection.savePrevious),$scope.csv=createCsvComponent(),$scope.csvHeader=$scope.csv.header,$scope.csvFileName=$scope.csv.fileName,$scope.removeMethod=function(m){var index=$scope.lciaMethods.indexOf(m);index>-1&&$scope.lciaMethods.splice(index,1)},$scope.removeGridRow=function(r){var rows=$scope.gridData,index=r.index;$scope.plot.removeRow(index),rows.splice(index,1);for(var i=index;rows.length>i;++i)--rows[i].index},getData()}]),angular.module("lcaApp.lciaMethod.detail",["ui.router","lcaApp.resources.service","ui.bootstrap.accordion","lcaApp.paramGrid.directive","lcaApp.status.service","lcaApp.models.param","lcaApp.models.scenario","lcaApp.referenceLink.directive"]).controller("LciaMethodDetailController",["$scope","$stateParams","$q","$log","$window","ImpactCategoryService","LciaMethodService","FlowForLciaMethodService","LciaFactorService","ScenarioModelService","ParamModelService","PARAM_VALUE_STATUS","StatusService",function($scope,$stateParams,$q,$log,$window,ImpactCategoryService,LciaMethodService,FlowForLciaMethodService,LciaFactorService,ScenarioModelService,ParamModelService,PARAM_VALUE_STATUS,StatusService){function setGridColumns(){var factorHeader="Factor";$scope.lciaMethod.referenceFlowProperty.referenceUnit&&(factorHeader="Factor ["+$scope.lciaMethod.referenceFlowProperty.referenceUnit+"]"),$scope.gridColumns=[{field:"category",displayName:"Flow Category",enableCellEdit:!1},{field:"name",displayName:"Flow Name",enableCellEdit:!1},{field:"factor",displayName:factorHeader,cellFilter:"numFormat",enableCellEdit:!1}],$scope.params={targetIndex:2,canUpdate:$scope.paramScenario&&ScenarioModelService.canUpdate($scope.paramScenario)}}function displayLciaFactors(){var lciaFactors=LciaFactorService.getAll();gridData=lciaFactors.map(function(f){var flow=FlowForLciaMethodService.get(f.flowID);return{flowID:flow.flowID,category:flow.category,name:flow.name,factor:f.factor}}),getParams()}function selectActiveScenario(){$scope.paramScenario=ScenarioModelService.getActiveScenario()}function handleLciaFactorResults(){StatusService.handleSuccess(),$scope.scenarios=ScenarioModelService.getAll(),selectActiveScenario(),$scope.lciaMethod=LciaMethodService.get($stateParams.lciaMethodID),$scope.lciaMethod?($scope.impactCategory=ImpactCategoryService.get($scope.lciaMethod.impactCategoryID),displayLciaFactors()):StatusService.handleFailure("Invalid LCIA method ID parameter.")}function addParamData(){StatusService.handleSuccess(),gridData.forEach(function(lf){var param=ParamModelService.getLciaMethodFlowParam($scope.paramScenario.scenarioID,$scope.lciaMethod.lciaMethodID,lf.flowID);lf.paramWrapper=ParamModelService.wrapParam(param)}),setGridColumns(),$scope.gridData=gridData}function clearParamData(){gridData.forEach(function(lf){lf.paramWrapper=null}),setGridColumns(),$scope.gridData=gridData}function getParams(){StatusService.stopWaiting(),$scope.paramScenario?(StatusService.startWaiting(),ParamModelService.load($scope.paramScenario.scenarioID).then(addParamData,StatusService.handleFailure)):clearParamData()}function changeScenario(){ScenarioModelService.setActiveID($scope.paramScenario.scenarioID),getParams()}function changeParam(lf){var paramResource=ParamModelService.changeExistingParam(lf.paramWrapper);return paramResource||(paramResource={scenarioID:$scope.paramScenario.scenarioID,lciaMethodID:$scope.lciaMethod.lciaMethodID,flowID:lf.flowID,value:+lf.paramWrapper.value}),paramResource}var gridData=[];$scope.gridData=[],$scope.gridColumns=[],$scope.accordionStatus={attributesOpen:!0},$scope.paramScenario=null,$scope.onScenarioChange=changeScenario,$scope.canApply=function(){return $scope.paramScenario&&ScenarioModelService.canUpdate($scope.paramScenario)&&ParamModelService.canApplyChanges($scope.gridData)},$scope.canRevert=function(){return $scope.paramScenario&&ScenarioModelService.canUpdate($scope.paramScenario)&&ParamModelService.canRevertChanges($scope.gridData)},$scope.canChangeScenario=function(){return ParamModelService.canAbandonChanges($scope.gridData)},$scope.applyChanges=function(){var changedParams=$scope.gridData.filter(function(e){return e.paramWrapper.editStatus===PARAM_VALUE_STATUS.changed});StatusService.startWaiting(),ParamModelService.updateResources($scope.paramScenario.scenarioID,changedParams.map(changeParam),getParams,StatusService.handleFailure)},$scope.revertChanges=function(){ParamModelService.revertChanges($scope.gridData)},StatusService.startWaiting(),$q.all([LciaMethodService.load(),ImpactCategoryService.load(),ScenarioModelService.load(),FlowForLciaMethodService.load({lciaMethodID:$stateParams.lciaMethodID}),LciaFactorService.load({lciaMethodID:$stateParams.lciaMethodID})]).then(handleLciaFactorResults,StatusService.handleFailure)}]),angular.module("lcaApp.process.flowParam",["ui.router","lcaApp.resources.service","lcaApp.status.service","lcaApp.format","lcaApp.paramGrid.directive","lcaApp.lciaDetail.service","lcaApp.models.param","lcaApp.models.scenario","lcaApp.changeButtons.directive"]).controller("ProcessFlowParamController",["$scope","$stateParams","$state","StatusService","$q","$log","ScenarioModelService","ProcessForFlowTypeService","ProcessFlowService","LciaMethodService","LciaResultForProcessService","ParamModelService","PARAM_VALUE_STATUS",function($scope,$stateParams,$state,StatusService,$q,$log,ScenarioModelService,ProcessForFlowTypeService,ProcessFlowService,LciaMethodService,LciaResultForProcessService,ParamModelService,PARAM_VALUE_STATUS){function goBack(){$state.go("^")}function changeParam(f){var paramResource=ParamModelService.changeExistingParam(f.paramWrapper);return paramResource||(paramResource={scenarioID:$scope.scenario.scenarioID,processID:$scope.process.processID,flowID:f.flowID,value:+f.paramWrapper.value},paramResource.paramTypeID=f.hasOwnProperty("dissipation")?6:8),paramResource}function getStateParams(){$scope.activityLevel="activity"in $stateParams?+$stateParams.activity:1,"scenarioID"in $stateParams&&(scenarioID=+$stateParams.scenarioID),"processID"in $stateParams&&(processID=+$stateParams.processID),"lciaMethodID"in $stateParams&&(lciaMethodID=+$stateParams.lciaMethodID)
}function reportInvalidID(resourceName,id){StatusService.handleFailure(resourceName+" ID, "+id+", is invalid.")}function handleSuccess(){$scope.scenario=ScenarioModelService.get(scenarioID),$scope.scenario?($scope.process=ProcessForFlowTypeService.get(processID),$scope.process?($scope.lciaMethod=LciaMethodService.get(lciaMethodID),$scope.lciaMethod?(defineGrids(),extractElementaryFlows(),LciaResultForProcessService.get({scenarioID:scenarioID,lciaMethodID:lciaMethodID,processID:processID},extractLciaDetails)):reportInvalidID("LCIA Method",lciaMethodID)):reportInvalidID("Process",processID)):reportInvalidID("Scenario",scenarioID)}function getData(){processID>0&&lciaMethodID>0&&scenarioID>0?(StatusService.startWaiting(),$q.all([ScenarioModelService.load(),ProcessForFlowTypeService.load({flowTypeID:2}),LciaMethodService.load(),ProcessFlowService.load({processID:processID}),ParamModelService.load(scenarioID)]).then(handleSuccess,StatusService.handleFailure)):StatusService.handleFailure("URL must contain scenarioID, processID, and lciaMethodID.")}function extractLciaDetails(lciaResult){var lciaDetail=[];StatusService.stopWaiting(),$scope.dissipation.flows=[],$scope.emission.flows=[],lciaResult&&lciaResult.hasOwnProperty("lciaScore")&&lciaResult.lciaScore.length>0&&(lciaDetail=lciaResult.lciaScore[0].lciaDetail,lciaDetail.forEach(function(ld){var paramResource=null,flow=null;ld.hasOwnProperty("flowID")&&ld.flowID in $scope.elementaryFlows&&(flow=$scope.elementaryFlows[ld.flowID],flow.factor=ld.factor,flow.result=ld.result*$scope.activityLevel,flow.hasOwnProperty("dissipation")?(paramResource=ParamModelService.getProcessFlowParam(scenarioID,processID,ld.flowID,6),flow.paramWrapper=ParamModelService.wrapParam(paramResource),flow.content=ld.content,$scope.dissipation.flows.push(flow)):(paramResource=ParamModelService.getProcessFlowParam(scenarioID,processID,ld.flowID,8),flow.paramWrapper=ParamModelService.wrapParam(paramResource),$scope.emission.flows.push(flow)))}),$scope.fragmentFlows=$scope.emission.flows.concat($scope.dissipation.flows))}function extractElementaryFlows(){var processFlows=ProcessFlowService.getAll();$scope.elementaryFlows={},processFlows.forEach(function(pf){2===pf.flow.flowTypeID&&($scope.elementaryFlows[pf.flow.flowID]=pf.flow,$scope.elementaryFlows[pf.flow.flowID].quantity=pf.quantity,pf.hasOwnProperty("dissipation")&&($scope.elementaryFlows[pf.flow.flowID].dissipation=pf.dissipation))})}function defineGridColumns(){$scope.dissipation.columns=[{field:"category",displayName:"Flow Category",enableCellEdit:!1},{field:"name",displayName:"Flow Name",enableCellEdit:!1},{field:"content",displayName:"Content",cellFilter:"numFormat",enableCellEdit:!1},{field:"dissipation",displayName:"Dissipation Factor",cellFilter:"numFormat",enableCellEdit:!1},{field:"factor",displayName:"LCIA Factor",cellFilter:"numFormat",enableCellEdit:!1},{field:"result",displayName:"LCIA Result",cellFilter:"numFormat",enableCellEdit:!1}],$scope.emission.columns=[{field:"category",displayName:"Flow Category",enableCellEdit:!1},{field:"name",displayName:"Flow Name",enableCellEdit:!1},{field:"quantity",displayName:"Emission Factor",cellFilter:"numFormat",enableCellEdit:!1},{field:"factor",displayName:"LCIA Factor",cellFilter:"numFormat",enableCellEdit:!1},{field:"result",displayName:"LCIA Result",cellFilter:"numFormat",enableCellEdit:!1}]}function defineGrids(){var canUpdate=ScenarioModelService.canUpdate($scope.scenario);defineGridColumns(),$scope.dissipation.params={targetIndex:3,canUpdate:canUpdate},$scope.emission.params={targetIndex:2,canUpdate:canUpdate}}function getActiveScenarioID(){var activeID=ScenarioModelService.getActiveID();activeID&&(scenarioID=activeID)}var processID=0,scenarioID=0,lciaMethodID=0;$scope.process=null,$scope.scenario=null,$scope.dissipation={options:{},flows:[],columns:[],params:{}},$scope.emission={options:{},flows:[],columns:[],params:{}},$scope.lciaResults={},$scope.fragmentFlows=[],$scope.canApply=function(){return $scope.scenario&&ScenarioModelService.canUpdate($scope.scenario)&&ParamModelService.canApplyChanges($scope.fragmentFlows)},$scope.canRevert=function(){return $scope.scenario&&ScenarioModelService.canUpdate($scope.scenario)&&ParamModelService.canRevertChanges($scope.fragmentFlows)},$scope.canReturn=function(){return ParamModelService.canAbandonChanges($scope.fragmentFlows)},$scope.applyChanges=function(){var changedParams=$scope.fragmentFlows.filter(function(f){return f.paramWrapper.editStatus===PARAM_VALUE_STATUS.changed});StatusService.startWaiting(),ParamModelService.updateResources($scope.scenario.scenarioID,changedParams.map(changeParam),goBack,StatusService.handleFailure)},$scope.revertChanges=function(){ParamModelService.revertChanges($scope.fragmentFlows)},getActiveScenarioID(),getStateParams(),getData()}]),angular.module("lcaApp.process.instance",["ui.router","lcaApp.resources.service","lcaApp.status.service","lcaApp.lciaBar.directive","lcaApp.colorCode.service","lcaApp.format","lcaApp.fragmentNavigation.service","lcaApp.lciaDetail.service","lcaApp.models.param","lcaApp.models.scenario","lcaApp.referenceLink.directive","lcaApp.paramGrid.directive"]).controller("ProcessInstanceController",["$scope","$stateParams","$state","StatusService","$q","$log","ScenarioModelService","ProcessService","ProcessCommentService","ProcessFlowService","FlowPropertyMagnitudeService","ProcessDissipationService","LciaMethodService","FlowPropertyForProcessService","LciaResultForProcessService","FragmentFlowService","ColorCodeService","FragmentNavigationService","MODEL_BASE_CASE_SCENARIO_ID","LciaDetailService","ParamModelService","CompositionFlowService",function($scope,$stateParams,$state,StatusService,$q,$log,ScenarioModelService,ProcessService,ProcessCommentService,ProcessFlowService,FlowPropertyMagnitudeService,ProcessDissipationService,LciaMethodService,FlowPropertyForProcessService,LciaResultForProcessService,FragmentFlowService,ColorCodeService,FragmentNavigationService,MODEL_BASE_CASE_SCENARIO_ID,LciaDetailService,ParamModelService,CompositionFlowService){function extractResult(result){var lciaDetail=null,lciaMethod=LciaMethodService.get(result.lciaMethodID),colors=ColorCodeService.getImpactCategoryColors(lciaMethod.impactCategoryID),activityLevel=$scope.activityLevel;result.lciaScore[0].lciaDetail.length>0?(lciaDetail=LciaDetailService.createInstance(),lciaDetail.colors(colors).activityLevel(activityLevel).scenarioID(scenarioID).processID(processID).lciaMethodID(result.lciaMethodID).resultDetails(result.lciaScore[0].lciaDetail).prepareBarChartData(),$scope.panelHeadingStyle[lciaMethod.lciaMethodID]={}):$scope.panelHeadingStyle[lciaMethod.lciaMethodID]={"background-color":lciaMethod.getDefaultColor()},$scope.lciaResults[lciaMethod.lciaMethodID]={cumulativeResult:(result.lciaScore[0].cumulativeResult*activityLevel).toPrecision(4),detail:lciaDetail}}function getLciaResult(lciaMethod){LciaResultForProcessService.get({scenarioID:scenarioID,lciaMethodID:lciaMethod.lciaMethodID,processID:processID},extractResult)}function getLciaResults(){$scope.process.hasElementaryFlows?($scope.lciaMethods=LciaMethodService.getAll().filter(function(m){return m.getIsActive()}),$scope.lciaMethods.forEach(getLciaResult)):$scope.lciaMsg="The current process has no elementary flows."}function getProcessResults(){StatusService.stopWaiting(),getFlowRows(),$scope.paramGrid.dissipation&&($scope.compositionFlow=CompositionFlowService.get($scope.process.compositionFlowID),$scope.paramGrid.dissipation.extractData()),getLciaResults()}function getStateParams(){"activity"in $stateParams&&($scope.activityLevel=+$stateParams.activity),"scenarioID"in $stateParams&&(scenarioID=+$stateParams.scenarioID),"fragmentID"in $stateParams&&(fragmentID=+$stateParams.fragmentID),"fragmentFlowID"in $stateParams&&(fragmentFlowID=+$stateParams.fragmentFlowID)}function prepareViewWithFragmentNavigation(){var navState;$scope.scenario=ScenarioModelService.get(scenarioID),$scope.scenario?($scope.navigationStates=FragmentNavigationService.setContext(scenarioID,$scope.scenario.topLevelFragmentID).getAll(),navState=FragmentNavigationService.getLast(),navState&&navState.hasOwnProperty("activityLevel")&&(fragmentActivityLevel=navState.activityLevel),processFragmentFlow=FragmentFlowService.get(fragmentFlowID),processFragmentFlow?(processID=processFragmentFlow.processID,$scope.process=ProcessService.get(processID)):StatusService.handleFailure("Invalid fragmentFlowID : "+fragmentFlowID)):StatusService.handleFailure("Invalid scenario ID : "+scenarioID)}function handleSuccess(){StatusService.stopWaiting(),prepareViewWithFragmentNavigation(),processID&&getDataFilteredByProcess()}function updateParamGrid(){StatusService.stopWaiting(),processFragmentFlow=FragmentFlowService.get(fragmentFlowID),extractFragmentFlowData()}function getDataFilteredByProcess(){var requests=[ProcessFlowService.load({processID:processID}),FlowPropertyForProcessService.load({processID:processID})];if($scope.processComment=ProcessCommentService.get({processID:processID}),$scope.process&&$scope.process.compositionFlowID){var flowID=$scope.process.compositionFlowID;requests.push(ProcessDissipationService.load({processID:processID})),requests.push(FlowPropertyMagnitudeService.load({flowID:flowID})),requests.push(CompositionFlowService.load()),$scope.paramGrid.dissipation=createProcessDissipationParamGrid()}StatusService.startWaiting(),$q.all(requests).then(getProcessResults,StatusService.handleFailure)}function getData(){StatusService.startWaiting(),$q.all([ScenarioModelService.load(),ProcessService.load(),LciaMethodService.load(),FragmentFlowService.load({scenarioID:scenarioID,fragmentID:fragmentID}),ParamModelService.load(scenarioID)]).then(handleSuccess,StatusService.handleFailure)}function defineGridColumns(){$scope.columns=[{field:"name",displayName:"Name",enableCellEdit:!1},{field:"direction",displayName:"Direction",enableCellEdit:!1,width:70},{field:"quantity",displayName:"Quantity",cellFilter:"numFormat",enableCellEdit:!1},{field:"magnitude",displayName:"Magnitude",cellFilter:"numFormat",enableCellEdit:!1,width:120},{field:"unit",displayName:"Unit",enableCellEdit:!1,width:70}]}function defineGrids(){var canUpdate=ScenarioModelService.canUpdate($scope.scenario);defineGridColumns(),$scope.params={targetIndex:2,canUpdate:canUpdate}}function isProcessFragmentFlow(ff){return ff.fragmentFlowID===processFragmentFlow.fragmentFlowID||ff.hasOwnProperty("parentFragmentFlowID")&&ff.parentFragmentFlowID===processFragmentFlow.fragmentFlowID}function getFirstFlowProperty(ff){var fpID=ff.flowPropertyMagnitudes[0].flowPropertyID;return FlowPropertyForProcessService.get(fpID)}function addGridFlow(ff){var paramResource=ParamModelService.getFragmentFlowParam(scenarioID,ff.fragmentFlowID),ffName="Cutoff"==ff.nodeType?"(cutoff) "+ff.name:ff.name,gridFlow={fragmentFlowID:ff.fragmentFlowID,direction:ff.direction,name:ffName},nodeWeight=processFragmentFlow.hasOwnProperty("nodeWeight")?processFragmentFlow.nodeWeight:1;if(paramResource&&(gridFlow.quantity=paramResource.defaultValue),ff.hasOwnProperty("flowPropertyMagnitudes")&&ff.flowPropertyMagnitudes.length>0){var ffMagnitude=ff.flowPropertyMagnitudes[0].magnitude;gridFlow.quantity=gridFlow.hasOwnProperty("quantity")?gridFlow.quantity:ffMagnitude/nodeWeight,gridFlow.magnitude=ffMagnitude*fragmentActivityLevel,gridFlow.unit=getFirstFlowProperty(ff).referenceUnit}ff.fragmentFlowID===processFragmentFlow.fragmentFlowID?(gridFlow.direction="Input"===ff.direction?"Output":"Input",gridFlow.paramWrapper=ParamModelService.naParam("reference")):gridFlow.paramWrapper=ff.isBalanceFlow?ParamModelService.naParam("balance"):ParamModelService.wrapParam(paramResource),"Input"===gridFlow.direction?inputFlows.push(gridFlow):outputFlows.push(gridFlow)}function extractFragmentFlowData(){var fragmentFlows=FragmentFlowService.getAll(),processFlows=fragmentFlows.filter(isProcessFragmentFlow);inputFlows=[],outputFlows=[],processFlows.forEach(addGridFlow),$scope.fragmentFlows=inputFlows.concat(outputFlows)}function refreshFragmentFlowParams(){$q.all([FragmentFlowService.reload({scenarioID:scenarioID,fragmentID:fragmentID}),ParamModelService.load(scenarioID)]).then(updateParamGrid,StatusService.handleFailure)}function getFlowRows(){var processFlows=ProcessFlowService.getAll();$scope.elementaryFlows={},$scope.flowsVisible=processFlows.length>0,$scope.flowsVisible&&(processFlows.forEach(function(pf){2===pf.flow.flowTypeID&&($scope.elementaryFlows[pf.flow.flowID]=pf.flow)}),defineGrids(),extractFragmentFlowData())}function createProcessDissipationParamGrid(){function handleAppliedChanges(){ParamModelService.load(scenarioID).then(updateResults,StatusService.handleFailure)}function updateResults(){StatusService.stopWaiting(),grid.data.forEach(updateGridRow),$scope.lciaResults={},getLciaResults()}function updateGridRow(row){row.paramWrapper=ParamModelService.wrapParam(ParamModelService.getProcessFlowParam(scenarioID,processID,row.emissionFlowID,6))}function addGridRow(df){var errMsg=null,row=null;if(df.flowPropertyID){var fp=FlowPropertyMagnitudeService.get(df.flowPropertyID);if(fp&&fp.flowProperty)if(fp=fp.flowProperty,df.emissionFlowID){var ef=$scope.elementaryFlows[df.emissionFlowID];if(ef){var param=ParamModelService.getProcessFlowParam(scenarioID,processID,ef.flowID,6),wrappedParam=ParamModelService.wrapParam(param);row=df,row.flowPropertyName=fp.name,row.paramWrapper=wrappedParam,row.flowName=ef.name}else errMsg="Emission flow was not found."}else errMsg="Missing emissionFlowID.";else errMsg="Flow property was not found."}else errMsg="Missing flowPropertyID.";row?gridData.push(row):($log.error("Skipping process dissipation resource..."),$log.error(JSON.stringify(df)),errMsg&&$log.error(errMsg))}function changeParam(row){var paramResource=ParamModelService.changeExistingParam(row.paramWrapper);return paramResource||(paramResource={scenarioID:$scope.scenario.scenarioID,processID:$scope.process.processID,flowID:row.emissionFlowID,value:+row.paramWrapper.value,paramTypeID:6}),paramResource}var canUpdate=ScenarioModelService.canUpdate($scope.scenario),gridData=[],grid={data:[],columns:[{field:"flowPropertyName",displayName:"Flow Property",enableCellEdit:!1},{field:"dissipationFactor",displayName:"Dissipation Factor",enableCellEdit:!1},{field:"scale",displayName:"Scale",cellFilter:"numFormat",enableCellEdit:!1},{field:"flowName",displayName:"Emission",enableCellEdit:!1}],params:{targetIndex:1,canUpdate:canUpdate}};return grid.canApply=function(){return ParamModelService.canApply($scope.scenario,grid.data)},grid.canRevert=function(){return ParamModelService.canRevert($scope.scenario,grid.data)},grid.applyChanges=function(){var changedParams=ParamModelService.getChangedData(grid.data);return StatusService.startWaiting(),ParamModelService.updateResources($scope.scenario.scenarioID,changedParams.map(changeParam),handleAppliedChanges,StatusService.handleFailure)},grid.revertChanges=function(){return ParamModelService.revertChanges(grid.data)},grid.extractData=function(){var dissipationFlows=ProcessDissipationService.getAll();dissipationFlows.forEach(addGridRow),grid.data=gridData},grid}var processID=0,fragmentFlowID=0,fragmentID=0,scenarioID=MODEL_BASE_CASE_SCENARIO_ID,processFragmentFlow=null,inputFlows=[],outputFlows=[],fragmentActivityLevel=1;$scope.canApply=function(){return $scope.scenario&&ScenarioModelService.canUpdate($scope.scenario)&&ParamModelService.canApplyChanges($scope.fragmentFlows)},$scope.canRevert=function(){return $scope.scenario&&ScenarioModelService.canUpdate($scope.scenario)&&ParamModelService.canRevertChanges($scope.fragmentFlows)},$scope.canReturn=function(){return ParamModelService.canAbandonChanges($scope.fragmentFlows)},$scope.applyChanges=function(){StatusService.startWaiting(),ParamModelService.applyFragmentFlowParamChanges($scope.scenario.scenarioID,$scope.fragmentFlows,refreshFragmentFlowParams,StatusService.handleFailure)},$scope.revertChanges=function(){ParamModelService.revertChanges($scope.fragmentFlows)},$scope.goBackToFragment=function(navIndex){var context=FragmentNavigationService.getContext();FragmentNavigationService.setLast(navIndex),$state.go("^",{scenarioID:context.scenarioID,fragmentID:context.fragmentID})},$scope.viewProcessFlowParam=function(lciaMethodID){$state.go(".flow-param",{scenarioID:scenarioID,processID:processID,lciaMethodID:lciaMethodID})},$scope.process=null,$scope.processComment=null,$scope.scenario=null,$scope.selection={},$scope.elementaryFlows={},$scope.options={sortInfo:{fields:["direction"],directions:["asc"]}},$scope.fragmentFlows=[],$scope.paramGrid={},$scope.lciaResults={},$scope.panelHeadingStyle={},$scope.activityLevel=1,$scope.lciaMsg="",$scope.flowsVisible=!0,getStateParams(),getData()}]),angular.module("lcaApp.process.LCIA",["ui.router","lcaApp.resources.service","lcaApp.status.service","lcaApp.referenceLink.directive","lcaApp.lciaBar.directive","lcaApp.colorCode.service","lcaApp.format","lcaApp.fragmentNavigation.service","lcaApp.lciaDetail.service","lcaApp.models.param","lcaApp.models.scenario","LocalStorageModule"]).controller("ProcessLciaController",["$scope","$stateParams","$state","StatusService","$q","$log","ScenarioModelService","ProcessForFlowTypeService","ProcessFlowService","LciaMethodService","FlowPropertyForProcessService","LciaResultForProcessService","ColorCodeService","FragmentNavigationService","MODEL_BASE_CASE_SCENARIO_ID","LciaDetailService","ParamModelService","localStorageService",function($scope,$stateParams,$state,StatusService,$q,$log,ScenarioModelService,ProcessForFlowTypeService,ProcessFlowService,LciaMethodService,FlowPropertyForProcessService,LciaResultForProcessService,ColorCodeService,FragmentNavigationService,MODEL_BASE_CASE_SCENARIO_ID,LciaDetailService,ParamModelService,localStorageService){function extractResult(result){var lciaDetail=null,lciaMethod=LciaMethodService.get(result.lciaMethodID),colors=ColorCodeService.getImpactCategoryColors(lciaMethod.impactCategoryID),activityLevel="activityLevel"in $scope?$scope.activityLevel:1;result.lciaScore[0].lciaDetail.length>0?(lciaDetail=LciaDetailService.createInstance(),lciaDetail.colors(colors).activityLevel(activityLevel).scenarioID($scope.scenario.scenarioID).processID(processID).lciaMethodID(result.lciaMethodID).resultDetails(result.lciaScore[0].lciaDetail).prepareBarChartData(),$scope.panelHeadingStyle[lciaMethod.lciaMethodID]={}):$scope.panelHeadingStyle[lciaMethod.lciaMethodID]={"background-color":lciaMethod.getDefaultColor()},$scope.lciaResults[lciaMethod.lciaMethodID]={cumulativeResult:(result.lciaScore[0].cumulativeResult*activityLevel).toPrecision(4),detail:lciaDetail}}function getLciaResult(lciaMethod){LciaResultForProcessService.get({scenarioID:$scope.scenario.scenarioID,lciaMethodID:lciaMethod.lciaMethodID,processID:processID},extractResult)}function getLciaResults(){StatusService.stopWaiting(),$scope.lciaMethods.forEach(getLciaResult)}function getProcessResults(){setActiveProcessID(),getFlowRows(),getLciaResults()}function getScenarioResults(){getLciaResults()}function getStateParams(){"activity"in $stateParams&&($scope.activityLevel=+$stateParams.activity),"scenarioID"in $stateParams&&(defaultScenarioID=+$stateParams.scenarioID),"processID"in $stateParams&&(processID=+$stateParams.processID)}function prepareViewWithSelection(){var scenario=ScenarioModelService.get(defaultScenarioID);if($scope.scenarios=ScenarioModelService.getAll(),scenario||$scope.scenarios.length>0&&(scenario=$scope.scenarios[0]),scenario){var processes;$scope.selection.scenario=$scope.scenario=$scope.scenarios.find(function(element){return element.scenarioID===scenario.scenarioID}),processes=ProcessForFlowTypeService.getAll(),processes.sort(ProcessForFlowTypeService.compareByName),$scope.processes=processes,$scope.selection.process=$scope.process=$scope.processes.find(function(element){return element.processID===processID})}}function handleSuccess(){prepareViewWithSelection(),$scope.process&&(setActiveProcessID(),$scope.lciaMethods=LciaMethodService.getAll().filter(function(m){return m.getIsActive()}),getFlowRows()),$scope.scenario&&getDataFilteredByScenario()}function getDataFilteredByProcess(){$q.all([ProcessFlowService.load({processID:processID}),FlowPropertyForProcessService.load({processID:processID})]).then(getProcessResults,StatusService.handleFailure)}function getDataFilteredByScenario(){ParamModelService.load($scope.scenario.scenarioID).then(getScenarioResults,StatusService.handleFailure)}function getData(){$q.all([ScenarioModelService.load(),ProcessForFlowTypeService.load({flowTypeID:2}),LciaMethodService.load(),ProcessFlowService.load({processID:processID}),FlowPropertyForProcessService.load({processID:processID})]).then(handleSuccess,StatusService.handleFailure)}function getFlowRows(){var processFlows=ProcessFlowService.getAll(),activityLevel="activityLevel"in $scope?$scope.activityLevel:1;$scope.elementaryFlows={},$scope.flowsVisible=processFlows.length>0,$scope.inputFlows=[],$scope.outputFlows=[],processFlows.forEach(function(pf){var rowObj,fp;switch(pf.flow.flowTypeID){case 1:fp=FlowPropertyForProcessService.get(pf.flow.referenceFlowPropertyID),rowObj={name:pf.flow.name,magnitude:pf.quantity*activityLevel,unit:fp.referenceUnit},"Input"===pf.direction?$scope.inputFlows.push(rowObj):"Output"===pf.direction&&$scope.outputFlows.push(rowObj);break;case 2:$scope.elementaryFlows[pf.flow.flowID]=pf.flow}})}function getActiveScenarioID(){var activeID=ScenarioModelService.getActiveID();activeID&&(defaultScenarioID=activeID)}function getActiveProcessID(){var id=localStorageService.get(processStorageKey);id&&(processID=+id)}function setActiveProcessID(){localStorageService.set(processStorageKey,processID)}var processID=1,defaultScenarioID=MODEL_BASE_CASE_SCENARIO_ID,processStorageKey="activeProcessID";$scope.goBackToFragment=function(navIndex){FragmentNavigationService.setLast(navIndex),$state.go("^")},$scope.onScenarioChange=function(){$scope.scenario=$scope.selection.scenario,ScenarioModelService.setActiveID($scope.scenario.scenarioID),getDataFilteredByScenario()},$scope.onProcessChange=function(){$scope.process=$scope.selection.process,processID=$scope.process.processID,getDataFilteredByProcess()},$scope.viewProcessFlowParam=function(lciaMethodID){$state.go(".flow-param",{scenarioID:$scope.scenario.scenarioID,processID:processID,lciaMethodID:lciaMethodID})},$scope.process=null,$scope.scenario=null,$scope.selection={},$scope.elementaryFlows={},$scope.inputFlows=[],$scope.outputFlows=[],$scope.lciaResults={},$scope.panelHeadingStyle={},getActiveScenarioID(),getActiveProcessID(),getStateParams(),StatusService.startWaiting(),getData()}]),angular.module("lcaApp.scenario.clone",["ui.bootstrap"]).controller("ScenarioCloneController",function($scope,$modalInstance,scenario){$scope.scenario=scenario,$scope.ok=function(){$modalInstance.close($scope.scenario)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}),angular.module("lcaApp.scenario.detail",["lcaApp.resources.service","lcaApp.status.service","lcaApp.models.scenario","lcaApp.models.param","lcaApp.paramGrid.directive"]).controller("ScenarioDetailController",["$scope","$window","StatusService","$state","$stateParams","ScenarioModelService","FragmentService","ParamModelService","FlowService","FlowPropertyMagnitudeService","PARAM_TYPE_NAME","PARAM_VALUE_STATUS","$q",function($scope,$window,StatusService,$state,$stateParams,ScenarioModelService,FragmentService,ParamModelService,FlowService,FlowPropertyMagnitudeService,PARAM_TYPE_NAME,PARAM_VALUE_STATUS,$q){function refreshParameters(){ParamModelService.getResources($scope.scenario.scenarioID).then(displayParameters,StatusService.handleFailure)}function paramNameChanged(data){return data.some(function(d){return!angular.equals(d.paramWrapper.paramResource.name,d.name)})}function changeParam(p){var paramResource=ParamModelService.changeExistingParam(p.paramWrapper);return p.name&&(paramResource.name=p.name),paramResource}function setGridColumns(){var canUpdate=$scope.scenario&&ScenarioModelService.canUpdate($scope.scenario);$scope.gridColumns=[{field:"type",displayName:"Parameter Type",enableCellEdit:!1,width:125},{field:"name",displayName:"Parameter Name",enableCellEdit:canUpdate,width:400},{field:"defaultValue",displayName:"Default Value",cellFilter:"numFormat",enableCellEdit:!1}],$scope.params={targetIndex:2,canUpdate:canUpdate}}function displayParameters(params){var gridData=[];StatusService.stopWaiting(),params.forEach(function(p){var rowObj={name:null,type:null,defaultValue:p.defaultValue,paramWrapper:ParamModelService.wrapParam(p)};p.hasOwnProperty("name")&&(rowObj.name=p.name),p.hasOwnProperty("paramTypeID")&&(rowObj.type=PARAM_TYPE_NAME[p.paramTypeID]),gridData.push(rowObj)}),setGridColumns(),$scope.gridData=gridData}function displayReferenceFlow(){var flowProps=FlowPropertyMagnitudeService.getAll();if($scope.referenceFlow=FlowService.get($scope.scenario.referenceFlowID),flowProps.length){var fp=flowProps[0].flowProperty;fp&&fp.hasOwnProperty("referenceUnit")&&($scope.unit=fp.referenceUnit)}}function getReferenceFlow(flowID){$q.all([FlowService.load({flowID:flowID}),FlowPropertyMagnitudeService.load({flowID:flowID})]).then(displayReferenceFlow)}function displayScenario(){var scenario;StatusService.stopWaiting(),scenario=ScenarioModelService.get($stateParams.scenarioID),scenario?($scope.scenario=scenario,$scope.fragment=FragmentService.get(scenario.topLevelFragmentID),StatusService.startWaiting(),ParamModelService.getResources(scenario.scenarioID).then(displayParameters,StatusService.handleFailure),scenario.referenceFlowID&&getReferenceFlow(scenario.referenceFlowID)):StatusService.handleFailure("Invalid Scenario ID parameter.")}$scope.scenario=null,$scope.fragment=null,$scope.editScenario=function(){$state.go(".edit")},$scope.hideEdit=function(scenario){return!(scenario&&ScenarioModelService.canUpdate(scenario))},$scope.gridData=[],$scope.gridColumns=[],$scope.canApply=function(){return $scope.scenario&&ScenarioModelService.canUpdate($scope.scenario)&&(ParamModelService.canApplyChanges($scope.gridData)||paramNameChanged($scope.gridData))},$scope.canRevert=function(){return $scope.scenario&&ScenarioModelService.canUpdate($scope.scenario)&&(ParamModelService.canRevertChanges($scope.gridData)||paramNameChanged($scope.gridData))},$scope.applyChanges=function(){var changedParams=$scope.gridData.filter(function(d){return d.paramWrapper.editStatus===PARAM_VALUE_STATUS.changed||!angular.equals(d.paramWrapper.paramResource.name,d.name)});StatusService.startWaiting(),ParamModelService.updateResources($scope.scenario.scenarioID,changedParams.map(changeParam),refreshParameters,StatusService.handleFailure)},$scope.revertChanges=function(){$scope.gridData.forEach(function(e){var origParam=e.paramWrapper.paramResource;e.name=origParam&&e.hasOwnProperty("name")?origParam.name:null}),ParamModelService.revertChanges($scope.gridData)},StatusService.startWaiting(),$q.all([ScenarioModelService.load(),FragmentService.load()]).then(displayScenario,StatusService.handleFailure)}]),angular.module("lcaApp.scenario.edit",["ui.router","lcaApp.resources.service","lcaApp.status.service"]).controller("ScenarioEditController",["$scope","$state","$stateParams","$q","StatusService","ScenarioService","FragmentService","FlowService","FlowPropertyMagnitudeService",function($scope,$state,$stateParams,$q,StatusService,ScenarioService,FragmentService,FlowService,FlowPropertyMagnitudeService){function changeFragmentFields(){if($scope.scenario.topLevelFragmentID){var fragment=FragmentService.get($scope.scenario.topLevelFragmentID);$scope.scenario.name!==defaultName&&$scope.scenario.name||(defaultName=fragment.name,$scope.scenario.name=defaultName),fragment.termFlowID&&($scope.scenario.referenceFlowID=fragment.termFlowID,getReferenceFlow(fragment.termFlowID))}}function goBack(){$stateParams.scenarioID?$state.go("^"):$state.go("home")}function handleSuccess(){StatusService.stopWaiting(),goBack()}function displayReferenceFlow(){var flowProps=FlowPropertyMagnitudeService.getAll();if($scope.referenceFlow=FlowService.get($scope.scenario.referenceFlowID),flowProps.length){var fp=flowProps[0].flowProperty;fp&&fp.hasOwnProperty("referenceUnit")&&($scope.unit=fp.referenceUnit)}}function getReferenceFlow(flowID){$q.all([FlowService.load({flowID:flowID}),FlowPropertyMagnitudeService.load({flowID:flowID})]).then(displayReferenceFlow)}function setScope(){StatusService.stopWaiting(),$scope.fragments=FragmentService.getAll(),$stateParams.scenarioID?(existingScenario=ScenarioService.get($stateParams.scenarioID),existingScenario?($scope.scenario={scenarioID:existingScenario.scenarioID,name:existingScenario.name,description:existingScenario.description,activityLevel:existingScenario.activityLevel,topLevelFragmentID:existingScenario.topLevelFragmentID},existingScenario.referenceFlowID&&($scope.scenario.referenceFlowID=existingScenario.referenceFlowID,getReferenceFlow(existingScenario.referenceFlowID))):StatusService.handleFailure("Invalid scenarioID : "+$stateParams.scenarioID)):$scope.scenario={name:defaultName,activityLevel:1,topLevelFragmentID:null}}var existingScenario=null,defaultName="";$scope.save=function(){$scope.form.$valid&&(StatusService.startWaiting(),existingScenario?(angular.copy($scope.scenario,existingScenario),ScenarioService.update({scenarioID:existingScenario.scenarioID},existingScenario,handleSuccess,StatusService.handleFailure)):ScenarioService.create(null,$scope.scenario,handleSuccess,StatusService.handleFailure))},$scope.revertChanges=function(){goBack()},$scope.onFragmentChange=changeFragmentFields,StatusService.startWaiting(),$q.all([ScenarioService.load(),FragmentService.load()]).then(setScope,StatusService.handleFailure)}]),angular.module("lcaApp.html",["components/modal/modal-confirm.html","composition-profiles/composition-profiles.html","fragment-lcia/fragment-lcia.html","fragment-sankey/fragment-sankey.html","home/home.html","lcia-comparison/lcia-comparison.html","lcia-method/lcia-method-detail.html","process-flow-param/process-flow-param.html","process-instance/process-instance.html","process-lcia/process-lcia.html","scenario/scenario-clone.html","scenario/scenario-detail.html","scenario/scenario-edit.html"]),angular.module("components/modal/modal-confirm.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("components/modal/modal-confirm.html",'<div class="modal-header">\n    <h3 class="modal-title">{{title}}</h3>\n</div>\n<div class="modal-body">\n    <p>{{question}}</p>\n</div>\n<div class="modal-footer">\n    <button class="btn btn-primary" ng-click="ok()">Yes</button>\n    <button class="btn btn-default" ng-click="cancel()">No</button>\n</div>\n')}]),angular.module("composition-profiles/composition-profiles.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("composition-profiles/composition-profiles.html",'<div>\n    <info>{{infoMsg.compositionProfile.msg}}</info>\n    <dl class="dl-horizontal">\n        <dt>Composition Flow</dt>\n        <dd>\n            <select ng-model="flow" ng-options="f.name for f in flows"\n                    ng-change="onFlowChange()">\n            </select>\n        </dd>\n        <dt>Reference Property</dt>\n        <dd>\n            {{referenceFlowProperty.name}}\n        </dd>\n        <dt>Reference Unit</dt>\n        <dd>\n            {{referenceFlowProperty.referenceUnit}}\n        </dd>\n    </dl>\n</div>\n<div class="panel panel-default">\n    <div class="panel-heading">\n        <span class="panel-title">Flow Property Magnitudes</span>\n    </div>\n    <div class="panel-body">\n    <info>{{infoMsg.compositionProfile.content}}<p></p>\n        {{infoMsg.compositionProfile.ncv}}\n    </info>\n        <label for="selectScenario">Scenario</label>\n        <select id="selectScenario" ng-model="scenario"\n                ng-options="s.name for s in scenarios"\n                ng-disabled="!paramGrid.canChangeScenario()"\n                ng-change="onScenarioChange()"></select>\n        <span class="pull-right">\n            <change-buttons can-apply="paramGrid.canApply()"\n                            apply-changes="paramGrid.applyChanges()"\n                            can-revert="paramGrid.canRevert()"\n                            revert-changes="paramGrid.revertChanges()">\n            </change-buttons>\n        </span>\n    </div>\n    <param-grid ng-if="paramGrid" options="paramGrid.options" data="paramGrid.data" columns="paramGrid.columns" params="paramGrid.params"></param-grid>\n</div>\n\n')
}]),angular.module("fragment-lcia/fragment-lcia.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("fragment-lcia/fragment-lcia.html",'<!-- HTML template for Fragment Flows view-->\n<div ng-if="navigationService===null">\n    <p class="desc">{{infoMsg.fragmentLcia.msgScenario}}</p>\n    <info>{{infoMsg.fragmentLcia.xport}}</info>\n    <dl class="dl-horizontal">\n        <dt>Fragment</dt>\n        <dd>\n            <span isteven-multi-select\n                  button-label="name"\n                  item-label="name"\n                  input-model="fragmentSelection.options"\n                  output-model="fragmentSelection.model"\n                  tick-property="selected"\n                  selection-mode="single"\n                  on-item-click="onFragmentChange()">\n            </span>\n            <button type="button" class="btn btn-default btn-small pull-right" ng-csv="getCsvData()" csv-header="csvHeader"\n                    filename="{{csvFileName}}" lazy-load="true" ng-disabled="disableExport()">\n                Export to CSV\n            </button>\n        </dd>\n        <dt>Scenarios</dt>\n        <dd>\n            <span isteven-multi-select\n                  button-label="name"\n                  item-label="name"\n                  input-model="scenarioSelection.options"\n                  output-model="scenarioSelection.model"\n                  tick-property="selected">\n            </span>\n        </dd>\n    </dl>\n</div>\n<div ng-if="navigationService">\n    <p class="desc">{{infoMsg.fragmentLcia.msgFragment}}</p>\n    <info>{{infoMsg.fragmentLcia.xport}}</info>\n    <div class="row">\n        <div class="col-md-6">\n            <h4>Fragment LCIA Results</h4>\n        </div>\n        <div class="col-md-6">\n            <div class="pull-right">\n                <button ng-show="parentStateIsSankey" type="button" class="btn btn-link "\n                        ui-sref="^">\n                    Show Sankey Diagram\n                </button>\n                <button type="button" class="btn btn-default btn-small" ng-csv="getCsvData()" csv-header="csvHeader"\n                        filename="{{csvFileName}}" lazy-load="true" ng-disabled="disableExport()">\n                    Export to CSV\n                </button>\n            </div>\n        </div>\n    </div>\n    <dl class="dl-horizontal">\n        <dt>Scenario</dt>\n        <dd><a ui-sref="home.scenario({scenarioID: navigationScenario.scenarioID})">{{navigationScenario.name}}</a></dd>\n        <dt>Fragment</dt>\n        <dd>\n                <span ng-repeat="navFrag in navigationService.getAll()">\n                    <ng-switch on="$last">\n                        <span ng-switch-when="true">{{navFrag.name}}</span>\n                        <span ng-switch-default><a class="fragment-link"\n                                                   ng-click="onParentFragmentSelected(navFrag,$index)">{{navFrag.name}}</a>\n                     ></span>\n                    </ng-switch>\n                </span>\n        </dd>\n        <dt>Sub-fragments</dt>\n        <dd ng-if="!navigationSelection.options.length">\n        </dd>\n        <dd ng-if="navigationSelection.options.length > 0">\n               <span isteven-multi-select\n                     button-label="name"\n                     item-label="name"\n                     input-model="navigationSelection.options"\n                     output-model="navigationSelection.model"\n                     tick-property="selected"\n                     selection-mode="single"\n                     on-item-click="onFragmentNavigation()">\n                </span>\n        </dd>\n        <dt>Activity Level</dt>\n        <dd>{{fragment.activityLevel | numFormat }}</dd>\n    </dl>\n</div>\n<info>{{infoMsg.fragmentLcia.waterfall}}<p></p>\n      {{infoMsg.fragmentLcia.lcia}}\n</info>\n<div class="row" ng-if="scenarios.length">\n    <div ng-repeat="method in methods" class="col-md-6">\n        <div class="panel panel-default">\n            <div class="panel-heading" ng-style="{\'background-color\' : method.getDefaultColor()}">\n                <button type="button" class="close" ng-click="removeMethod(method)" aria-label="Close">\n                    <span aria-hidden="true">×</span>\n                </button>\n                <dt>\n                    <a ui-sref="home.lcia-method({lciaMethodID: method.lciaMethodID})">\n                        {{method.getShortName()}}\n                    </a>\n                </dt>\n                <dd>{{method.referenceFlowProperty.name}}</dd>\n            </div>\n            <div class="panel-body">\n                <div ng-repeat="scenario in scenarios" class="row">\n                    <div class="lcia-bar-container">\n                        <waterfall-chart service="waterfalls[method.lciaMethodID]" index="$index"\n                                         color="method.getDefaultColor()" chart-title="scenario.name"\n                                         unit="method.referenceFlowProperty.referenceUnit"></waterfall-chart>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n')}]),angular.module("fragment-sankey/fragment-sankey.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("fragment-sankey/fragment-sankey.html",'<!-- Partial html for fragment sankey view -->\n<p class="desc">{{infoMsg.fragmentSankey.msg}}</p>\n<div class="row">\n    <div class="col-md-8">\n    <info>{{infoMsg.fragmentSankey.msg1}}<p></p>\n          {{infoMsg.fragmentSankey.msg2}}\n    </info>\n        <dl class="dl-horizontal">\n            <dt>Scenario</dt>\n            <dd>\n                <select ng-model="scenario" ng-options="s.name for s in scenarios"\n                        ng-change="onScenarioChange()">\n                </select>\n            <dt>Fragment</dt>\n            <dd>\n        <span ng-repeat="navFrag in navigationService.getAll()">\n            <ng-switch on="$last">\n                <span ng-switch-when="true">{{navFrag.name}}</span>\n                <span ng-switch-default><a class="fragment-link" ng-click="onParentFragmentSelected(navFrag,$index)">{{navFrag.name}}</a>\n             ></span>\n            </ng-switch>\n        </span>\n            </dd>\n\n            <dt>Activity Level</dt>\n            <dd>{{fragment.activityLevel | numFormat }}</dd>\n            <dt>Flow Property Type</dt>\n            <dd>\n                <select id="flow-prop-select" ng-model="selectedFlowProperty"\n                        ng-options="fp.name for fp in flowProperties"\n                        ng-change="onFlowPropertyChange()">\n                </select>\n            </dd>\n            <dt>Reference Unit</dt>\n            <dd id="refUnitName">{{selectedFlowProperty.referenceUnit}}</dd>\n        </dl>\n    </div>\n    <div class="col-md-2">\n        <svg id="sankeyLegend">\n        </svg>\n    </div>\n    <div class="col-md-2">\n        <button type="button" class="btn btn-link pull-right"\n                ui-sref=".fragment-lcia({scenarioID: scenario.scenarioID, fragmentID: scenario.topLevelFragmentID})">\n            Show Fragment LCIA\n        </button>\n    </div>\n</div>\n<div class="row">\n<div class="col-md-12">\n    <div class="sankey-container">\n        <!--suppress HtmlUnknownTag -->\n        <sankey-diagram graph="graph" selected-node="selectedNode" color="color"\n                        mouse-over-node="mouseOverNode" legend-selector="legendSelector"></sankey-diagram>\n    </div>\n</div>\n</div>\n<br>\n<div class="panel panel-default" ng-if="gridFlows.length">\n    <div class="panel-heading">\n        <span class="panel-title">Fragment Flows</span>\n    </div>\n    <div class="panel-body">\n      <info>{{infoMsg.fragmentSankey.fragmentFlows.msg}}</info>\n      <p class="desc">{{infoMsg.sort}}</p>\n        <param-grid options="options" data="gridFlows" columns="columns" params="params"></param-grid>\n    </div>\n</div>\n\n\n\n\n')}]),angular.module("home/home.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("home/home.html",'<!-- Partial html for home page -->\n<p class="desc">{{infoMsg.home.msg}}</p>\n<info>{{infoMsg.home.help}}\n    <p></p>\n    <p>{{infoMsg.home.msg1}}</p>\n    <p>{{infoMsg.home.msg2}}</p>\n       {{infoMsg.home.msg3}}\n</info>\n<div class="panel panel-default">\n    <div class="panel-heading">\n        <span class="panel-title">Scenarios</span>\n        <button class="btn btn-default btn-sm pull-right" ng-show="canCreate" ng-click="createScenario()">New</button>\n        <div class="clearfix"></div>\n    </div>\n    <div class="panel-body">\n    <info>{{infoMsg.home.scenarios.msg}}</info>\n    <p class="desc">{{infoMsg.home.scenarios.msg2}}</p>\n    <table class="table table-condensed">\n        <thead>\n        <tr>\n            <th>Scenario</th>\n            <th>Activity Level</th>\n            <th>Top Level Fragment</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr ng-repeat="scenario in scenarios">\n            <td>\n                <a ui-sref=".scenario({scenarioID: scenario.scenarioID})">\n                {{scenario.name}}\n                </a>\n            </td>\n            <td>{{scenario.activityLevel | numFormat}}</td>\n            <td>\n                <a ui-sref=".fragment-sankey({scenarioID: scenario.scenarioID, fragmentID: scenario.topLevelFragmentID})">\n                    {{fragments[scenario.topLevelFragmentID].name}}\n                </a>\n            </td>\n            <td>\n                <button type="button" class="btn btn-default btn-sm" title="Clone" ng-click="cloneScenario(scenario)"\n                        ng-show="canCreate">\n                    <span class="glyphicon glyphicon-duplicate" aria-hidden="true"  ></span>\n                </button>\n                <button type="button" class="btn btn-default btn-sm" title="Delete" ng-click="deleteScenario(scenario)"\n                        ng-show="canDelete(scenario)" >\n                    <span class="glyphicon glyphicon-trash" aria-hidden="true"  ></span>\n                </button>\n            </td>\n        </tr>\n        </tbody>\n    </table>\n    </div>\n</div>\n<div class="panel panel-default">\n    <div class="panel-heading">\n        <span class="panel-title">LCIA Methods</span>\n    </div>\n    <div class="panel-body">\n    <info>{{infoMsg.home.lciaMethods.msg}}</info>\n    <p class="desc">{{infoMsg.home.lciaMethods.msg1}}</p>\n    <table class="table table-condensed">\n        <thead>\n        <tr>\n            <th>Active</th>\n            <th>Name</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr ng-repeat="method in lciaMethods">\n            <td>\n                <label>\n                    <input type="checkbox" ng-model="method.isActive" ng-change="method.storeIsActive()">\n                </label>\n            </td>\n            <td ng-style="{\'background-color\' : method.getDefaultColor()}">\n                <a ui-sref=".lcia-method({lciaMethodID: method.lciaMethodID})">\n                    {{method.name}}\n                </a>\n            </td>\n        </tr>\n        </tbody>\n    </table>\n    </div>\n</div>\n')}]),angular.module("lcia-comparison/lcia-comparison.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("lcia-comparison/lcia-comparison.html",'<!-- HTML template for LCIA comparison view-->\n<div class="row">\n    <div class="col-md-10">\n        <info>\n            This view allows you to compare LCIA results for various combinations of fragments, processes, scenarios and activity levels.\n            <p></p>\n            Results can be saved to a CSV file by clicking on the <b>Export to CSV</b> button.\n        </info>\n    </div>\n    <div class="col-md-2">\n        <button id="export-lcia-results" class="btn btn-default btn-small pull-right" ng-csv="csv.getData()" csv-header="csvHeader"\n                filename="{{csvFileName}}" lazy-load="true" ng-disabled="!gridData.length || !lciaMethods.length">\n            Export to CSV\n        </button>\n    </div>\n    <div class="clearfix"></div>\n</div>\n<div class="panel panel-default" id="lcia-selection">\n    <div class="panel-body">\n        <info>\n            This table controls the vertical dimension of the bar charts below.\n            Each bar corresponds to an LCIA result for a table row.\n            If a chart label is provided, it will appear on the vertical axis. Otherwise, the row number will appear.\n            <p></p>\n            You may change activity level and chart label entries. A row can be removed by clicking on the <b>x</b> button\n            at the end of the row.\n        </info>\n        <div class="panel panel-default">\n            <div id="selection-grid" ng-grid="gridOpts" class="gridStyle"></div>\n        </div>\n        <info>\n            Select Fragment or Process type, then select an instance of that type and a scenario.\n            When <b>Process</b> is selected, the adjacent selection list only contains processes having elementary flows.\n            You may change the activity level (default is 1) and add a chart label (maximum length is 7 characters).\n            Then click on the <b>Add</b> button to add your selection to the table above.\n        </info>\n        <form class="form-inline">\n            <div class="form-group">\n                <label for="component-select">\n                    <select id="select-type" ng-model=selection.type>\n                        <option value="Fragment" selected>Fragment</option>\n                        <option value="Process">Process</option>\n                    </select>\n                </label>\n                <span id="component-select">\n                    <select ng-if="selection.isFragment()" ng-model="selection.fragment"\n                            ng-options="f.name for f in selection.fragmentOptions">\n                    </select>\n                    <select ng-if="!selection.isFragment()" ng-model="selection.process"\n                            title="Processes with elementary flows"\n                            ng-options="p.getLongName() for p in selection.processOptions">\n                    </select>\n                </span>\n            </div>\n            <div class="form-group">\n                <label for="select-scenario">Scenario</label>\n                <select id="select-scenario" ng-model="selection.scenario"\n                        ng-options="scenario.name for scenario in selection.scenarioOptions">\n                </select>\n            </div>\n            <div class="form-group">\n                <label for="activity-level">Activity Level</label>\n                <input type="number" step="any" class="form-control input-sm" id="activity-level"\n                       ng-model="selection.activityLevel">\n            </div>\n            <div class="form-group">\n                <label for="chart-label">Chart Label</label>\n                <input type="text" maxlength={{maxLabelLen}} class="form-control input-sm" id="chart-label"\n                       ng-model="selection.chartLabel">\n            </div>\n            <button type="submit" class="btn btn-primary btn-sm" ng-click="selection.add()" aria-label="Add"\n                    title="Display LCIA results" accesskey="A">\n                <U>A</U>dd\n            </button>\n        </form>\n    </div>\n</div>\n<div ng-if="gridData.length">\n    <info>\n        A bar chart of LCIA results is shown for every active LCIA Method. You can remove a chart by clicking on the <b>x</b> at the top right corner.\n    </info>\n    <div class="row">\n        <div ng-repeat="method in lciaMethods" class="col-md-4">\n            <div class="panel panel-default">\n                <!--<div class="panel-heading" ng-style="{\'background-color\' : method.getDefaultColor()}">-->\n\n                <button type="button" class="close" ng-click="removeMethod(method)" aria-label="Close">\n                    <span aria-hidden="true">×</span>\n                </button>\n                <div class="panel-body">\n                    <a ui-sref="home.lcia-method({lciaMethodID: method.lciaMethodID})">\n                        {{method.getShortName()}}\n                    </a>\n\n                    <p>\n                        <small>{{method.referenceFlowProperty.name}}</small>\n                    </p>\n                    <!--</div>-->\n                    <svg class="plot-container">\n                        <plot config="plot.config[method.lciaMethodID]" data="plot.data[method.lciaMethodID]"></plot>\n                    </svg>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n')}]),angular.module("lcia-method/lcia-method-detail.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("lcia-method/lcia-method-detail.html",'<accordion close-others="false">\n    <accordion-group is-open="accordionStatus.attributesOpen">\n        <accordion-heading>\n            LCIA Method Attributes\n            <i class="pull-right glyphicon"\n               ng-class="{\'glyphicon-chevron-down\': accordionStatus.attributesOpen, \'glyphicon-chevron-right\': !accordionStatus.attributesOpen}"></i>\n        </accordion-heading>\n	<info>{{infoMsg.home.lciaMethods.detail}}</info>\n        <dl class="dl-horizontal">\n            <dt>Name</dt>\n            <dd>{{lciaMethod["name"]}}</dd>\n            <dt>Methodology</dt>\n            <dd>{{lciaMethod["methodology"]}}</dd>\n            <dt>Impact Category</dt>\n            <dd>{{impactCategory["name"]}}</dd>\n            <dt>Impact Indicator</dt>\n            <dd>{{lciaMethod["impactIndicator"]}}</dd>\n            <dt>Reference Year</dt>\n            <dd>{{lciaMethod["referenceYear"]}}</dd>\n            <dt>Duration</dt>\n            <dd>{{lciaMethod["duration"]}}</dd>\n            <dt>Impact Location</dt>\n            <dd>{{lciaMethod["impactLocation"]}}</dd>\n            <dt>Indicator Type</dt>\n            <dd>{{lciaMethod["indicatorType"]}}</dd>\n            <dt>Normalization</dt>\n            <dd>{{lciaMethod["normalization"]}}</dd>\n            <dt>Weighting</dt>\n            <dd>{{lciaMethod["weighting"]}}</dd>\n            <dt>Use Advice</dt>\n            <dd>{{lciaMethod["useAdvice"]}}</dd>\n            <dt>Reference Quantity</dt>\n            <dd>{{lciaMethod["referenceFlowProperty"]["name"]}}</dd>\n            <dt>ILCD Reference</dt>\n            <dd><reference-link resource="lciaMethod">LCIA Method Data Set</reference-link></dd>\n        </dl>\n    </accordion-group>\n</accordion>\n<div class="panel panel-default">\n    <div class="panel-heading">\n        <span class="panel-title">LCIA Characterization Factors</span>\n    </div>\n    <info>{{infoMsg.home.lciaMethods.factors}}</info>\n    <div class="panel-body">\n        <label for="selectScenario">Scenario</label>\n        <select id="selectScenario" ng-model="paramScenario"\n                ng-options="scenario.name for scenario in scenarios"\n                ng-disabled="!canChangeScenario()"\n                ng-change="onScenarioChange()"></select>\n        <span class="pull-right">\n            <change-buttons can-apply="canApply()"\n                            apply-changes="applyChanges()"\n                            can-revert="canRevert()"\n                            revert-changes="revertChanges()">\n            </change-buttons>\n        </span>\n    </div>\n    <param-grid options="options" data="gridData" columns="gridColumns" params="params"></param-grid>\n</div>\n\n')}]),angular.module("process-flow-param/process-flow-param.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("process-flow-param/process-flow-param.html",'<!-- Partial html for process LCIA view -->\n<div>\n    <info>{{infoMsg.processFlowParam.msg}}</info>\n    <h4>Process Emission Details</h4>\n    <dl class="dl-horizontal">\n        <dt>Scenario</dt>\n        <dd>{{scenario.name}}</dd>\n        <dt>Activity Level</dt>\n        <dd>{{activityLevel | numFormat}}</dd>\n        <dt>Process</dt>\n        <dd>{{process.name}}</dd>\n        <dt>LCIA Method</dt>\n        <dd>{{lciaMethod.name}}</dd>\n    </dl>\n    <div>\n        <span class="pull-right">\n            <button type="button" ng-disabled="!canReturn()" ui-sref="^" class="btn btn-link btn-sm">Back to Process LCIA</button>\n            <change-buttons can-apply="canApply()"\n                            apply-changes="applyChanges()"\n                            can-revert="canRevert()"\n                            revert-changes="revertChanges()">\n            </change-buttons>\n        </span>\n    </div>\n</div>\n<div class="row"  ng-style="{\'margin-bottom\' : 7 }"></div>\n<div class="panel panel-default">\n    <div class="panel-heading">\n        <span class="panel-title">Emission</span>\n    </div>\n    <div class="panel-body">\n      <info>{{infoMsg.processFlowParam.emission}}</info>\n      <p class="desc">{{infoMsg.sort}}</p>\n        <param-grid options="emission.options" data="emission.flows" columns="emission.columns" params="emission.params"></param-grid>\n    </div>\n</div>\n<div class="panel panel-default">\n    <div class="panel-heading">\n        <span class="panel-title">Dissipation</span>\n    </div>\n    <div class="panel-body">\n      <info>{{infoMsg.processFlowParam.dissipation}}</info>\n      <p class="desc">{{infoMsg.sort}}</p>\n    <param-grid options="dissipation.options" data="dissipation.flows" columns="dissipation.columns" params="dissipation.params"></param-grid>\n    </div>\n</div>\n\n\n\n\n\n\n\n')}]),angular.module("process-instance/process-instance.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("process-instance/process-instance.html",'<!-- Partial html for Process Instance view -->\n\n\n<info>{{infoMsg.processInstance.msg}}</info>\n<h4>Process Instance</h4>\n<dl class="dl-horizontal">\n    <dt>Scenario</dt>\n    <dd>{{scenario.name}}</dd>\n            <span ng-if="navigationStates.length">\n                <dt>Fragment</dt>\n                <dd>\n                <span ng-repeat="navFrag in navigationStates">\n                     <span><a class="fragment-link" ng-click="goBackToFragment($index)">{{navFrag.name}}</a></span>\n                     <span ng-if="!$last"> > </span>\n                </span>\n                </dd>\n            </span>\n    <dt>Activity Level</dt>\n    <dd>{{activityLevel | numFormat}}</dd>\n    <dt>Process</dt>\n    <dd>{{process.name}}\n    <dt>ILCD Reference</dt>\n    <dd><reference-link resource="process">Process Data Set</reference-link></dd>\n    <dt>Data Source</dt>\n    <dd>{{process.dataSource}}<span ng-if="process.isPrivate"> (private) </span></dd>\n    <dt ng-show="processComment.comment">Comment</dt>\n    <dd><div class="scenario-description">{{processComment.comment}}</div></dd>\n</dl>\n\n<div class="panel panel-default" ng-show="flowsVisible">\n    <div class="panel-heading">\n        <span class="panel-title">Fragment Flows</span>\n        <span class="pull-right">\n            <change-buttons can-apply="canApply()"\n                             apply-changes="applyChanges()"\n                             can-revert="canRevert()"\n                             revert-changes="revertChanges()">\n            </change-buttons>\n        </span>\n    </div>\n    <div class="panel-body">\n        <p class="desc">{{infoMsg.processInstance.flows}} {{infoMsg.sort}}</p>\n        <info>{{infoMsg.processInstance.flows1}}<p></p>\n              {{infoMsg.processInstance.balance}}\n        </info>\n        <param-grid options="options" data="fragmentFlows" columns="columns" params="params"></param-grid>\n    </div>\n</div>\n<div class="panel panel-default" ng-if="paramGrid.dissipation">\n    <div class="panel-heading">\n        <span class="panel-title">\n            Dissipation of\n            <a class="btn-link" ui-sref="home.composition-profiles({scenarioID: scenario.scenarioID, flowID: process.compositionFlowID})">\n            {{compositionFlow.name}}\n            </a>\n        </span>\n        <span class="pull-right">\n            <change-buttons can-apply="paramGrid.dissipation.canApply()"\n                            apply-changes="paramGrid.dissipation.applyChanges()"\n                            can-revert="paramGrid.dissipation.canRevert()"\n                            revert-changes="paramGrid.dissipation.revertChanges()">\n            </change-buttons>\n        </span>\n    </div>\n    <div class="panel-body">\n    <p class="desc">{{infoMsg.processInstance.dissipation}} {{infoMsg.sort}}</p>\n    <info>{{infoMsg.processInstance.diss1}}<p></p>\n          {{infoMsg.processInstance.diss2}}\n    </info>\n        <param-grid options="paramGrid.dissipation.options"\n                    data="paramGrid.dissipation.data"\n                    columns="paramGrid.dissipation.columns"\n                    params="paramGrid.dissipation.params">\n        </param-grid>\n    </div>\n</div>\n<div class="panel panel-default">\n    <div class="panel-heading">\n        <span class="panel-title">Process LCIA</span>\n    </div>\n    <div class="panel-body">\n      <info>{{infoMsg.processInstance.lcia}}</info>\n        <span>{{lciaMsg}}</span>\n        <ul class="list-unstyled">\n            <li ng-repeat="method in lciaMethods" class="lcia-method">\n                <div class="panel panel-default">\n                    <div class="panel-heading" ng-style="panelHeadingStyle[method.lciaMethodID]">\n                        <a ui-sref="home.lcia-method({lciaMethodID: method.lciaMethodID})">\n                            <dt>{{method.name}}</dt>\n                        </a>\n                    </div>\n                    <div class="panel-body">\n                        <dl class="dl-horizontal">\n                            <dt style="font-weight: normal">Cumulative Result:</dt>\n                            <dd><strong>{{lciaResults[method.lciaMethodID].cumulativeResult | numFormat}}\n                                {{method.referenceFlowProperty.referenceUnit}}</strong></dd>\n                            <dd>{{method.referenceFlowProperty.name}}</dd>\n                        </dl>\n                        <div class="lcia-bar-container">\n                            <lcia-bar-chart lcia="lciaResults[method.lciaMethodID].detail"\n                                            flows="elementaryFlows"></lcia-bar-chart>\n                            <button class="btn btn-default btn-sm pull-right" ng-show="lciaResults[method.lciaMethodID].detail"\n                                    ng-click="viewProcessFlowParam(method.lciaMethodID)">Flow Details\n                            </button>\n\n                        </div>\n                    </div>\n                </div>\n            </li>\n        </ul>\n    </div>\n</div>\n\n\n\n\n\n')}]),angular.module("process-lcia/process-lcia.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("process-lcia/process-lcia.html",'<!-- Partial html for process LCIA view -->\n<div class="row">\n    <div class="col-md-8">\n        <info>{{infoMsg.processLcia.msg}}</info>\n        <div ng-if="activityLevel">\n        <h4>Process LCIA</h4>\n        <dl class="dl-horizontal">\n            <dt>Scenario</dt>\n            <dd>{{scenario.name}}</dd>\n            <span ng-if="navigationStates.length">\n                <dt>Fragment</dt>\n                <dd>\n                <span ng-repeat="navFrag in navigationStates">\n                     <span><a class="fragment-link" ng-click="goBackToFragment($index)">{{navFrag.name}}</a></span>\n                     <span ng-if="!$last"> > </span>\n                </span>\n                </dd>\n            </span>\n            <dt>Activity Level</dt>\n            <dd>{{activityLevel | numFormat}}</dd>\n            <dt>Process</dt>\n            <dd>{{process.name}}</dd>\n            <dt>Data Source</dt>\n            <dd>{{process.dataSource}}<span ng-if="process.isPrivate"> (private) </span></dd>\n        </dl>\n        </div>\n        <div ng-if="!activityLevel">\n        <dl class="dl-horizontal">\n            <dt>Scenario</dt>\n            <dd>\n                <select ng-model="selection.scenario" ng-options="s.name for s in scenarios"\n                        ng-change="onScenarioChange()">\n                </select>\n            </dd>\n            <p></p>\n            <dt>Process</dt>\n            <dd>\n                <select ng-model="selection.process" ng-options="p.getLongName() for p in processes"\n                        ng-change="onProcessChange()" style="width:100%">\n                </select>\n            </dd>\n            <p></p>\n            <dt>ILCD Reference</dt>\n            <dd><reference-link resource="selection.process">Process Data Set</reference-link></dd>\n            <p></p>\n            <dt>Data Source</dt>\n            <dd>{{process.dataSource}}<span ng-if="process.isPrivate"> (private) </span></dd>\n        </dl>\n        </div>\n\n	<info>{{infoMsg.processInstance.lcia}}</info>\n        <ul class="list-unstyled">\n            <li ng-repeat="method in lciaMethods" class="lcia-method">\n                <div class="panel panel-default">\n                    <div class="panel-heading" ng-style="panelHeadingStyle[method.lciaMethodID]">\n                        <a ui-sref="home.lcia-method({lciaMethodID: method.lciaMethodID})">\n                            <dt>{{method.name}}</dt>\n                        </a>\n                    </div>\n                    <div class="panel-body">\n                        <dl class="dl-horizontal">\n                            <dt style="font-weight: normal">Cumulative Result:</dt>\n                            <dd><strong>{{lciaResults[method.lciaMethodID].cumulativeResult | numFormat}}\n                                {{method.referenceFlowProperty.referenceUnit}}</strong></dd>\n                            <dd>{{method.referenceFlowProperty.name}}</dd>\n                        </dl>\n                        <div class="lcia-bar-container">\n                            <lcia-bar-chart lcia="lciaResults[method.lciaMethodID].detail"\n                                            flows="elementaryFlows"></lcia-bar-chart>\n                            <button class="btn btn-default btn-sm pull-right" ng-show="lciaResults[method.lciaMethodID].detail"\n                                    ng-click="viewProcessFlowParam(method.lciaMethodID)">Flow Details</button>\n\n                        </div>\n                    </div>\n                </div>\n            </li>\n        </ul>\n    </div>\n    <div class="col-md-4">\n    <info>{{infoMsg.processLcia.flows}}</info>\n        <div class="flow-container" ng-show="flowsVisible">\n            <label>Input Flows</label>\n            <table class="table">\n                <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Magnitude</th>\n                    <th>Unit</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr ng-repeat="if in inputFlows">\n                    <td>{{if.name}}</td>\n                    <td>{{if.magnitude | numFormat}}</td>\n                    <td>{{if.unit}}</td>\n                </tr>\n                </tbody>\n            </table>\n            <label>Output Flows</label>\n            <table class="table">\n                <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Magnitude</th>\n                    <th>Unit</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr ng-repeat="of in outputFlows">\n                    <td>{{of.name}}</td>\n                    <td>{{of.magnitude | numFormat}}</td>\n                    <td>{{of.unit}}</td>\n                </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n\n\n\n')
}]),angular.module("scenario/scenario-clone.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("scenario/scenario-clone.html",'<div class="modal-header">\n    <h3 class="modal-title">Clone Scenario</h3>\n</div>\n<div class="modal-body">\n    <p>Please provide a distinct name for the cloned scenario.</p>\n    <div class="form-group required">\n        <label for="inputName">Scenario Name</label>\n        <input type="text" class="form-control" id="inputName" ng-model="scenario.name" required>\n    </div>\n</div>\n<div class="modal-footer">\n    <button class="btn btn-primary" ng-click="ok()">OK</button>\n    <button class="btn btn-default" ng-click="cancel()">Cancel</button>\n</div>\n')}]),angular.module("scenario/scenario-detail.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("scenario/scenario-detail.html",'<div class="panel panel-default">\n    <div class="panel-heading">\n            <span class="panel-title">Scenario Attributes</span>\n            <button class="btn btn-default btn-sm pull-right" ng-click="editScenario()" ng-hide="hideEdit(scenario)">Edit</button>\n            <div class="clearfix"></div>\n        </div>\n    <div class="panel-body">\n    <info>{{infoMsg.home.scenarios.detail}}</info>\n        <dl class="dl-horizontal">\n            <dt>Name</dt>\n            <dd>{{scenario.name}}</dd>\n            <dt>Top Level Fragment</dt>\n            <dd><a ui-sref="home.fragment-sankey({scenarioID: scenario.scenarioID, fragmentID: scenario.topLevelFragmentID})">\n                {{fragment.name}}\n            </a>\n            </dd>\n            <dt>Activity Level</dt>\n            <dd>{{scenario.activityLevel | numFormat}}</dd>\n            <dt>Reference Flow</dt>\n            <dd>{{referenceFlow.name}}</dd>\n            <dt>Reference Unit</dt>\n            <dd>{{unit}}</dd>\n            <dt>Description</dt>\n            <dd><div class="scenario-description">{{scenario.description}}</div></dd>\n        </dl>\n    </div>\n</div>\n<div class="panel panel-default">\n    <div class="panel-heading">\n        <span class="panel-title">Scenario Parameters</span>\n        <span class="pull-right">\n            <change-buttons can-apply="canApply()"\n                            apply-changes="applyChanges()"\n                            can-revert="canRevert()"\n                            revert-changes="revertChanges()">\n            </change-buttons>\n        </span>\n    </div>\n    <div class="panel-body">\n    <info>{{infoMsg.home.scenarios.params}}<p></p>\n          {{infoMsg.home.scenarios.paramTypes}}\n        <ol>\n            <li>{{infoMsg.home.scenarios.ffParam}}</li>\n            <li>{{infoMsg.home.scenarios.fpParam}}</li>\n            <li>{{infoMsg.home.scenarios.peParam}}</li>\n            <li>{{infoMsg.home.scenarios.pdParam}}</li>\n            <li>{{infoMsg.home.scenarios.lcParam}}</li>\n        </ol>\n    </info>\n    <p class="desc">{{infoMsg.sort}}</p>\n        <param-grid options="options" data="gridData" columns="gridColumns" params="params">\n        </param-grid>\n    </div>\n</div>\n')}]),angular.module("scenario/scenario-edit.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("scenario/scenario-edit.html",'<form name="form" class="form-horizontal" novalidate xmlns="">\n    <legend ng-show="scenario.scenarioID">Edit Scenario</legend>\n    <legend ng-hide="scenario.scenarioID">New Scenario</legend>\n    <div class="form-group required">\n        <label for="inputName" class="col-sm-3 control-label">Name</label>\n\n        <div class="col-sm-9">\n            <input type="text" class="form-control" id="inputName" ng-model="scenario.name" maxlength="50" required>\n        </div>\n    </div>\n    <div class="form-group">\n        <label for="inputDesc" class="col-sm-3 control-label">Description</label>\n        <div class="col-sm-9">\n            <textarea class="form-control" id="inputDesc" ng-model="scenario.description" rows="4"></textarea>\n        </div>\n    </div>\n    <div class="form-group required">\n        <label for="selectFragment" class="col-sm-3 control-label">Top Level Fragment</label>\n\n        <div class="col-sm-9">\n            <select id="selectFragment" class="form-control" ng-model="scenario.topLevelFragmentID"\n                    ng-options="fragment.fragmentID as fragment.name for fragment in fragments"\n                    ng-change="onFragmentChange()"\n                    required></select>\n        </div>\n    </div>\n\n    <div class="form-group">\n        <label for="inputAL" class="col-sm-3 control-label">Activity Level</label>\n\n        <div class="col-sm-3">\n            <input type="number" class="form-control" id="inputAL" ng-model="scenario.activityLevel">\n        </div>\n    </div>\n\n    <div class="form-group">\n        <label for="referenceFlowName" class="col-sm-3 control-label">Reference Flow</label>\n        <div class="col-sm-9">\n            <p class="form-control" type="text" id="referenceFlowName" readonly>{{referenceFlow.name}}</p>\n        </div>\n    </div>\n\n    <div class="form-group">\n        <label for="referenceUnit" class="col-sm-3 control-label">Reference Unit</label>\n        <div class="col-sm-3">\n            <p class="form-control" type="text" id="referenceUnit" readonly>{{unit}}</p>\n        </div>\n    </div>\n\n    <div class="form-group">\n        <div class="col-sm-9 pull-right">\n            <button type="submit" class="btn btn-primary" ng-disabled="form.$submitted || form.$invalid"\n                    ng-click="save()">\n                Save\n            </button>\n            <button type="button" class="btn btn-default" ng-disabled="form.$submitted" ng-click="revertChanges()">\n                Cancel\n            </button>\n        </div>\n    </div>\n</form>\n')}]);